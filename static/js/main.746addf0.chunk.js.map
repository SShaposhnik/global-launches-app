{"version":3,"sources":["containers/LaunchCatalog/component/MapChart/MapChart.js","containers/LaunchCatalog/component/TableOld/TableOld.js","containers/LaunchCatalog/component/TableOld2/TableOld2.js","containers/LaunchCatalog/component/Timer/Timer.js","containers/LaunchCatalog/component/Table/Table.js","containers/LaunchCatalog/component/NextLaunchTable/NextLaunchTable.js","containers/LaunchCatalog/component/SliderMapChart/MapChart.js","containers/LaunchCatalog/component/SliderMapChart/SliderMapChart.js","containers/Layout/index.js","App.js","index.js"],"names":["launchStatus","1","2","3","4","5","6","7","MapChart","markers","launches","map","el","id","RocketAndMissionNames","name","rocketName","rocket","status","statusNumber","markerOffset","coordinates","longitude","latitude","mapURL","PadsMapURL","wikiURL","PadsWikiURL","rocketwikiURL","RocketWikiURL","projection","width","height","className","geography","geographies","geo","key","rsmKey","fill","stroke","on","overlayClassName","title","href","target","placement","mouseLeaveDelay","strokeWidth","strokeLinecap","strokeLinejoin","transform","cx","cy","r","d","textAnchor","y","style","fontFamily","moment","locale","Table","Column","Component","LAUNCH_STATUS","OldTable2","props","showModal","setState","visible","handleOk","e","handleCancel","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","ref","node","searchInput","placeholder","value","onChange","onPressEnter","handleSearch","marginBottom","display","type","onClick","icon","SearchOutlined","size","handleReset","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","setTimeout","select","render","text","state","searchedColumn","highlightStyle","backgroundColor","searchWords","searchText","autoEscape","textToHighlight","markersLaunches","columns","align","this","onCell","selectedRows","selectedRowKeys","event","filters","statusText","indexOf","countryCode","loading","oldLaunch","RocketAndMissionName","net","textAlign","format","utc","location","pads","els","split","locationWithoutPads","spaceortName","url","reverse","dataSource","pagination","position","defaultCurrent","pageSizeOptions","showQuickJumper","hideOnSinglePage","margin","filterReset","ClearOutlined","filterConfirm","CheckOutlined","bordered","centered","onOk","onCancel","footer","closable","Timer","days","minutes","hours","seconds","time_up","deadline","count","bind","now","Date","getTime","t","Math","floor","clearInterval","x","timeTillLaunch","setInterval","ColumnGroup","launchesWithTimer","missionsName","missions","p","timer","MapChartt","flightStatus","SliderMapChart","handleDisabledChange","disabledSliderAndMap","document","getElementById","hidden","MARKERS","ele","MAX_VALUE","length","tooltipFormat","c","hecked","checkedChildren","unCheckedChildren","CloseOutlined","tipFormatter","max","defaultValue","newMarkers","push","range","Header","Layout","Content","Footer","RangePicker","Sider","Menu","SubMenu","DatePicker","THIS_YEAR","oldUrl","disabledDate","current","endOf","window","onscroll","body","scrollTop","documentElement","LayoutContainer","disabled","launchData","launchOldData","NextlaunchData","disabledSlider","launchDateButtonOnChange","fetch","then","response","json","data","fetchLaunches","fetchOldLaunches","fetchNextLaunches","scroller","scrollTo","duration","delay","smooth","ok","notification","warning","message","date","dateString","validationOfDate","theme","mode","defaultSelectedKeys","Item","NextLaunchTable","showToday","allowClear","mouseEnterDelay","InfoCircleOutlined","GithubOutlined","shape","UpOutlined","scroll","scrollToTop","App","ReactDOM"],"mappings":"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","file":"static/js/main.746addf0.chunk.js","sourcesContent":["import React from 'react'\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  Marker,\n} from \"react-simple-maps\"\nimport { Tooltip } from 'antd'\nimport './MapChart.css'\n\nconst geoUrl =\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\"\nconst markerOffset =  - 30\n\n// цвета маркеров\nconst launchStatus = {\n  1: 'Запланированы точные дата и время запуска',\n  2: 'Дата и время будут объявлены позже',\n  3: 'green',\n  4: 'red',\n  5: 'Незапланированная задержка',\n  6: 'В полете',\n  7: 'Во время запуска произошел частичный сбой',\n}\n\nconst MapChart = ({ launches }) => {\n  const markers = launches.map(el => ({\n    id: el.id,\n    RocketAndMissionNames: el.name,\n    rocketName: el.rocket,\n    status: el.statusNumber,\n    markerOffset: markerOffset,\n    coordinates: [el.longitude, el.latitude],\n    mapURL: el.PadsMapURL,\n    wikiURL: el.PadsWikiURL,\n    rocketwikiURL: el.RocketWikiURL,\n    latitude: el.latitude,\n    longitude: el.longitude,\n  }))\n\n  return (\n    <ComposableMap\n      projection=\"geoMercator\"\n      width=\"800\"\n      height=\"600\"\n      className=\"MapChartStyle\"\n    >\n      <Geographies geography={geoUrl}>\n        {({ geographies }) =>\n          geographies.map(geo => (\n            <Geography\n              key={geo.rsmKey}\n              geography={geo}\n              fill=\"#EAEAEC\"\n              stroke=\"#D6D6DA\"\n            />\n          ))\n        }\n\n      </Geographies>\n      {markers.map(({ rocketName, status, coordinates, markerOffset, wikiURL, rocketwikiURL, latitude, longitude }) => (\n        <Marker on coordinates={coordinates}\n        className=\"MarkersSryle\"\n        >\n          <Tooltip\n            overlayClassName=\"tooltipInMapChart\"\n            title={\n              <div>\n                <a href={\"http://maps.google.com/maps?q=\" + latitude + \",\" + longitude} target=\"_blank\">Google Maps</a><br></br>\n                <a href={wikiURL} target=\"_blank\">Космодром вики</a><br></br>\n                <a href={rocketwikiURL} target=\"_blank\">Ракета вики</a><br></br>\n              </div>\n\n            }\n            placement=\"bottom\"\n            mouseLeaveDelay=\"0.3\"\n          >\n            <g\n              fill={launchStatus[status]}\n              stroke=\"none\"\n              strokeWidth=\"3\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              transform=\"translate(-12, -24)\"\n            >\n              <circle cx=\"12\" cy=\"10\" r=\"3\" />\n              <path d=\"M12 21.7C17.3 17 20 13 20 10a8 8 0 1 0-16 0c0 3 2.7 6.9 8 11.7z\" />\n            </g>\n          </Tooltip>\n\n          <text\n            textAnchor=\"middle\"\n            y={markerOffset}\n            style={{ fontFamily: \"system-ui\", fill: \"#5D5A6D\" }}\n          >\n            {rocketName}\n          </text>\n        </Marker>\n      )\n      )}\n    </ComposableMap>\n  )\n}\n\nexport default MapChart\n","import React, { Component } from 'react'\nimport { Table, Modal, Tooltip, Input, Space, Button } from 'antd'\nimport MapChart from '../MapChart/MapChart'\nimport { Link, DirectLink, Element, Events, animateScroll as scroll, scrollSpy, scroller } from 'react-scroll'\nimport moment from 'moment'\nimport 'moment/locale/ru'\nimport Highlighter from 'react-highlight-words';\nimport { SearchOutlined } from '@ant-design/icons';\n\nmoment.locale()\n\nconst { Column } = Table;\n\nconst launchStatus = {\n  1: 'Дата и время определены',\n  2: 'Дата и время будут объявлены позже',\n  3: 'Успешно',\n  4: 'Неудача',\n  5: 'Задержка',\n  6: 'В полете',\n  7: 'Произошел сбой',\n}\n\nclass OldTable extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      markersLaunches: null,\n      searchText: '',\n      searchedColumn: '',\n    }\n  }\n  showModal = () => {\n    this.setState({\n      visible: true,\n    })\n  }\n\n  handleOk = e => {\n    this.setState({\n      visible: false,\n    })\n  }\n\n  handleCancel = e => {\n    this.setState({\n      visible: false,\n    })\n  }\n\n  getColumnSearchProps = dataIndex => ({\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={node => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\n        />\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Search\n          </Button>\n          <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n            Reset\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n    onFilter: (value, record) => record.name.toString().toLowerCase().includes(value.toLowerCase()),\n    onFilterDropdownVisibleChange: visible => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n    render: text =>\n      this.state.searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n          searchWords={[this.state.searchText]}\n          autoEscape\n          textToHighlight={text.toString()}\n        />\n      ) : (\n          text\n        ),\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex.name,\n    });\n  };\n\n  handleReset = clearFilters => {\n    clearFilters();\n    this.setState({ searchText: '' });\n  };\n\n  render() {\n    const columns = [\n      {\n        title: \"Название запуска\",\n        dataIndex: \"RocketAndMissionName\",\n        width: \"400\",\n        ...this.getColumnSearchProps('Имя'),\n        onCell: (selectedRows, selectedRowKeys) => {\n          return {\n            onClick: event => {\n              this.setState({ markersLaunches: [selectedRows] })\n              this.showModal()\n            },\n          }\n        }\n      },\n      {\n        title: \"Дата запуска\",\n        dataIndex: \"net\",\n      },\n      {\n        title: \"Статус\",\n        dataIndex: \"statusText\",\n        width: \"100\",\n      },\n      {\n        title: \"Космодром\",\n        dataIndex: \"pads\",\n        width: \"300\"\n      },\n    ]\n    const oldLaunch = this.props.launches.map(el => ({\n      key: el.id,\n      RocketAndMissionName: <a>{el.name}</a>,\n      name: el.name,\n      rocket: el.rocket.name,\n      net: <Tooltip title={\n        <div>\n          <p style={{ textAlign: 'center' }}>Локальное время</p>\n          <p style={{ textAlign: 'center' }}>{moment(el.net).locale('ru').format('LLL')}</p>\n        </div>}>\n        {moment(el.net).utc(0).locale('ru').format('LLL Z')}\n      </Tooltip>,\n      statusText: launchStatus[el.status],\n      statusNumber: el.status,\n      pads: el.location.pads.map(els => (els.name)),\n      longitude: el.location.pads.map(els => (els.longitude)),\n      latitude: el.location.pads.map(els => (els.latitude)),\n      PadsMapURL: el.location.pads.map(url => (url.mapURL)),\n      PadsWikiURL: el.location.pads.map(url => (url.wikiURL)),\n      RocketWikiURL: el.rocket.wikiURL,\n    }))\n    return (\n      <div >\n        <Table\n          columns={columns}\n          dataSource={oldLaunch}\n          pagination={{\n            position: ['bottomCenter'],\n            defaultCurrent: 1,\n            // simple:\"true\",\n            pageSizeOptions: ['10', '50', '100'],\n            showQuickJumper: \"true\",\n          }}\n          size=\"small\"\n          className=\"table\"\n          style={{ margin: 10 }}\n          bordered=\"true\"\n        >\n        </Table>\n\n        <Modal\n          centered\n          // title=\"Расположение запуска на карте\"\n          visible={this.state.visible}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n          footer={null}\n          width='65%'\n        >\n          <MapChart launches={this.state.markersLaunches} />\n        </Modal>\n      </div>\n\n    )\n  }\n}\n\nexport default OldTable\n","import React, { Component } from 'react'\nimport { Table, Modal, Tooltip, Input, Button, Space } from 'antd'\nimport Highlighter from 'react-highlight-words';\nimport MapChart from '../MapChart/MapChart'\nimport moment from 'moment'\nimport 'moment/locale/ru'\nimport './TableOld2.css'\nimport { ClearOutlined, CheckOutlined, SearchOutlined } from '@ant-design/icons'\n\nmoment.locale()\n\nconst { Column } = Table\nconst LAUNCH_STATUS = {\n  1: 'Запуск скоро состоится',\n  2: 'Дата и время будут объявлены позже',\n  3: 'Успешно',\n  4: 'Неудача',\n  5: 'Задержка',\n  6: 'В полете',\n  7: 'Произошел сбой',\n}\n\nconst COUNTRY = {\n  USA: 'США',\n  CHN: 'Китай',\n  KAZ: 'Казахстан',\n  IRN: 'Иран',\n  RUS: 'Россия',\n  GUF: 'Французская Гвиана',\n  JPN: 'Япония',\n  NZL: 'Новая Зеландия',\n  IND: 'Индия',\n  UNK: 'Великобритания',\n}\n\nclass OldTable2 extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      markersLaunches: null,\n      searchText: '',\n      searchedColumn: '',\n    }\n  }\n\n  showModal = () => {\n    this.setState({\n      visible: true,\n    })\n  }\n\n  handleOk = e => {\n    this.setState({\n      visible: false,\n    })\n  }\n\n  handleCancel = e => {\n    this.setState({\n      visible: false,\n    })\n  }\n\n  getColumnSearchProps = dataIndex => ({\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={node => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\n        />\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Search\n          </Button>\n          <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n            Reset\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n    onFilter: (value, record) => record.name.toString().toLowerCase().includes(value.toLowerCase()),\n    onFilterDropdownVisibleChange: visible => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n    render: text =>\n      this.state.searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n          searchWords={[this.state.searchText]}\n          autoEscape\n          textToHighlight={text.toString()}\n        />\n      ) : (\n          text\n        ),\n  })\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm()\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex.name,\n    })\n  }\n\n  handleReset = clearFilters => {\n    clearFilters()\n    this.setState({ searchText: '' })\n  }\n\n\n  render() {\n    const columns = [\n      {\n        title: \"Название запуска\",\n        dataIndex: \"RocketAndMissionName\",\n        width: '30%',\n        align: 'center',\n        ...this.getColumnSearchProps('Имя'),\n        onCell: (selectedRows, selectedRowKeys) => {\n          return {\n            onClick: event => {\n              this.setState({ markersLaunches: [selectedRows] })\n              this.showModal()\n            },\n          }\n        }\n      },\n      {\n        title: \"Дата запуска\",\n        dataIndex: \"net\",\n        align: 'center',\n        width: '25%',\n\n      },\n      {\n        title: \"Статус\",\n        dataIndex: \"statusText\",\n        align: 'center',\n        filters:[\n          {\n            text: 'Успешно',\n            value: 'Успешно',\n          },\n          {\n            text: 'Неудача',\n            value: 'Неудача',\n          },\n          {\n            text: 'Произошел сбой',\n            value: 'Произошел сбой',\n          },\n        ],\n        onFilter: (value, record) =>{return record.statusText.indexOf(value) === 0}\n      },\n      {\n        title: \"Площадка / Космодром\",\n        dataIndex: \"location\",\n        width: '30%',\n        align: 'center',\n        filters: [\n          {\n            text: 'США',\n            value: 'USA',\n          },\n          {\n            text: 'Китай',\n            value: 'CHN',\n          },\n          {\n            text: 'Казахстан',\n            value: 'KAZ',\n          },\n          {\n            text: 'Иран',\n            value: 'IRN',\n          },\n          {\n            text: 'Россия',\n            value: 'RUS',\n          },\n          {\n            text: 'Французская Гвиана',\n            value: 'GUF',\n          },\n          {\n            text: 'Япония',\n            value: 'JPN',\n          },\n          {\n            text: 'Новая Зеландия',\n            value: 'NZL',\n          },\n          {\n            text: 'Индия',\n            value: 'IND',\n          },\n          {\n            text: 'Великобритания',\n            value: 'UNK',\n          },\n          // {\n          //   text: 'Фильтр по космодромам',\n          //   value: 'Submenu',\n          //   children: [\n          //     {\n          //       text: 'Cape Canaveral',\n          //       value: 'Cape Canaveral',\n          //     },\n          //     {\n          //       text: 'Jiuquan',\n          //       value: 'Jiuquan',\n          //     },\n          //   ],\n          // }\n        ],\n        onFilter: (value, record) =>{return record.countryCode.indexOf(value) === 0},\n      },\n    ]\n    const loading = this.props.loading\n\n    const oldLaunch = this.props.launches.map(el => ({\n      key: el.id,\n      RocketAndMissionName: <a>{el.name}</a>,\n      name: el.name,\n      rocket: el.rocket.name,\n      net: <Tooltip title={\n        <div>\n          <p style={{ textAlign: 'center' }}>Локальное время</p>\n          <p style={{ textAlign: 'center' }}>{moment(el.net).locale('ru').format('LLL')}</p>\n        </div>}>\n        {moment(el.net).utc(0).locale('ru').format('LLL z')}\n      </Tooltip>,\n      statusText: LAUNCH_STATUS[el.status],\n      statusNumber: el.status,\n      location: <div>\n        {el.location.pads.map(els => (els.name.split(',')[0]))}<br />\n        {el.location.name.split(',')[0]}\n      </div>,\n      locationWithoutPads: el.location.name,\n      spaceortName: el.location.name.split(',')[0],\n      longitude: el.location.pads.map(els => (els.longitude)),\n      latitude: el.location.pads.map(els => (els.latitude)),\n      PadsMapURL: el.location.pads.map(url => (url.mapURL)),\n      PadsWikiURL: el.location.pads.map(url => (url.wikiURL)),\n      RocketWikiURL: el.rocket.wikiURL,\n      countryCode: el.location.countryCode,\n    }))\n\n    // переверачиваем дату, не особо важно. Влияет только на вывод\n    oldLaunch.reverse()\n\n    return (\n      <div >\n        <Table\n          columns={columns}\n          dataSource={oldLaunch}\n          pagination={{\n            position: ['bottomCenter'],\n            defaultCurrent: 1,\n            // simple:\"true\",\n            pageSizeOptions: ['10', '50', '100'],\n            showQuickJumper: \"true\",\n            hideOnSinglePage: \"true\",\n          }}\n          size=\"small\"\n          className=\"table\"\n          style={{ margin: 10 }}\n          locale={{\n            filterReset: <ClearOutlined/>,\n            filterConfirm: <CheckOutlined/>,\n          }}\n          loading={loading}\n          bordered=\"true\"\n        >\n        </Table>\n        <Modal\n          centered\n          // title=\"Расположение запуска на карте\"\n          visible={this.state.visible}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n          footer={null}\n          width='70%'\n          closable={false}\n        >\n          {/* <a onClick={}>ТЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫЫыК</a> */}\n          <MapChart launches={this.state.markersLaunches} />\n        </Modal>\n      </div>\n\n    )\n  }\n}\n\nexport default OldTable2\n","import React, {Component} from 'react'\nimport './Timer.css'\n\n\nclass Timer extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            days: 0,\n            minutes: 0,\n            hours: 0,\n            seconds: 0,\n            time_up: \"\",\n            deadline: null,\n        }\n        this.count = this.count.bind(this)\n    }\n\n    count () {\n        let now = new Date().getTime();\n        let t = this.state.deadline - now;\n        let days    = Math.floor(t / (1000 * 60 * 60 * 24));\n        let hours   = Math.floor((t % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n        let minutes = Math.floor((t % (1000 * 60 * 60)) / (1000 * 60));\n        let seconds = Math.floor((t % (1000 * 60)) / 1000);\n        this.setState({days, minutes, hours, seconds})\n        if (t < 0) {\n            clearInterval(this.x);\n            this.setState({ days: 0, minutes: 0, hours: 0, seconds: 0, time_up: \"Запуск состоялся!\" })\n        }\n    }\n\n    componentDidMount() {\n        const deadline = new Date(this.props.timeTillLaunch).getTime();\n        setInterval(this.count, 1000)\n        this.setState({...this.state, deadline: deadline})\n    }\n\n    render() {\n        const { days, seconds, hours, minutes, time_up } = this.state\n        return (\n            <div>\n                    {(seconds < 10)\n                    ? <p>{days}д: {hours}ч: {minutes}м: 0{seconds}с</p>\n                    : <p>{days}д: {hours}ч: {minutes}м: {seconds}с</p>\n                    }\n                    <strong>{time_up}</strong>\n            </div>\n        )\n    }\n}\n\nexport default Timer","import React from 'react'\nimport { Table, Tooltip, Input, Button, Space  } from 'antd'\nimport Timer from '../Timer/Timer'\nimport 'moment/locale/ru'\n// import 'moment/locale/en-au'\nimport moment from 'moment'\nimport './Table.css'\nmoment.locale()\n\n\nconst { Column, ColumnGroup } = Table;\n\nconst launchStatus = {\n  1: 'Запланированы точные дата и время запуска',\n  2: 'Дата и время будут объявлены позже',\n  3: 'Запуск прошел успешно',\n  4: 'Неудачный запуск',\n  5: 'Незапланированная задержка',\n  6: 'В полете',\n  7: 'Во время запуска произошел частичный сбой',\n}\n\nconst columns = [\n  {\n    title: 'Название запуска',\n    dataIndex: 'RocketAndMissionName',\n    width: '30%',\n    align: 'center',\n  },\n  {\n    title: 'Дата запуска',\n    dataIndex: 'net',\n    align: 'center',\n    width: '25%',\n  },\n  {\n    title: 'Таймер',\n    dataIndex: 'timer',\n    align: 'center',\n  },\n  {\n    title: 'Площадка / Космодром',\n    dataIndex: 'location',\n    width: '30%',\n    align: 'center',\n  },\n]\n\n\nexport default ({ launches }) => {\n  const launchesWithTimer = launches.map(el => ({\n    rocketName: el.rocket.name,\n    location: <div>\n                {el.location.pads.map(els => (els.name.split(',')[0]))}<br/>\n                {el.location.name.split(',')[0]}\n              </div>,\n    missionsName: el.missions.map(els => (els.name)),\n    RocketAndMissionName: el.name,\n    pads: el.location.pads.map(p => (p.name)),\n    net: <Tooltip title={<div><p style={{ textAlign: 'center' }}>Локальное время</p> <p style={{ textAlign: 'center' }}>{moment(el.net).locale('ru').format('LLL')}</p></div>}>{moment(el.net).utc(0).locale('ru').format('LLL z')}</Tooltip>,\n    status: launchStatus[el.status],\n    timer: <Timer timeTillLaunch={el.net} />\n  }))\n  return (\n    <Table\n      dataSource={launchesWithTimer}\n      pagination={false}\n      size=\"small\"\n      columns={columns}\n      bordered=\"true\"\n    />\n  )\n}","import React from 'react'\nimport {Table, Pagination} from 'antd'\nimport moment from 'moment'\nimport { LoadingOutlined } from '@ant-design/icons';\nimport 'moment/locale/ru'\nmoment.locale()\n\n\nconst launchStatus = {\n    1: 'Запланированы точные дата и время запуска',\n    2: 'Дата и время будут объявлены позже',\n    3: 'Запуск прошел успешно',\n    4: 'Неудачный запуск',\n    5: 'Незапланированная задержка',\n    6: 'В полете',\n    7: 'Во время запуска произошел частичный сбой',\n}\n\nconst columns = [\n    {\n        title: 'Название запуска',\n        dataIndex: 'RocketAndMissionName',\n        width: '30%',\n        align: 'center',\n      },\n      {\n        title: 'Дата запуска',\n        dataIndex: 'net',\n        align: 'center',\n        width: '25%',\n      },\n      {\n        title: 'Площадка / Космодром',\n        dataIndex: 'location',\n        width: '30%',\n        align: 'center',\n      },\n]\n\nexport default ({launches}) => {\n    const launchesWithTimer = launches.map(el => ({\n        RocketAndMissionName: el.name,\n        location: <div>\n                        {el.location.pads.map(els => (els.name.split(',')[0]))}<br/>\n                        {el.location.name.split(',')[0]}\n                  </div>,\n        net: moment(el.net).locale('ru').format('MMMM YYYY'),\n        status: launchStatus[el.status],\n        pads: el.location.pads.map(els => (els.name)),\n    }))\n    return (\n        <Table\n            dataSource={launchesWithTimer}\n            pagination={{ position: ['bottomCenter'], }}\n            size=\"small\"\n            columns={columns}\n            bordered=\"true\"\n        />\n    )\n}","import React from 'react'\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  Marker,\n} from \"react-simple-maps\"\nimport { Tooltip } from 'antd'\n\nconst geoUrl =\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\"\nconst markerOffset =  - 30\n\n// цвета маркеров\nconst launchStatus = {\n  1: 'Запланированы точные дата и время запуска',\n  2: 'Дата и время будут объявлены позже',\n  3: 'green',\n  4: 'red',\n  5: 'Незапланированная задержка',\n  6: 'В полете',\n  7: 'Во время запуска произошел частичный сбой',\n}\n\nconst MapChartt = ({ launches }) => {\n  const markers = launches.map(el => ({\n    rocketName: el.rocketName,\n    flightStatus: el.flightStatus,\n    coordinates: el.coordinates,\n    markerOffset: markerOffset,\n  }))\n\n  return (\n    <div>\n    <ComposableMap\n      projection=\"geoMercator\"\n      width=\"1800\"\n      height=\"600\"\n      className=\"MapChartStyle\"\n    >\n      <Geographies geography={geoUrl}>\n        {({ geographies }) =>\n          geographies.map(geo => (\n            <Geography\n              key={geo.rsmKey}\n              geography={geo}\n              fill=\"#EAEAEC\"\n              stroke=\"#D6D6DA\"\n            />\n          ))\n        }\n\n      </Geographies>\n      {markers.map(({ rocketName, flightStatus, coordinates, markerOffset  }) => (\n        <Marker on coordinates={coordinates}\n        className=\"MarkersSryle\"\n        >\n            <g\n              fill={launchStatus[flightStatus]}\n              stroke=\"none\"\n              strokeWidth=\"3\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              transform=\"translate(-12, -24)\"\n            >\n              <circle cx=\"12\" cy=\"10\" r=\"3\" />\n              <path d=\"M12 21.7C17.3 17 20 13 20 10a8 8 0 1 0-16 0c0 3 2.7 6.9 8 11.7z\" />\n            </g>\n            <text\n            textAnchor=\"middle\"\n            y={markerOffset}\n            style={{ fontFamily: \"system-ui\", fill: \"#5D5A6D\" }}\n          >\n            {rocketName}\n          </text>\n        </Marker>\n      )\n      )}\n    </ComposableMap>\n    </div>\n  )\n}\n\nexport default MapChartt\n","import React, { Component } from 'react'\nimport './SliderMapChart.css'\nimport { Slider, Switch } from 'antd'\nimport MapChartt from '../SliderMapChart/MapChart'\nimport moment from 'moment'\nimport 'moment/locale/ru'\nimport { CloseOutlined, CheckOutlined } from '@ant-design/icons';\n\nclass SliderMapChart extends Component {\n  constructor() {\n    super()\n    this.state = {\n      markersLaunches: null,\n      disabledSliderAndMap: false,\n    }\n  }\n\n  handleDisabledChange = disabledSliderAndMap => {\n    this.setState({ disabledSliderAndMap })\n    if (document.getElementById(\"slider\").hidden == false) {\n      document.getElementById(\"slider\").hidden = true\n    } else { document.getElementById(\"slider\").hidden = false }\n  }\n\n\n  render() {\n    const { disabledSliderAndMap } = this.state\n\n    const MARKERS = this.props.launches.map(el => ({\n      rocketName: el.rocket.name,\n      flightStatus: el.status,\n      coordinates: [el.location.pads.map(ele => (ele.longitude)), el.location.pads.map(ele => (ele.latitude))],\n      net: moment(el.net).utc(0).locale('ru').format('YYYY-MM-DD'),\n    }))\n\n    const MAX_VALUE = MARKERS.length - 1\n\n    if (this.state.markersLaunches == null) {\n      this.state.markersLaunches = [MARKERS[0]]\n    }\n\n\n    let markersChange = (value) => {\n\n      this.setState({ markersLaunches: [MARKERS[value]] })\n      tooltipFormat(value)\n    }\n\n    let markersChange2 = (value) => {\n\n      let count = 0\n      let newMarkers = []\n      this.setState({ markersLaunches: [] })\n      while (count < value) {\n        newMarkers.push(MARKERS[count])\n        count += 1\n      }\n      if (value == 0) {\n        this.setState({ markersLaunches: [MARKERS[0]] })\n      } else {\n        this.setState({ markersLaunches: newMarkers })\n      }\n      tooltipFormat(value)\n    }\n\n    let markersChange3 = (value) => {\n\n      let count = value[0]\n      let newMarkers = []\n      this.setState({ markersLaunches: [] })\n      while (count <= value[1]) {\n        newMarkers.push(MARKERS[count])\n        count += 1\n      }\n\n      if (value[0] == 0 && value[1] == 0) {\n        this.setState({ markersLaunches: [MARKERS[0]] })\n      } else if (value[0] == value[1]) {\n        this.setState({ markersLaunches: [MARKERS[value[0]]] })\n      } else {\n        this.setState({ markersLaunches: newMarkers })\n      }\n      tooltipFormat(value[0])\n    }\n\n\n    // this.setState({markersLaunches: [...this.markersLaunches , ]})\n\n    function tooltipFormat(value) {\n      return MARKERS[value].net\n    }\n\n    return (\n      <div>\n        Slider: \n        <Switch\n          size=\"large\" c\n          hecked={disabledSliderAndMap}\n          checkedChildren={<CheckOutlined />}\n          unCheckedChildren={<CloseOutlined />}\n          onChange={this.handleDisabledChange} />\n        <div id=\"slider\" hidden>\n          <div style={{ width: '50%' }}>\n            <div style={{ textAlign: 'center' }}>1 вариант</div>\n            <Slider\n              id=\"slider\"\n              tipFormatter={tooltipFormat}\n              // tooltipVisible={true}\n              max={[MAX_VALUE]}\n              // min={[0]}\n              defaultValue={[0]}\n              onChange={markersChange}\n            /><br /><br /><br />\n            <div style={{ textAlign: 'center' }}>2 вариант</div>\n            <Slider\n              id=\"slider\"\n              tipFormatter={tooltipFormat}\n              max={[MAX_VALUE]}\n              defaultValue={[0]}\n              onChange={markersChange2}\n            /><br /><br /><br />\n            <div style={{ textAlign: 'center' }}>3 вариант</div>\n            <Slider\n              range\n              id=\"slider\"\n              tipFormatter={tooltipFormat}\n              max={[MAX_VALUE]}\n              defaultValue={[0, 0]}\n              onChange={markersChange3}\n            />\n          </div>\n          {/* <Slider\n                    tipFormatter={tooltipFormat}\n                    range\n                    id=\"slider\"\n                    max={[MAX_VALUE]}\n                    defaultValue={[0, 0]}\n                    onChange={markersChange2}\n                /> */}\n          <MapChartt launches={this.state.markersLaunches} />\n        </div>\n      </div>\n    )\n\n  }\n}\nexport default SliderMapChart","import React, { Component } from 'react'\nimport {\n  Layout,\n  Menu,\n  DatePicker,\n  Button,\n  Tooltip,\n  notification,\n  Divider,\n} from 'antd'\nimport {\n  GithubOutlined,\n  UpOutlined,\n  InfoCircleOutlined,\n  FrownOutlined,\n  DesktopOutlined,\n  PieChartOutlined,\n  FileOutlined,\n  TeamOutlined,\n  UserOutlined,\n} from '@ant-design/icons'\nimport 'antd/dist/antd.css'\nimport OldTable from '../LaunchCatalog/component/TableOld/TableOld'\nimport OldTable2 from '../LaunchCatalog/component/TableOld2/TableOld2'\nimport LaunchTable from \"../LaunchCatalog/component/Table/Table\"\nimport NextLaunchTable from '../LaunchCatalog/component/NextLaunchTable/NextLaunchTable'\nimport SliderMapChart from '../LaunchCatalog/component/SliderMapChart/SliderMapChart'\nimport MapChart from '../LaunchCatalog/component/MapChart/MapChart'\nimport './index.css' // стандарт\nimport './index.scss' // прыгающие квадраты\nimport moment from 'moment'\nimport {\n  Element,\n  animateScroll as scroll, scroller\n} from 'react-scroll'\n\nconst { Header, Content, Footer, Sider } = Layout\nconst { SubMenu } = Menu\n\n// следующие запуски с временем и датой\nconst URL = 'https://launchlibrary.net/1.4/launch/next/1000?status=1,2'\n\n// следующие запуски с датой(без времени)\nconst NEXT_URL = 'https://launchlibrary.net/1.4/launch/next/1000?status=2'\n\nconst { RangePicker } = DatePicker\nconst LIMIT = 10000\nconst THIS_YEAR = moment().format('YYYY')\n\n// старые запуски\nlet oldUrl = 'https://launchlibrary.net/1.4/launch?startdate=' + moment(THIS_YEAR).format('YYYY-MM-DD') + '&enddate=' + moment().format('YYYY-MM-DD') + '&limit=' + LIMIT + '&fields=name,net,location,status,rocket,mapURL,countryCode'\n\n// const modals = Modal.warning({\n//     content: `можно вывести стартовое сообщение!`,\n//     maskClosable: \"true\"\n// }\n// )\nconst notificationForInvalidDate = (placement) => {\n  notification.warning({\n    message: <strong>Похоже, что за выбранный период времени запусков нет</strong>,\n    //   description: <strong>За выбранный период времени запусков нет!</strong>,\n    placement,\n  })\n}\n\nconst notificationMessage = (message, placement) => {\n  notification.error({\n    message,\n    placement,\n  })\n}\n\nfunction disabledDate(current) {\n  return ((current && current > moment().endOf('day')) || (current && current < moment('1961-01-01').endOf('day')))\n}\nfunction scrollFunction() {\n  if (document.body.scrollTop > 500 || document.documentElement.scrollTop > 500) {\n    document.getElementById(\"myBtn\").style.display = \"block\"\n  } else {\n    document.getElementById(\"myBtn\").style.display = \"none\"\n  }\n}\nwindow.onscroll = function () { scrollFunction() };\n\nclass LayoutContainer extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      launchData: null,\n      launchOldData: null,\n      NextlaunchData: null,\n      visible: false,\n      loading: false,\n      disabledSlider: false,\n    }\n    this.launchDateButtonOnChange = this.launchDateButtonOnChange.bind(this)\n  }\n\n  fetchLaunches(url) {\n    fetch(url)\n      .then(response => response.json())\n      .then(data => this.setState({ launchData: data }))\n  }\n\n  fetchOldLaunches(url) {\n    this.setState({ loading: true })\n    fetch(url)\n      .then(response => response.json())\n      .then(data => this.setState({ launchOldData: data, loading: false, }))\n  }\n\n  fetchNextLaunches(url) {\n    fetch(url)\n      .then(response => response.json())\n      .then(data => this.setState({ NextlaunchData: data }))\n  }\n\n  componentDidMount() {\n    this.fetchLaunches(URL)\n    this.fetchOldLaunches(oldUrl)\n    this.fetchNextLaunches(NEXT_URL)\n  }\n\n  handleDisabledChange = disabled => {\n    this.setState({ disabled })\n  }\n\n  showModal = () => {\n    this.setState({\n      visible: true,\n    })\n  }\n\n  handleOk = e => {\n    this.setState({\n      visible: false,\n    })\n  }\n\n  handleCancel = e => {\n    this.setState({\n      visible: false,\n    })\n  }\n\n  scrollToOldTable2() {\n    scroller.scrollTo('scroll-to-Oldtable2', {\n      duration: 800,\n      delay: 0,\n      smooth: 'easeInOutQuart'\n    })\n  }\n\n  async validationOfDate(url) {\n    this.setState({ loading: true })\n    let response = await fetch(url)\n    if (response.ok) { // если HTTP-статус в диапазоне 200-299 получаем тело ответа иначе Notification\n      this.fetchOldLaunches(url)\n    } else {\n      // notificationForInvalidDate('topLeft')\n      notificationForInvalidDate('topRight')\n      this.setState({ loading: false })\n    }\n  }\n\n  launchDateButtonOnChange(date, dateString) {\n    oldUrl = 'https://launchlibrary.net/1.4/launch?startdate=' + dateString[0] + '&enddate=' + dateString[1] + '&limit=' + LIMIT + '&fields=name,net,location,status,rocket,mapURL,countryCode'\n    this.validationOfDate(oldUrl)\n  }\n\n\n  render() {\n    const { launchOldData, launchData, NextlaunchData, loading, disabled } = this.state\n    return (\n      <div>\n        {launchOldData && NextlaunchData && launchData\n          ? <Layout id=\"layout\">\n            <Header>\n              <div className=\"logo\"></div>\n              <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']} style={{ textAlign: 'right' }}>\n                <Menu.Item key=\"1\">Статистика</Menu.Item>\n                <Menu.Item key=\"2\">Запуски</Menu.Item>\n              </Menu>\n            </Header>\n            <Content style={{ padding: '0 50px' }}>\n              <div className=\"site-layout-content\">\n                <Divider><h1 style={{ textAlign: 'center' }}>Обьявленные запуски</h1></Divider>\n                                <LaunchTable launches={launchData.launches} />\n\n                                <Divider className=\"next-launch-table\"><h1 style={{ textAlign: 'center' }}>Запланированные запуски</h1></Divider>\n                                <NextLaunchTable launches={NextlaunchData.launches} />\n\n                <Divider><h1 style={{ textAlign: 'center' }}>Состоявшиеся запуски</h1></Divider>\n                <RangePicker\n                  className=\"RangePicker\"\n                  defaultValue={[moment(THIS_YEAR), moment()]}\n                  showToday={false, true}\n                  onChange={this.launchDateButtonOnChange}\n                  disabledDate={disabledDate}\n                  allowClear={false}\n                  style={{ margin: 10 }}\n                />\n                <Tooltip\n                  title={\n                    <p>Здесь можно настроить период запусков</p>\n                  }\n                  mouseEnterDelay={0.2}\n                  mouseLeaveDelay={0.5}\n                  placement=\"top\"\n                >\n                  <InfoCircleOutlined />\n                </Tooltip>\n\n                <Element name=\"scroll-to-Oldtable2\">\n                  <OldTable2 launches={launchOldData.launches} loading={loading} />\n                </Element>\n                <SliderMapChart launches={launchOldData.launches} />\n              </div>\n            </Content>\n\n            <Footer className=\"footer\">\n              Design © 2020 <br></br>\n              <GithubOutlined />\n              <a href=\"https://github.com/SShaposhnik/global-launches-app\" target=\"_blank\"> Github</a>\n            </Footer>\n            <Button\n              type=\"primary\"\n              shape=\"circle\"\n              icon={<UpOutlined />}\n              onClick={scroll.scrollToTop}\n              id=\"myBtn\"\n              title=\"Наверх!\"\n            />\n          </Layout>\n\n          : <div id=\"hellopreloader\">\n            <div id=\"hellopreloader_preload\">\n              <div className=\"container\">\n                <div className=\"element\"></div>\n                <div className=\"element\"></div>\n                <div className=\"element\"></div>\n                <div className=\"element\"></div>\n                <div className=\"element\"></div>\n              </div>\n            </div>\n          </div>\n\n          // : <div id=\"hellopreloader\">\n          //     <div id=\"hellopreloader_preload\"></div>\n          // </div>\n        }\n      </div>\n    )\n  }\n}\nexport default LayoutContainer\n","import React from 'react';\nimport './App.css';\nimport LayoutContainer from './containers/Layout/index'\n// import LayoutContainer from './containers/Layout/habr'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <LayoutContainer />\n    </div>\n  );\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <App /> ,\n  document.getElementById('root')\n)"],"sourceRoot":""}