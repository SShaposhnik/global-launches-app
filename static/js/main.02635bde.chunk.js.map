{"version":3,"sources":["catalog/images/earth.svg","catalog/images/satellite2.svg","catalog/images/alien.svg","catalog/images/mars.svg","catalog/images/comet.svg","catalog/images/meteor.svg","catalog/images/satellite4.svg","catalog/images/stars.svg","catalog/images/cloud.svg","catalog/images/moon.svg","catalog/images/spaceship.svg","catalog/component/MapChart.js","catalog/component/FinishedLaunches.js","catalog/component/Timer.js","catalog/component/AnnouncedLaunches.js","catalog/component/ScheduledLaunches.js","catalog/component/Launches.js","catalog/component/testComponents/Static.js","catalog/component/HomePage.js","catalog/component/Layout.js","App.js","index.js"],"names":["module","exports","LAUNCH_STATUS","1","2","3","4","5","6","7","MapChart","launches","flag","tableData","markers","map","el","RocketAndMissionNames","name","rocketName","status","statusNumber","markerOffset","coordinates","longitude","latitude","padsMapURL","padsWikiURL","rocketwikiURL","rocket","location","pads","els","mapURL","wikiURL","projection","width","height","className","geography","geographies","geo","key","rsmKey","fill","stroke","on","overlayClassName","title","href","target","placement","mouseLeaveDelay","transform","cx","cy","r","d","textAnchor","y","style","fontFamily","split","moment","locale","Table","Column","FinishedTable","props","showModal","setState","visible","handleOk","e","handleCancel","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","ref","node","searchInput","placeholder","value","onChange","onPressEnter","handleSearch","marginBottom","display","type","onClick","icon","SearchOutlined","size","handleReset","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","setTimeout","select","render","text","state","searchedColumn","highlightStyle","backgroundColor","searchWords","searchText","autoEscape","textToHighlight","markersLaunches","show","columns","align","this","onCell","selectedRows","selectedRowKeys","event","filters","statusText","indexOf","countryCode","loading","oldLaunch","id","RocketAndMissionName","net","textAlign","format","utc","locationWithoutPads","spaceortName","PadsMapURL","url","PadsWikiURL","RocketWikiURL","reverse","dataSource","pagination","position","defaultCurrent","simple","pageSizeOptions","filterReset","ClearOutlined","filterConfirm","CheckOutlined","centered","onOk","onCancel","footer","closable","Component","Timer","days","minutes","hours","seconds","time_up","deadline","count","bind","now","Date","getTime","t","Math","floor","clearInterval","x","timeTillLaunch","setInterval","ColumnGroup","launchStatus","launchesWithTimer","missionsName","missions","p","timer","bordered","showSizeChanger","showQuickJumper","hideOnSinglePage","RangePicker","Layout","Content","DatePicker","THIS_YEAR","URLForFinishedLaunch","URL","wrap","disabledDate","current","endOf","MapLaunches","handleDisabledChange","disabled","AnnouncedData","ScheduledData","FinishedData","disabledSlider","test","launchDateButtonOnChange","timeBeforeToShowMarkers","scrollToTop","scroll","fetch","then","response","json","data","fetchAnnounced","fetchScheduled","fetchFinished","ok","fetchOldLaunches","notification","warning","message","date","dateString","validationOfDate","secondsToGo","func","length","console","log","pages","offset","speed","factor","backgroundImage","backgroundSize","pointerEvents","src","Satellite2","marginLeft","Alien","Earth","opacity","Cloud","Satellite4","marginRight","Comet","Upi","alignItems","justifyContent","Mars","marginTop","defaultValue","showToday","allowClear","margin","mouseEnterDelay","InfoCircleOutlined","minHeight","LoadingOutlined","fontSize","HomePage","React","Header","LayoutContainer","Footer","defaultSelectedKeys","theme","mode","Item","HomeOutlined","to","AreaChartOutlined","RocketOutlined","exact","path","component","Static","App","useState","preload","setPreload","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.02635bde.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/earth.c046ac84.svg\";","module.exports = __webpack_public_path__ + \"static/media/satellite2.bb5b6803.svg\";","module.exports = __webpack_public_path__ + \"static/media/alien.9c05602d.svg\";","module.exports = __webpack_public_path__ + \"static/media/mars.cf923732.svg\";","module.exports = __webpack_public_path__ + \"static/media/comet.60dacd2c.svg\";","module.exports = __webpack_public_path__ + \"static/media/meteor.ae2d9c66.svg\";","module.exports = __webpack_public_path__ + \"static/media/satellite4.021c26fd.svg\";","module.exports = __webpack_public_path__ + \"static/media/stars.5546c7c6.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloud.305b7b7b.svg\";","module.exports = __webpack_public_path__ + \"static/media/moon.48fb74a2.svg\";","module.exports = __webpack_public_path__ + \"static/media/spaceship.a981e12e.svg\";","import React from 'react'\n\nimport { ComposableMap, Geographies, Geography, Marker, } from \"react-simple-maps\"\nimport { Tooltip } from 'antd'\n\nimport '../css/index.css'\n\nconst geoUrl =\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\"\nconst MARKER_OF_SET = - 30\n\n// цвета маркеров\nconst LAUNCH_STATUS = {\n  1: 'Запланированы точные дата и время запуска',\n  2: 'Дата и время будут объявлены позже',\n  3: 'green',\n  4: 'red',\n  5: 'Незапланированная задержка',\n  6: 'В полете',\n  7: 'Во время запуска произошел частичный сбой',\n}\n\nconst MapChart = ({ launches, flag, tableData }) => {\n  let markers = []\n\n  if (flag) {\n    markers = tableData.map(el => ({\n      RocketAndMissionNames: el.name,\n      rocketName: el.rocketName,\n      status: el.statusNumber,\n      markerOffset: MARKER_OF_SET,\n      coordinates: [el.longitude, el.latitude],\n      padsMapURL: el.padsMapURL,\n      padsWikiURL: el.padsWikiURL,\n      rocketwikiURL: el.rocketwikiURL,\n      latitude: el.latitude,\n      longitude: el.longitude,\n    }))\n  } else {\n    markers = launches.map(el => ({\n      RocketAndMissionNames: el.name,\n      rocketName: el.rocket.name,\n      status: el.status,\n      markerOffset: MARKER_OF_SET,\n      coordinates: [el.location.pads.map(els => (els.longitude)), el.location.pads.map(els => (els.latitude))],\n      padsMapURL: el.location.pads.map(els => (els.mapURL)),\n      padsWikiURL: el.location.pads.map(els => (els.wikiURL)),\n      rocketwikiURL: el.rocket.wikiURL,\n      latitude: el.location.pads.map(els => (els.latitude)),\n      longitude: el.location.pads.map(els => (els.longitude)),\n    }))\n  }\n\n  return (\n    <ComposableMap\n      projection=\"geoMercator\"\n      width=\"800\"\n      height=\"600\"\n      className=\"MapChartStyle\"\n    >\n      <Geographies geography={geoUrl}>\n        {({ geographies }) =>\n          geographies.map(geo => (\n            <Geography\n              key={geo.rsmKey}\n              geography={geo}\n              fill=\"#EAEAEC\"\n              stroke=\"#D6D6DA\"\n            />\n          ))\n        }\n\n      </Geographies>\n      {markers.map(({ rocketName, status, coordinates, markerOffset, padsWikiURL, rocketwikiURL, latitude, longitude, RocketAndMissionNames }) => (\n        <Marker on coordinates={coordinates}\n          className=\"MarkersSryle\"\n        >\n          <Tooltip\n            overlayClassName=\"tooltipInMapChart\"\n            title={\n              <div>\n                <a href={\"http://maps.google.com/maps?q=\" + latitude + \",\" + longitude} target=\"_blank\">Google Maps</a><br></br>\n                <a href={padsWikiURL} target=\"_blank\">Космодром вики</a><br></br>\n                <a href={rocketwikiURL} target=\"_blank\">Ракета вики</a><br></br>\n              </div>\n\n            }\n            placement=\"bottom\"\n            mouseLeaveDelay=\"0.3\"\n          >\n            <g\n              fill={LAUNCH_STATUS[status]}\n              transform=\"translate(-12, -24)\"\n            >\n              <circle cx=\"12\" cy=\"10\" r=\"3\" />\n              <path d=\"M12 21.7C17.3 17 20 13 20 10a8 8 0 1 0-16 0c0 3 2.7 6.9 8 11.7z\" />\n            </g>\n          </Tooltip>\n\n          <text\n            textAnchor=\"middle\"\n            y={markerOffset}\n            style={{ fontFamily: \"system-ui\", fill: \"#5D5A6D\" }}\n          >\n            {RocketAndMissionNames.split('|')[0]}\n          </text>\n        </Marker>\n      )\n      )}\n    </ComposableMap>\n  )\n}\n\nexport default MapChart\n","import React, { Component } from 'react'\n\nimport { Table, Modal, Tooltip, Input, Button, Space } from 'antd'\nimport { ClearOutlined, CheckOutlined, SearchOutlined, SettingFilled } from '@ant-design/icons'\nimport Highlighter from 'react-highlight-words'\nimport moment from 'moment'\nimport 'moment/locale/ru'\n\nimport MapChart from './MapChart'\nimport '../css/index.css'\n\nmoment.locale()\n\nconst { Column } = Table\nconst LAUNCH_STATUS = {\n  1: 'Запуск скоро состоится',\n  2: 'Дата и время будут объявлены позже',\n  3: 'Успешно',\n  4: 'Неудача',\n  5: 'Задержка',\n  6: 'В полете',\n  7: 'Произошел сбой',\n}\n\nconst COUNTRY = {\n  USA: 'США',\n  CHN: 'Китай',\n  KAZ: 'Казахстан',\n  IRN: 'Иран',\n  RUS: 'Россия',\n  GUF: 'Французская Гвиана',\n  JPN: 'Япония',\n  NZL: 'Новая Зеландия',\n  IND: 'Индия',\n  UNK: 'Великобритания',\n}\n\nclass FinishedTable extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      markersLaunches: null,\n      searchText: '',\n      searchedColumn: '',\n      show: false,\n    }\n  }\n\n  showModal = () => {\n    this.setState({\n      visible: true,\n    })\n  }\n\n  handleOk = e => {\n    this.setState({\n      visible: false,\n    })\n  }\n\n  handleCancel = e => {\n    this.setState({\n      visible: false,\n    })\n  }\n\n  getColumnSearchProps = dataIndex => ({\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={node => {\n            this.searchInput = node;\n          }}\n          placeholder={`${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\n        />\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Поиск\n          </Button>\n          <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n            Сбросить\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n    onFilter: (value, record) => record.name.toString().toLowerCase().includes(value.toLowerCase()),\n    onFilterDropdownVisibleChange: visible => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n    render: text =>\n      this.state.searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n          searchWords={[this.state.searchText]}\n          autoEscape\n          textToHighlight={text.toString()}\n        />\n      ) : (\n          text\n        ),\n  })\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm()\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: toString(dataIndex),\n    })\n  }\n\n  handleReset = clearFilters => {\n    clearFilters()\n    this.setState({ searchText: '' })\n  }\n\n  render() {\n    const columns = [\n      {\n        title: \"Название запуска\",\n        dataIndex: \"RocketAndMissionName\",\n        className: 'Name-launch-style',\n        width: '30%',\n        align: 'left',\n        ...this.getColumnSearchProps('Название запуска'),\n        onCell: (selectedRows, selectedRowKeys) => {\n          // selectedRowKeys -> number\n          // selectedRows    -> data\n          return {\n            onClick: event => {\n              // console.log(selectedRowKeys);\n              // console.log(selectedRows);\n              // this.setState({ markersLaunches: [selectedRows] })\n              this.setState({ markersLaunches: [selectedRows] })\n              this.showModal()\n              // swal({\n              //   // icon: 'error',\n              //   buttons: false,\n              //   content: (\n              //     <MapChart tableData={[selectedRows] } flag={true}/>\n              //   )\n              // })\n            },\n          }\n        }\n      },\n      {\n        title: \"Дата запуска\",\n        dataIndex: \"net\",\n        align: 'center',\n        width: '25%',\n\n      },\n      {\n        title: \"Статус\",\n        dataIndex: \"statusText\",\n        align: 'center',\n        filters: [\n          {\n            text: 'Успешно',\n            value: 'Успешно',\n          },\n          {\n            text: 'Неудача',\n            value: 'Неудача',\n          },\n          {\n            text: 'Произошел сбой',\n            value: 'Произошел сбой',\n          },\n        ],\n        onFilter: (value, record) => { return record.statusText.indexOf(value) === 0 }\n      },\n      {\n        title: \"Площадка / Космодром\",\n        dataIndex: \"location\",\n        width: '30%',\n        align: 'center',\n        filters: [\n          {\n            text: 'США',\n            value: 'USA',\n          },\n          {\n            text: 'Китай',\n            value: 'CHN',\n          },\n          {\n            text: 'Казахстан',\n            value: 'KAZ',\n          },\n          {\n            text: 'Иран',\n            value: 'IRN',\n          },\n          {\n            text: 'Россия',\n            value: 'RUS',\n          },\n          {\n            text: 'Французская Гвиана',\n            value: 'GUF',\n          },\n          {\n            text: 'Япония',\n            value: 'JPN',\n          },\n          {\n            text: 'Новая Зеландия',\n            value: 'NZL',\n          },\n          {\n            text: 'Индия',\n            value: 'IND',\n          },\n          {\n            text: 'Великобритания',\n            value: 'UNK',\n          },\n          // {\n          //   text: 'Фильтр по космодромам',\n          //   value: 'Submenu',\n          //   children: [\n          //     {\n          //       text: 'Cape Canaveral',\n          //       value: 'Cape Canaveral',\n          //     },\n          //     {\n          //       text: 'Jiuquan',\n          //       value: 'Jiuquan',\n          //     },\n          //   ],\n          // }\n        ],\n        onFilter: (value, record) => { return record.countryCode.indexOf(value) === 0 },\n      },\n    ]\n\n    const loading = this.props.loading\n\n    const oldLaunch = this.props.launches.map(el => ({\n      key: el.id,\n    RocketAndMissionName: <a>{el.name}</a>,\n      name: el.name,\n      rocket: el.rocket.name,\n      net: <Tooltip title={\n        <div>\n          <p style={{ textAlign: 'center' }}>Локальное время</p>\n          <p style={{ textAlign: 'center' }}>{moment(el.net).locale('ru').format('LLL')}</p>\n        </div>}>\n        {moment(el.net).utc(0).locale('ru').format('LLL z')}\n      </Tooltip>,\n      statusText: LAUNCH_STATUS[el.status],\n      statusNumber: el.status,\n      location: <div>\n        {el.location.pads.map(els => (els.name.split(',')[0]))}<br />\n        {el.location.name.split(',')[0]}\n      </div>,\n      locationWithoutPads: el.location.name,\n      spaceortName: el.location.name.split(',')[0],\n      longitude: el.location.pads.map(els => (els.longitude)),\n      latitude: el.location.pads.map(els => (els.latitude)),\n      PadsMapURL: el.location.pads.map(url => (url.mapURL)),\n      PadsWikiURL: el.location.pads.map(url => (url.wikiURL)),\n      RocketWikiURL: el.rocket.wikiURL,\n      countryCode: el.location.countryCode,\n    }))\n    // переверачиваем дату, не особо важно. Влияет только на вывод\n    oldLaunch.reverse()\n\n    return (\n      <div >\n        <Table\n          className='TableOld2'\n          columns={columns}\n          dataSource={oldLaunch}\n          pagination={{\n            position: ['bottomCenter'],\n            defaultCurrent: 1,\n            simple:\"true\",\n            pageSizeOptions: ['10', '50', '100'],\n            // showQuickJumper: \"true\",\n            // hideOnSinglePage: \"true\",\n          }}\n          size=\"small\"\n          locale={{\n            filterReset: <ClearOutlined />,\n            filterConfirm: <CheckOutlined />,\n          }}\n          loading={loading}\n        >\n        </Table>\n\n        <Modal\n          className='modal-style-from-oldTable2'\n          centered\n          visible={this.state.visible}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n          footer={null}\n          width='70%'\n          closable={false}\n        >\n          <MapChart tableData={this.state.markersLaunches} flag={true} />\n        </Modal>\n      </div>\n\n    )\n  }\n}\n\nexport default FinishedTable\n","import React, { Component } from 'react'\n\n\nclass Timer extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      days: 0,\n      minutes: 0,\n      hours: 0,\n      seconds: 0,\n      time_up: \"\",\n      deadline: null,\n    }\n    this.count = this.count.bind(this)\n  }\n\n  count() {\n    let now = new Date().getTime();\n    let t = this.state.deadline - now;\n    let days = Math.floor(t / (1000 * 60 * 60 * 24));\n    let hours = Math.floor((t % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n    let minutes = Math.floor((t % (1000 * 60 * 60)) / (1000 * 60));\n    let seconds = Math.floor((t % (1000 * 60)) / 1000);\n    this.setState({ days, minutes, hours, seconds })\n    if (t < 0) {\n      clearInterval(this.x);\n      this.setState({ days: 0, minutes: 0, hours: 0, seconds: 0, time_up: \"Запуск состоялся!\" })\n    }\n  }\n\n  componentDidMount() {\n    const deadline = new Date(this.props.timeTillLaunch).getTime();\n    setInterval(this.count, 1000)\n    this.setState({ ...this.state, deadline: deadline })\n  }\n\n  render() {\n    const { days, seconds, hours, minutes, time_up } = this.state\n    return (\n      <div>\n        {(seconds < 10)\n          ? <p>{days}д: {hours}ч: {minutes}м: 0{seconds}с</p>\n          : <p>{days}д: {hours}ч: {minutes}м: {seconds}с</p>\n        }\n        <strong>{time_up}</strong>\n      </div>\n    )\n  }\n}\n\nexport default Timer","import React from 'react'\n\nimport { Table, Tooltip, Modal, Button, Space, notification } from 'antd'\nimport moment from 'moment'\nimport 'moment/locale/ru'\n\nimport Timer from './Timer'\nimport '../css/index.css'\n\nmoment.locale()\nconst { Column, ColumnGroup } = Table;\n\nconst launchStatus = {\n  1: 'Запланированы точные дата и время запуска',\n  2: 'Дата и время будут объявлены позже',\n  3: 'Запуск прошел успешно',\n  4: 'Неудачный запуск',\n  5: 'Незапланированная задержка',\n  6: 'В полете',\n  7: 'Во время запуска произошел частичный сбой',\n}\nconst columns = [\n  {\n    title: 'Название запуска',\n    dataIndex: 'RocketAndMissionName',\n    width: '30%',\n    align: 'center',\n  },\n  {\n    title: 'Дата запуска',\n    dataIndex: 'net',\n    align: 'center',\n    width: '25%',\n  },\n  {\n    title: 'Таймер',\n    dataIndex: 'timer',\n    align: 'center',\n    width: '20%'\n  },\n  {\n    title: 'Площадка / Космодром',\n    dataIndex: 'location',\n    width: '30%',\n    align: 'center',\n  },\n]\n\nexport default ({ launches }) => {\n\n  const launchesWithTimer = launches.map(el => ({\n  rocketName: el.rocket.name,\n    location: <div>\n      {el.location.pads.map(els => (els.name.split(',')[0]))}<br />\n      {el.location.name.split(',')[0]}\n    </div>,\n    missionsName: el.missions.map(els => (els.name)),\n    RocketAndMissionName: el.name,\n    pads: el.location.pads.map(p => (p.name)),\n    net: <Tooltip title={<div><p style={{ textAlign: 'center' }}>Локальное время</p> <p style={{ textAlign: 'center' }}>{moment(el.net).locale('ru').format('LLL')}</p></div>}>{moment(el.net).utc(0).locale('ru').format('LLL z')}</Tooltip>,\n    status: launchStatus[el.status],\n    timer: <Timer timeTillLaunch={el.net} />\n  }))\n\n  return (\n    <div>\n      <Table\n        className=\"announced-table\"\n        dataSource={launchesWithTimer}\n        pagination={false}\n        size=\"small\"\n        columns={columns}\n        bordered=\"true\"\n      />\n    </div>\n  )\n}","import React from 'react'\n\nimport { Table, Pagination } from 'antd'\nimport moment from 'moment'\nimport 'moment/locale/ru'\nimport { LoadingOutlined } from '@ant-design/icons'\n\nimport '../css/index.css'\nmoment.locale()\n\n\nconst launchStatus = {\n  1: 'Запланированы точные дата и время запуска',\n  2: 'Дата и время будут объявлены позже',\n  3: 'Запуск прошел успешно',\n  4: 'Неудачный запуск',\n  5: 'Незапланированная задержка',\n  6: 'В полете',\n  7: 'Во время запуска произошел частичный сбой',\n}\n\nconst columns = [\n  {\n    title: 'Название запуска',\n    dataIndex: 'RocketAndMissionName',\n    width: '30%',\n    align: 'center',\n    className: 'launch-name-nextlaunch'\n  },\n  {\n    title: 'Дата запуска',\n    dataIndex: 'net',\n    align: 'center',\n    width: '25%',\n  },\n  {\n    title: 'Площадка / Космодром',\n    dataIndex: 'location',\n    width: '30%',\n    align: 'center',\n  },\n]\n\nexport default ({ launches }) => {\n  const launchesWithTimer = launches.map(el => ({\n    RocketAndMissionName: <p className='launchText'>{el.name}</p>,\n    location: <div>\n      {el.location.pads.map(els => (els.name.split(',')[0]))}<br />\n      {el.location.name.split(',')[0]}\n    </div>,\n    net: moment(el.net).locale('ru').format('MMMM YYYY'),\n    status: launchStatus[el.status],\n    pads: el.location.pads.map(els => (els.name)),\n  }))\n  return (\n    <Table\n      dataSource={launchesWithTimer}\n      pagination={{\n        position: ['bottomCenter'],\n        showSizeChanger: false,\n        defaultCurrent: 1,\n        // simple:\"true\",\n        showQuickJumper: false,\n        hideOnSinglePage: \"true\",\n      }}\n      size=\"small\"\n      columns={columns}\n      bordered=\"false\"\n    />\n  )\n}","import React, { Component } from 'react'\n\nimport { Layout, DatePicker, Button, notification, Divider, Table, Tooltip } from 'antd'\nimport { UpOutlined, LoadingOutlined, InfoCircleOutlined } from '@ant-design/icons'\nimport { Parallax, ParallaxLayer } from 'react-spring/renderprops-addons'\nimport moment from 'moment'\nimport { animateScroll as scroll, scroller } from 'react-scroll'\n\n\nimport { Earth, Satellite2, Alien, Mars, Comet, Meteor, Satellite4, Stars, Cloud, Upi, Spaceship } from '../images'\nimport FinishedTable from './FinishedLaunches'\nimport AnnouncedTable from \"./AnnouncedLaunches\"\nimport ScheduledTable from './ScheduledLaunches'\nimport '../css/index.css'\n\n\nconst { Content } = Layout\nconst LIMIT = 10000\nconst { RangePicker } = DatePicker\nconst THIS_YEAR = moment().format('YYYY')\n\n// следующие запуски с временем и датой\nexport const URL_FOR_ANNOUNCED = 'https://launchlibrary.net/1.4/launch/next/1000?status=1,2'\n\n// следующие запуски с датой(без времени)\nexport const URL_FOR_SCHEDULED_LAUNCHES = 'https://launchlibrary.net/1.4/launch/next/1000?status=2'\n\n// старые запуски\nexport let URLForFinishedLaunch = 'https://launchlibrary.net/1.4/launch?startdate=' + moment(THIS_YEAR).format('YYYY-MM-DD') + '&enddate=' + moment().format('YYYY-MM-DD') + '&limit=' + LIMIT + '&fields=name,net,location,status,rocket,mapURL,countryCode'\n\n\n\n// const modals = Modal.warning({\n//     content: `можно вывести стартовое сообщение!`,\n//     maskClosable: \"true\"\n// }\n// )\n\nconst URL = (name, wrap = false) => `${wrap ? 'URL(' : ''}https://awv3node-homepage.surge.sh/build/assets/${name}.svg${wrap ? ')' : ''}`\nconst notificationForInvalidDate = (placement) => {\n  notification.warning({\n    message: <strong> Похоже,что за выбранный период времени запусков нет </strong>,\n    placement,\n  })\n}\n\nconst notificationMessage = (message, placement) => {\n  notification.error({\n    message,\n    placement,\n  })\n}\n\nfunction disabledDate(current) {\n  return ((current && current > moment().endOf('day')) || (current && current < moment('1961-01-01').endOf('day')))\n}\n\n// function scrollFunction() {\n//   if (document.body.scrollTop > 500 || document.documentElement.scrollTop > 500) {\n//     document.getElementById(\"myBtn\").style.display = \"block\"\n//   } else {\n//     document.getElementById(\"myBtn\").style.display = \"none\"\n//   }\n// }\n// window.onscroll = function () { scrollFunction() };\n\nclass MapLaunches extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      AnnouncedData: null,\n      ScheduledData: null,\n      FinishedData: null,\n      visible: false,\n      loading: false,\n      disabledSlider: false,\n      test: [],\n      show: false,\n\n    }\n    this.launchDateButtonOnChange = this.launchDateButtonOnChange.bind(this)\n    this.timeBeforeToShowMarkers = this.timeBeforeToShowMarkers.bind(this)\n    this.scrollToTop = this.scrollToTop.bind(this)\n  }\n\n  scrollToTop() {\n    scroll.scrollToTop();\n  }\n\n  fetchAnnounced(url) {\n    fetch(url)\n      .then(response => response.json())\n      .then(data => this.setState({ AnnouncedData: data }))\n  }\n\n  fetchScheduled(url) {\n    fetch(url)\n      .then(response => response.json())\n      .then(data => this.setState({ ScheduledData: data }))\n  }\n\n  fetchFinished(url) {\n    this.setState({ loading: true })\n    fetch(url)\n      .then(response => response.json())\n      .then(data => this.setState({ FinishedData: data, loading: false, }))\n  }\n\n\n  componentDidMount() {\n    this.fetchAnnounced(URL_FOR_ANNOUNCED)\n    this.fetchScheduled(URL_FOR_SCHEDULED_LAUNCHES)\n    this.fetchFinished(URLForFinishedLaunch)\n  }\n\n  handleDisabledChange = disabled => {\n    this.setState({ disabled })\n  }\n\n  showModal = () => {\n    this.setState({\n      visible: true,\n    })\n  }\n\n  handleOk = e => {\n    this.setState({\n      visible: false,\n    })\n  }\n\n  handleCancel = e => {\n    this.setState({\n      visible: false,\n    })\n  }\n\n  async validationOfDate(url) {\n    this.setState({ loading: true })\n    let response = await fetch(url)\n    if (response.ok) { // если HTTP-статус в диапазоне 200-299 получаем новые данные иначе Notification\n      this.fetchOldLaunches(url)\n    } else {\n      notificationForInvalidDate('topRight')\n      this.setState({ loading: false })\n    }\n  }\n\n  launchDateButtonOnChange(date, dateString) {\n    URLForFinishedLaunch = `https://launchlibrary.net/1.4/launch?startdate=${dateString[0]}&enddate=${dateString[1]}&limit=${LIMIT}&fields=name,net,location,status,rocket,mapURL,countryCode`\n    this.validationOfDate(URLForFinishedLaunch)\n  }\n\n  timeBeforeToShowMarkers() {\n    let secondsToGo = 1\n\n    const timer = setInterval(() => {\n      secondsToGo -= 1\n    }, 1000);\n\n    setTimeout(() => {\n      clearInterval(timer)\n      this.func()\n    }, secondsToGo * 1000)\n\n  }\n\n  //  showMarkers () {\n  //   if (this.state.loading == false) {\n  //     let count = 0\n  //   const timer = setInterval(() => {\n  //     this.setState({test: [this.state.launchOldData.launches[count]]})\n  //     count++\n  //   }, 1000)\n\n  //   setTimeout(() => {\n  //     clearInterval(timer)\n  //     this.func()\n  //   }, count * 1000)\n  //   }\n  // }\n\n  func() {\n    let count = this.state.FinishedData.launches.length\n    const timer = setInterval(() => {\n      console.log(count)\n      count--\n      this.setState({ test: [this.state.FinishedData.launches[count]] })\n      console.log(this.state.test);\n\n    }, 1000)\n\n    setTimeout(() => {\n      clearInterval(timer)\n      // this.showMarkers()\n    }, count * 1000)\n  }\n\n  render() {\n    const { AnnouncedData, ScheduledData, FinishedData, loading } = this.state\n    return (\n      <div>\n        {AnnouncedData && ScheduledData && FinishedData\n          ?\n          <Parallax pages={3.15}>\n            {/* Здесь лежат загружаемые модули (облака, планеты и т.д.) */}\n            <ParallaxLayer offset={1} speed={1} style={{ backgroundColor: '#805E73' }} />\n\n            <ParallaxLayer offset={2} speed={1} style={{ backgroundColor: '#87BCDE' }} />\n\n            <ParallaxLayer offset={0} speed={0} factor={3.15} style={{ backgroundImage: URL('stars', true), backgroundSize: 'cover' }} className='background' />\n\n            <ParallaxLayer offset={2.3} speed={-0.1} style={{ pointerEvents: 'none' }}>\n              <img src={Satellite2} style={{ width: '15%', marginLeft: '70%' }} />\n            </ParallaxLayer>\n\n            <ParallaxLayer offset={2.4} speed={0} style={{ pointerEvents: 'none' }}>\n              <img src={Alien} className='Alien' />\n            </ParallaxLayer>\n\n            <ParallaxLayer offset={2.5} speed={-0.3} style={{ pointerEvents: 'none' }}>\n              <img src={Earth} style={{ width: '40%', marginLeft: '70%' }} />\n            </ParallaxLayer>\n\n            <ParallaxLayer offset={2.46} speed={-0.4} style={{ opacity: 0.9 }}>\n              <img src={Cloud} style={{ display: 'block', width: '15%', marginLeft: '85%' }} />\n            </ParallaxLayer>\n\n            <ParallaxLayer offset={1} speed={0.8} style={{ opacity: 0.1 }}>\n              <img src={Cloud} style={{ display: 'block', width: '20%', marginLeft: '55%' }} />\n              <img src={Cloud} style={{ display: 'block', width: '10%', marginLeft: '15%' }} />\n            </ParallaxLayer>\n\n            <ParallaxLayer offset={1.75} speed={0.5} style={{ opacity: 0.1 }}>\n              <img src={Cloud} style={{ display: 'block', width: '20%', marginLeft: '70%' }} />\n              <img src={Cloud} style={{ display: 'block', width: '20%', marginLeft: '40%' }} />\n            </ParallaxLayer>\n\n            <ParallaxLayer offset={1} speed={0.2} style={{ opacity: 0.2 }}>\n              <img src={Cloud} style={{ display: 'block', width: '10%', marginLeft: '10%' }} />\n              <img src={Cloud} style={{ display: 'block', width: '20%', marginLeft: '75%' }} />\n            </ParallaxLayer>\n\n            <ParallaxLayer offset={1.6} speed={-0.1} style={{ opacity: 0.4 }}>\n              <img src={Cloud} style={{ display: 'block', width: '20%', marginLeft: '60%' }} />\n              <img src={Cloud} style={{ display: 'block', width: '25%', marginLeft: '30%' }} />\n              <img src={Cloud} style={{ display: 'block', width: '10%', marginLeft: '80%' }} />\n            </ParallaxLayer>\n\n            <ParallaxLayer offset={2.6} speed={0.4} style={{ opacity: 0.6 }}>\n              <img src={Cloud} style={{ display: 'block', width: '20%', marginLeft: '5%' }} />\n              <img src={Cloud} style={{ display: 'block', width: '15%', marginLeft: '75%' }} />\n            </ParallaxLayer>\n\n            <ParallaxLayer offset={2.85} speed={0.4} style={{ opacity: 0.6 }}>\n              <img src={Cloud} style={{ display: 'block', width: '10%', marginLeft: '37%' }} />\n            </ParallaxLayer>\n\n            <ParallaxLayer offset={0.1} speed={-0.6} style={{ pointerEvents: 'none' }}>\n              <img src={Satellite4} style={{ width: '15%', marginRight: '65%' }} />\n            </ParallaxLayer>\n\n            <ParallaxLayer offset={1.17} speed={-1.5} style={{ pointerEvents: 'none' }}>\n              <img src={Comet} style={{ width: '15%', marginLeft: '15%' }} />\n            </ParallaxLayer>\n\n            <ParallaxLayer offset={0.6} speed={-0.3} style={{ pointerEvents: 'none' }}>\n              <img src={Upi} style={{ width: '10%', marginLeft: '55%' }} />\n            </ParallaxLayer>\n\n            <ParallaxLayer offset={2.65} speed={-0.4} style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', pointerEvents: 'none' }}>\n              <img src={Mars} style={{ width: '50%', marginRight: '47%' }} />\n            </ParallaxLayer>\n\n\n\n\n            {/*Здесь лежит таблицы */}\n            <ParallaxLayer offset={0} speed={0.3} style={{ opacity: '80%', marginTop: '150px', }}>\n              <h1 style={{ textAlign: 'center' }}>Обьявленные запуски</h1>\n              <AnnouncedTable launches={AnnouncedData.launches} />\n            </ParallaxLayer>\n\n            <ParallaxLayer offset={1.1} speed={1} style={{ opacity: '80%', marginLeft: '10%', width: '80%' }}>\n              <h1 style={{ textAlign: 'center' }}>Запланированные запуски</h1>\n              <ScheduledTable launches={ScheduledData.launches} />\n            </ParallaxLayer>\n\n            <ParallaxLayer offset={2} speed={1} style={{ opacity: '80%', marginLeft: 'auto', marginRight: 'auto', width: '80%', marginLeft: '9%', }}>\n              <h1 style={{ textAlign: 'center' }}>Состоявшиеся запуски</h1>\n              <RangePicker className=\"RangePicker\"\n                defaultValue={[moment(THIS_YEAR), moment()]}\n                showToday={false, true}\n                onChange={this.launchDateButtonOnChange}\n                disabledDate={disabledDate}\n                allowClear={false}\n                style={{ margin: 10 }}\n              />\n              <Tooltip title={<p > Здесь можно настроить период запусков </p>}\n                mouseEnterDelay={0.2}\n                mouseLeaveDelay={0.5}\n                placement=\"top\" >\n                <InfoCircleOutlined />\n              </Tooltip>\n              <FinishedTable launches={FinishedData.launches} loading={loading} />\n            </ParallaxLayer>\n\n          </Parallax>\n          : <div style={{ backgroundColor: '#253237', minHeight: '100vh', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n            <LoadingOutlined style={{ fontSize: '100px' }} />\n          </div>\n        }\n      </div>\n    )\n  }\n}\n\nexport default MapLaunches","import React from 'react'\nimport {LoadingOutlined,  } from '@ant-design/icons'\n\nexport default () => {\n  return (\n    <div style={{ backgroundColor: '#253237', minHeight: '100vh', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n      <LoadingOutlined style={{ fontSize: '100px' }} />\n    </div>\n  )\n}","import React from 'react'\nimport { Parallax, ParallaxLayer } from 'react-spring/renderprops-addons'\n\nconst url = (name, wrap = false) => `${wrap ? 'url(' : ''}https://awv3node-homepage.surge.sh/build/assets/${name}.svg${wrap ? ')' : ''}`\n\nclass HomePage extends React.Component {\n  render() {\n    return (\n      <Parallax pages={3.15}>\n        <ParallaxLayer offset={1} speed={1}\n          style={{ backgroundColor: '#805E73' }}\n        />\n\n        <ParallaxLayer offset={2} speed={1}\n          style={{ backgroundColor: '#87BCDE' }}\n        />\n\n        <ParallaxLayer offset={0} speed={0} factor={3.5} style={{ backgroundImage: url('stars', true), backgroundSize: 'cover', backgroundColor: '#253237' }} />\n\n        {/* <ParallaxLayer offset={2.3} speed={-0.1} style={{ pointerEvents: 'none' }}>\n              <img src={url('satellite2')} style={{ width: '15%', marginLeft: '70%' }} />\n            </ParallaxLayer>\n\n            //земля\n            <ParallaxLayer offset={2.5} speed={-0.3} style={{ pointerEvents: 'none' }}>\n              <img src={url('earth')} style={{ width: '45%', marginLeft: '70%' }} />\n            </ParallaxLayer>\n            <ParallaxLayer offset={2.46} speed={-0.4} style={{ opacity: 0.9 }}>\n              <img src={url('cloud')} style={{ display: 'block', width: '15%', marginLeft: '85%' }} />\n            </ParallaxLayer>\n\n            <ParallaxLayer offset={1} speed={0.8} style={{ opacity: 0.1 }}>\n              <img src={url('cloud')} style={{ display: 'block', width: '20%', marginLeft: '55%' }} />\n              <img src={url('cloud')} style={{ display: 'block', width: '10%', marginLeft: '15%' }} />\n            </ParallaxLayer>\n\n            <ParallaxLayer offset={1.75} speed={0.5} style={{ opacity: 0.1 }}>\n              <img src={url('cloud')} style={{ display: 'block', width: '20%', marginLeft: '70%' }} />\n              <img src={url('cloud')} style={{ display: 'block', width: '20%', marginLeft: '40%' }} />\n            </ParallaxLayer>\n\n            <ParallaxLayer offset={1} speed={0.2} style={{ opacity: 0.2 }}>\n              <img src={url('cloud')} style={{ display: 'block', width: '10%', marginLeft: '10%' }} />\n              <img src={url('cloud')} style={{ display: 'block', width: '20%', marginLeft: '75%' }} />\n            </ParallaxLayer>\n\n            <ParallaxLayer offset={1.6} speed={-0.1} style={{ opacity: 0.4 }}>\n              <img src={url('cloud')} style={{ display: 'block', width: '20%', marginLeft: '60%' }} />\n              <img src={url('cloud')} style={{ display: 'block', width: '25%', marginLeft: '30%' }} />\n              <img src={url('cloud')} style={{ display: 'block', width: '10%', marginLeft: '80%' }} />\n            </ParallaxLayer>\n\n            <ParallaxLayer offset={2.6} speed={0.4} style={{ opacity: 0.6 }}>\n              <img src={url('cloud')} style={{ display: 'block', width: '20%', marginLeft: '5%' }} />\n              <img src={url('cloud')} style={{ display: 'block', width: '15%', marginLeft: '75%' }} />\n            </ParallaxLayer>\n\n            <ParallaxLayer offset={2.85} speed={0.4} style={{ opacity: 0.6 }}>\n              <img src={url('cloud')} style={{ display: 'block', width: '10%', marginLeft: '37%' }} />\n            </ParallaxLayer>\n\n            <ParallaxLayer offset={0.1} speed={-0.6} style={{ pointerEvents: 'none' }}>\n              <img src={url('satellite4')} style={{ width: '15%', marginRight: '65%' }} />\n            </ParallaxLayer>\n\n            // комета\n            <ParallaxLayer offset={1.2} speed={-1.5} style={{ pointerEvents: 'none' }}>\n              <img src={'https://image.flaticon.com/icons/svg/2909/2909590.svg'} style={{ width: '15%', marginLeft: '15%' }} />\n            </ParallaxLayer>\n\n            // планета\n            <ParallaxLayer offset={0.6} speed={-0.3} style={{ pointerEvents: 'none' }}>\n              <img src={'https://image.flaticon.com/icons/svg/2929/2929375.svg'} style={{ width: '10%', marginLeft: '55%' }} />\n            </ParallaxLayer>\n\n            // \n            <ParallaxLayer offset={2.7} speed={-0.4} style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', pointerEvents: 'none' }}>\n              <img src={'https://image.flaticon.com/icons/svg/2277/2277588.svg'} style={{ width: '60%', marginRight: '45%' }} />\n            </ParallaxLayer> */}\n\n      </Parallax>\n    )\n  }\n}\n\nexport default HomePage\n","import React, { Component } from 'react'\n\nimport { Layout, Menu } from 'antd'\nimport { HomeOutlined, RocketOutlined, AreaChartOutlined } from '@ant-design/icons'\nimport { Route, NavLink } from \"react-router-dom\"\n// import 'antd/dist/antd.css'\nimport 'antd/dist/antd.dark.css'\n\nimport '../css/index.css' // стандарт\nimport MapLaunches from './Launches'\nimport Static from './testComponents/Static'\nimport HomePage from './HomePage'\n\n\n\nconst { Header, Footer } = Layout\n\nclass LayoutContainer extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Layout id=\"layout\" >\n\n          <Header style={{ backgroundColor: '#253237' }} >\n            <Menu defaultSelectedKeys={['1']} theme='dark' mode=\"horizontal\" style={{ textAlign: 'right', backgroundColor: '#253237' }}>\n              <Menu.Item key=\"1\" icon={<HomeOutlined />}>     <NavLink to=\"/\">          Приветсвие    </NavLink></Menu.Item>\n              <Menu.Item key=\"2\" icon={<AreaChartOutlined />}><NavLink to=\"/static\">    Cтатистика    </NavLink></Menu.Item>\n              <Menu.Item key=\"3\" icon={<RocketOutlined />}>   <NavLink to=\"/launches\">  Запуски       </NavLink></Menu.Item>\n            </Menu>\n          </Header>\n\n          <Layout className='layout-content'>\n            <Route exact path='/' component={HomePage} />\n            <Route exact path='/static' component={Static} />\n            <Route exact path='/launches' component={MapLaunches} />\n\n            {/* <Footer>\n              Design © 2020 <br></br>\n              <GithubOutlined />\n              <a href=\"https://github.com/SShaposhnik/global-launches-app\" target=\"_blank\"> Github</a>\n            </Footer> */}\n          </Layout>\n        </Layout>\n\n      </div>\n    )\n  }\n}\n\nexport default LayoutContainer","import React, {useState} from 'react'\n\nimport LayoutContainer from './catalog/component/Layout'\nimport './catalog/css/index.scss'\n\n\nfunction App() {\n  const [preload, setPreload] = useState(false)\n  console.log(preload);\n\n  function func () {\n    setPreload(true)\n  }\n  setTimeout(func, 3000)\n  \n  return (\n    <div className=\"App\">\n      {preload\n        ? <div>\n          <LayoutContainer />\n        </div>\n        : <div id=\"hellopreloader\">\n          <div id=\"hellopreloader_preload\">\n            <div className=\"container\">\n              <div className=\"element\"></div>\n              <div className=\"element\"></div>\n              <div className=\"element\"></div>\n              <div className=\"element\"></div>\n              <div className=\"element\"></div>\n            </div>\n          </div>\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { HashRouter } from 'react-router-dom'\n\nimport App from './App'\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>\n  , document.getElementById('root')\n)"],"sourceRoot":""}