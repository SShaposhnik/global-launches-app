{"version":3,"sources":["catalog/images/earth.svg","catalog/images/satellite2.svg","catalog/images/alien.svg","catalog/images/mars.svg","catalog/images/comet.svg","catalog/images/meteor.svg","catalog/images/satellite4.svg","catalog/images/stars.svg","catalog/images/cloud.svg","catalog/images/moon.svg","catalog/images/spaceship.svg","catalog/images/rocket.svg","catalog/component/MapChart.js","catalog/component/Timer.js","catalog/component/OldCard.js","catalog/component/FinishedLaunches.js","catalog/component/AnnouncedLaunches.js","catalog/component/ScheduledLaunches.js","catalog/component/Launches.js","catalog/component/testComponents/Static.js","catalog/component/HomePage.js","catalog/component/Layout.js","App.js","index.js"],"names":["module","exports","LAUNCH_STATUS","1","2","3","4","5","6","7","MapChart","launches","flag","tableData","markers","console","log","map","el","RocketAndMissionNames","name","rocketName","status","statusNumber","markerOffset","coordinates","longitude","latitude","padsMapURL","padsWikiURL","rocketwikiURL","rocket","location","pads","els","mapURL","wikiURL","projection","width","height","className","geography","geographies","geo","key","rsmKey","fill","stroke","on","overlayClassName","title","href","target","placement","mouseLeaveDelay","transform","cx","cy","r","d","textAnchor","y","style","fontFamily","split","Timer","props","state","days","minutes","hours","seconds","time_up","deadline","count","bind","now","Date","getTime","t","this","Math","floor","setState","clearInterval","x","timeTillLaunch","setInterval","Component","Meta","Card","LaunchCard","hoverable","onClick","func","cover","alt","src","description","moment","net","utc","locale","format","Table","Column","FinishedTable","showModal","visible","handleOk","e","handleCancel","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","ref","node","searchInput","placeholder","value","onChange","onPressEnter","handleSearch","marginBottom","display","type","icon","SearchOutlined","size","handleReset","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","setTimeout","select","render","text","searchedColumn","highlightStyle","backgroundColor","searchWords","searchText","autoEscape","textToHighlight","markersLaunches","show","columns","align","onCell","selectedRows","selectedRowKeys","event","swal","button","filters","statusText","indexOf","countryCode","loading","oldLaunch","id","RocketAndMissionName","textAlign","locationWithoutPads","spaceortName","PadsMapURL","url","PadsWikiURL","RocketWikiURL","reverse","dataSource","pagination","position","defaultCurrent","simple","pageSizeOptions","filterReset","ClearOutlined","filterConfirm","CheckOutlined","centered","onOk","onCancel","footer","closable","ColumnGroup","launchStatus","launchesWithTimer","missionsName","missions","p","timer","bordered","showSizeChanger","showQuickJumper","hideOnSinglePage","RangePicker","Layout","Content","DatePicker","THIS_YEAR","URLForFinishedLaunch","URL","wrap","disabledDate","current","endOf","window","addEventListener","MapLaunches","AnnouncedData","ScheduledData","FinishedData","disabledSlider","dataArrayForMarkers","launchDateButtonOnChange","timeBeforeToShowMarkers","scrollToTop","scroll","fetch","then","response","json","data","fetchAnnounced","fetchScheduled","fetchFinished","ok","notification","warning","message","date","dateString","validationOfDate","secondsToGo","length","pages","parallax","offset","speed","factor","backgroundImage","backgroundSize","pointerEvents","Satellite2","marginLeft","Alien","Earth","opacity","Cloud","Satellite4","marginRight","Comet","Upi","alignItems","justifyContent","Mars","marginTop","defaultValue","showToday","allowClear","margin","mouseEnterDelay","InfoCircleOutlined","RocketButton","scrollTo","minHeight","LoadingOutlined","fontSize","HomePage","React","onscroll","document","body","scrollTop","documentElement","getElementById","Header","LayoutContainer","Footer","zIndex","theme","mode","Item","HomeOutlined","to","AreaChartOutlined","RocketOutlined","exact","path","component","Static","shape","UpOutlined","App","ReactDOM"],"mappings":"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","file":"static/js/main.5edfce3c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/earth.c046ac84.svg\";","module.exports = __webpack_public_path__ + \"static/media/satellite2.bb5b6803.svg\";","module.exports = __webpack_public_path__ + \"static/media/alien.9c05602d.svg\";","module.exports = __webpack_public_path__ + \"static/media/mars.cf923732.svg\";","module.exports = __webpack_public_path__ + \"static/media/comet.60dacd2c.svg\";","module.exports = __webpack_public_path__ + \"static/media/meteor.ae2d9c66.svg\";","module.exports = __webpack_public_path__ + \"static/media/satellite4.021c26fd.svg\";","module.exports = __webpack_public_path__ + \"static/media/stars.5546c7c6.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloud.305b7b7b.svg\";","module.exports = __webpack_public_path__ + \"static/media/moon.48fb74a2.svg\";","module.exports = __webpack_public_path__ + \"static/media/spaceship.a981e12e.svg\";","module.exports = __webpack_public_path__ + \"static/media/rocket.eb5f3344.svg\";","import React from 'react'\n\nimport { ComposableMap, Geographies, Geography, Marker, } from \"react-simple-maps\"\nimport { Tooltip } from 'antd'\n\nimport '../css/index.css'\n\nconst geoUrl =\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\"\nconst MARKER_OF_SET = - 30\n\n// цвета маркеров\nconst LAUNCH_STATUS = {\n  1: 'Запланированы точные дата и время запуска',\n  2: 'Дата и время будут объявлены позже',\n  3: 'green',\n  4: 'red',\n  5: 'Незапланированная задержка',\n  6: 'В полете',\n  7: 'Во время запуска произошел частичный сбой',\n}\n\nconst MapChart = ({ launches, flag, tableData }) => {\n  let markers = []\n  \n  if (launches == null && tableData == null) {\n    console.log('Markers not found!');\n  } else if (flag) {\n    markers = tableData.map(el => ({\n      RocketAndMissionNames: el.name,\n      rocketName: el.rocketName,\n      status: el.statusNumber,\n      markerOffset: MARKER_OF_SET,\n      coordinates: [el.longitude, el.latitude],\n      padsMapURL: el.padsMapURL,\n      padsWikiURL: el.padsWikiURL,\n      rocketwikiURL: el.rocketwikiURL,\n      latitude: el.latitude,\n      longitude: el.longitude,\n    }))\n  } else {\n    markers = launches.map(el => ({\n      RocketAndMissionNames: el.name,\n      rocketName: el.rocket.name,\n      status: el.status,\n      markerOffset: MARKER_OF_SET,\n      coordinates: [el.location.pads.map(els => (els.longitude)), el.location.pads.map(els => (els.latitude))],\n      padsMapURL: el.location.pads.map(els => (els.mapURL)),\n      padsWikiURL: el.location.pads.map(els => (els.wikiURL)),\n      rocketwikiURL: el.rocket.wikiURL,\n      latitude: el.location.pads.map(els => (els.latitude)),\n      longitude: el.location.pads.map(els => (els.longitude)),\n    }))\n  }\nconsole.log(markers);\n\n  return (\n    <ComposableMap\n      projection=\"geoMercator\"\n      width=\"800\"\n      height=\"600\"\n      className=\"MapChartStyle\"\n    >\n      <Geographies geography={geoUrl}>\n        {({ geographies }) =>\n          geographies.map(geo => (\n            <Geography\n              key={geo.rsmKey}\n              geography={geo}\n              fill=\"#EAEAEC\"\n              stroke=\"#D6D6DA\"\n            />\n          ))\n        }\n\n      </Geographies>\n      {markers.map(({ rocketName, status, coordinates, markerOffset, padsWikiURL, rocketwikiURL, latitude, longitude, RocketAndMissionNames }) => (\n        <Marker on coordinates={coordinates}\n          className=\"MarkersSryle\"\n        >\n          <Tooltip\n            overlayClassName=\"tooltipInMapChart\"\n            title={\n              <div>\n                <a href={\"http://maps.google.com/maps?q=\" + latitude + \",\" + longitude} target=\"_blank\">Google Maps</a><br></br>\n                <a href={padsWikiURL} target=\"_blank\">Космодром вики</a><br></br>\n                <a href={rocketwikiURL} target=\"_blank\">Ракета вики</a><br></br>\n              </div>\n\n            }\n            placement=\"bottom\"\n            mouseLeaveDelay=\"0.3\"\n          >\n            <g\n              fill={LAUNCH_STATUS[status]}\n              transform=\"translate(-12, -24)\"\n            >\n              <circle cx=\"12\" cy=\"10\" r=\"3\" />\n              <path d=\"M12 21.7C17.3 17 20 13 20 10a8 8 0 1 0-16 0c0 3 2.7 6.9 8 11.7z\" />\n            </g>\n          </Tooltip>\n\n          <text\n            textAnchor=\"middle\"\n            y={markerOffset}\n            style={{ fontFamily: \"system-ui\", fill: \"#5D5A6D\" }}\n          >\n            {RocketAndMissionNames.split('|')[0]}\n          </text>\n        </Marker>\n      )\n      )}\n    </ComposableMap>\n  )\n}\n\nexport default MapChart\n","import React, { Component } from 'react'\n\n\nclass Timer extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      days: 0,\n      minutes: 0,\n      hours: 0,\n      seconds: 0,\n      time_up: \"\",\n      deadline: null,\n    }\n    this.count = this.count.bind(this)\n  }\n\n  count() {\n    let now = new Date().getTime();\n    let t = this.state.deadline - now;\n    let days = Math.floor(t / (1000 * 60 * 60 * 24));\n    let hours = Math.floor((t % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n    let minutes = Math.floor((t % (1000 * 60 * 60)) / (1000 * 60));\n    let seconds = Math.floor((t % (1000 * 60)) / 1000);\n    this.setState({ days, minutes, hours, seconds })\n    if (t < 0) {\n      clearInterval(this.x);\n      this.setState({ days: 0, minutes: 0, hours: 0, seconds: 0, time_up: \"Запуск состоялся!\" })\n    }\n  }\n\n  componentDidMount() {\n    const deadline = new Date(this.props.timeTillLaunch).getTime();\n    setInterval(this.count, 1000)\n    this.setState({ ...this.state, deadline: deadline })\n  }\n\n  render() {\n    const { days, seconds, hours, minutes, time_up } = this.state\n    return (\n      <div>\n        {(seconds < 10)\n          ? <p>{days}д: {hours}ч: {minutes}м: 0{seconds}с</p>\n          : <p>{days}д: {hours}ч: {minutes}м: {seconds}с</p>\n        }\n        <strong>{time_up}</strong>\n      </div>\n    )\n  }\n}\n\nexport default Timer","import React, { Component } from 'react'\n\nimport { Card, Avatar } from 'antd'\nimport moment from 'moment'\nimport 'moment/locale/ru'\nimport { EditOutlined, EllipsisOutlined, SettingOutlined } from '@ant-design/icons'\n\nimport Timer from './Timer'\n\nimport '../css/index.css'\n\nconst { Meta } = Card\n\nclass LaunchCard extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n\n    }\n  }\n\n\n  func() {\n    console.log('Привет!')\n  }\n\n  render() {\n    const { launches } = this.props\n    console.log(launches);\n    \n    return (\n      <div className=\"card-layout\">\n          <Card\n            hoverable\n            className=\"card-grid\"\n            onClick={this.func}\n            cover={\n              <img\n                alt=\"example\"\n                src=\"https://images.pexels.com/photos/23769/pexels-photo.jpg?auto=compress&cs=tinysrgb&dpr=2&w=500\"\n              />\n            }\n          >\n            <Meta\n              // avatar={<Avatar src=\"https://image.flaticon.com/icons/svg/2929/2929073.svg\" />}\n              title={this.props.launches.rocket.name}\n              description={this.props.launches.name.split('|')[1]}\n            /><br />\n              Дата запуска: {moment(this.props.launches.net).utc(0).locale('ru').format('LLL z')}<br /><br />\n            <Timer timeTillLaunch={this.props.launches.net} />\n          </Card>\n      </div>\n    )\n  }\n}\n\nexport default LaunchCard","import React, { Component } from 'react'\n\nimport { Table, Modal, Tooltip, Input, Button, Space } from 'antd'\nimport { ClearOutlined, CheckOutlined, SearchOutlined, SettingFilled } from '@ant-design/icons'\nimport {Alien} from '../images'\nimport Highlighter from 'react-highlight-words'\nimport moment from 'moment'\nimport 'moment/locale/ru'\nimport swal from '@sweetalert/with-react'\n\nimport MapChart from './MapChart'\nimport LaunchCard from './OldCard'\nimport '../css/index.css'\n\nmoment.locale()\n\nconst { Column } = Table\nconst LAUNCH_STATUS = {\n  1: 'Запуск скоро состоится',\n  2: 'Дата и время будут объявлены позже',\n  3: 'Успешно',\n  4: 'Неудача',\n  5: 'Задержка',\n  6: 'В полете',\n  7: 'Произошел сбой',\n}\n\nconst COUNTRY = {\n  USA: 'США',\n  CHN: 'Китай',\n  KAZ: 'Казахстан',\n  IRN: 'Иран',\n  RUS: 'Россия',\n  GUF: 'Французская Гвиана',\n  JPN: 'Япония',\n  NZL: 'Новая Зеландия',\n  IND: 'Индия',\n  UNK: 'Великобритания',\n}\n\nclass FinishedTable extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      markersLaunches: null,\n      searchText: '',\n      searchedColumn: '',\n      show: false,\n    }\n  }\n\n  showModal = () => {\n    this.setState({\n      visible: true,\n    })\n  }\n\n  handleOk = e => {\n    this.setState({\n      visible: false,\n    })\n  }\n\n  handleCancel = e => {\n    this.setState({\n      visible: false,\n    })\n  }\n\n  getColumnSearchProps = dataIndex => ({\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={node => {\n            this.searchInput = node;\n          }}\n          placeholder={`${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\n        />\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Поиск\n          </Button>\n          <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n            Сбросить\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n    onFilter: (value, record) => record.name.toString().toLowerCase().includes(value.toLowerCase()),\n    onFilterDropdownVisibleChange: visible => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n    render: text =>\n      this.state.searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n          searchWords={[this.state.searchText]}\n          autoEscape\n          textToHighlight={text.toString()}\n        />\n      ) : (\n          text\n        ),\n  })\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm()\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: toString(dataIndex),\n    })\n  }\n\n  handleReset = clearFilters => {\n    clearFilters()\n    this.setState({ searchText: '' })\n  }\n\n  render() {\n    const columns = [\n      {\n        title: \"Название запуска\",\n        dataIndex: \"RocketAndMissionName\",\n        className: 'Name-launch-style',\n        width: '30%',\n        align: 'left',\n        ...this.getColumnSearchProps('Название запуска'),\n        onCell: (selectedRows, selectedRowKeys) => {\n          // selectedRowKeys -> number\n          // selectedRows    -> data\n          return {\n            onClick: event => {\n              // console.log(selectedRowKeys);\n              // console.log(selectedRows);\n              // this.setState({ markersLaunches: [selectedRows] })\n              this.setState({ markersLaunches: [selectedRows] })\n              // this.showModal()\n              swal (\n                <div>\n                  {/* <h1>{this.props.launches[0].name}</h1>\n                  <p>Время: {this.props.launches[0].net}</p>\n                  <p>Космодром: {this.props.launches[0].location.name}</p>\n                  <img src={Alien} style={{width: '50%'}}/> */}\n                  <LaunchCard launches={this.props.launches[0]} />\n                  {/* <MapChart tableData={this.state.markersLaunches} flag={true} /> */}\n                </div>, \n                {button: false,}\n              )\n            },\n          }\n        }\n      },\n      {\n        title: \"Дата запуска\",\n        dataIndex: \"net\",\n        align: 'center',\n        width: '25%',\n\n      },\n      {\n        title: \"Статус\",\n        dataIndex: \"statusText\",\n        align: 'center',\n        filters: [\n          {\n            text: 'Успешно',\n            value: 'Успешно',\n          },\n          {\n            text: 'Неудача',\n            value: 'Неудача',\n          },\n          {\n            text: 'Произошел сбой',\n            value: 'Произошел сбой',\n          },\n        ],\n        onFilter: (value, record) => { return record.statusText.indexOf(value) === 0 }\n      },\n      {\n        title: \"Площадка / Космодром\",\n        dataIndex: \"location\",\n        width: '30%',\n        align: 'center',\n        filters: [\n          {\n            text: 'США',\n            value: 'USA',\n          },\n          {\n            text: 'Китай',\n            value: 'CHN',\n          },\n          {\n            text: 'Казахстан',\n            value: 'KAZ',\n          },\n          {\n            text: 'Иран',\n            value: 'IRN',\n          },\n          {\n            text: 'Россия',\n            value: 'RUS',\n          },\n          {\n            text: 'Французская Гвиана',\n            value: 'GUF',\n          },\n          {\n            text: 'Япония',\n            value: 'JPN',\n          },\n          {\n            text: 'Новая Зеландия',\n            value: 'NZL',\n          },\n          {\n            text: 'Индия',\n            value: 'IND',\n          },\n          {\n            text: 'Великобритания',\n            value: 'UNK',\n          },\n          // {\n          //   text: 'Фильтр по космодромам',\n          //   value: 'Submenu',\n          //   children: [\n          //     {\n          //       text: 'Cape Canaveral',\n          //       value: 'Cape Canaveral',\n          //     },\n          //     {\n          //       text: 'Jiuquan',\n          //       value: 'Jiuquan',\n          //     },\n          //   ],\n          // }\n        ],\n        onFilter: (value, record) => { return record.countryCode.indexOf(value) === 0 },\n      },\n    ]\n\n    const loading = this.props.loading\n\n    const oldLaunch = this.props.launches.map(el => ({\n      key: el.id,\n    RocketAndMissionName: <a>{el.name}</a>,\n      name: el.name,\n      rocket: el.rocket.name,\n      net: <Tooltip title={\n        <div>\n          <p style={{ textAlign: 'center' }}>Локальное время</p>\n          <p style={{ textAlign: 'center' }}>{moment(el.net).locale('ru').format('LLL')}</p>\n        </div>}>\n        {moment(el.net).utc(0).locale('ru').format('LLL z')}\n      </Tooltip>,\n      statusText: LAUNCH_STATUS[el.status],\n      statusNumber: el.status,\n      location: <div>\n        {el.location.pads.map(els => (els.name.split(',')[0]))}<br />\n        {el.location.name.split(',')[0]}\n      </div>,\n      locationWithoutPads: el.location.name,\n      spaceortName: el.location.name.split(',')[0],\n      longitude: el.location.pads.map(els => (els.longitude)),\n      latitude: el.location.pads.map(els => (els.latitude)),\n      PadsMapURL: el.location.pads.map(url => (url.mapURL)),\n      PadsWikiURL: el.location.pads.map(url => (url.wikiURL)),\n      RocketWikiURL: el.rocket.wikiURL,\n      countryCode: el.location.countryCode,\n    }))\n    // переверачиваем дату, не особо важно. Влияет только на вывод\n    oldLaunch.reverse()\n\n    return (\n      <div >\n        <Table\n          className='TableOld2'\n          columns={columns}\n          dataSource={oldLaunch}\n          pagination={{\n            position: ['bottomCenter'],\n            defaultCurrent: 1,\n            simple:\"true\",\n            pageSizeOptions: ['10', '50', '100'],\n            // showQuickJumper: \"true\",\n            // hideOnSinglePage: \"true\",\n          }}\n          size=\"small\"\n          locale={{\n            filterReset: <ClearOutlined />,\n            filterConfirm: <CheckOutlined />,\n          }}\n          loading={loading}\n        >\n        </Table>\n\n        <Modal\n          className='modal-style-from-oldTable2'\n          centered\n          visible={this.state.visible}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n          footer={null}\n          width='70%'\n          closable={false}\n        >\n          <MapChart tableData={this.state.markersLaunches} flag={true} />\n        </Modal>\n      </div>\n\n    )\n  }\n}\n\nexport default FinishedTable\n","import React from 'react'\n\nimport { Table, Tooltip, Modal, Button, Space, notification } from 'antd'\nimport moment from 'moment'\nimport 'moment/locale/ru'\n\nimport Timer from './Timer'\nimport '../css/index.css'\n\nmoment.locale()\nconst { Column, ColumnGroup } = Table;\n\nconst launchStatus = {\n  1: 'Запланированы точные дата и время запуска',\n  2: 'Дата и время будут объявлены позже',\n  3: 'Запуск прошел успешно',\n  4: 'Неудачный запуск',\n  5: 'Незапланированная задержка',\n  6: 'В полете',\n  7: 'Во время запуска произошел частичный сбой',\n}\nconst columns = [\n  {\n    title: 'Название запуска',\n    dataIndex: 'RocketAndMissionName',\n    width: '30%',\n    align: 'center',\n  },\n  {\n    title: 'Дата запуска',\n    dataIndex: 'net',\n    align: 'center',\n    width: '25%',\n  },\n  {\n    title: 'Таймер',\n    dataIndex: 'timer',\n    align: 'center',\n    width: '20%'\n  },\n  {\n    title: 'Площадка / Космодром',\n    dataIndex: 'location',\n    width: '30%',\n    align: 'center',\n  },\n]\n\nexport default ({ launches }) => {\n\n  const launchesWithTimer = launches.map(el => ({\n  rocketName: el.rocket.name,\n    location: <div>\n      {el.location.pads.map(els => (els.name.split(',')[0]))}<br />\n      {el.location.name.split(',')[0]}\n    </div>,\n    missionsName: el.missions.map(els => (els.name)),\n    RocketAndMissionName: el.name,\n    pads: el.location.pads.map(p => (p.name)),\n    net: <Tooltip title={<div><p style={{ textAlign: 'center' }}>Локальное время</p> <p style={{ textAlign: 'center' }}>{moment(el.net).locale('ru').format('LLL')}</p></div>}>{moment(el.net).utc(0).locale('ru').format('LLL z')}</Tooltip>,\n    status: launchStatus[el.status],\n    timer: <Timer timeTillLaunch={el.net} />\n  }))\n\n  return (\n    <div>\n      <Table\n        className=\"announced-table\"\n        dataSource={launchesWithTimer}\n        pagination={false}\n        size=\"small\"\n        columns={columns}\n        bordered=\"true\"\n      />\n    </div>\n  )\n}","import React from 'react'\n\nimport { Table, Pagination } from 'antd'\nimport moment from 'moment'\nimport 'moment/locale/ru'\nimport { LoadingOutlined } from '@ant-design/icons'\n\nimport '../css/index.css'\nmoment.locale()\n\n\nconst launchStatus = {\n  1: 'Запланированы точные дата и время запуска',\n  2: 'Дата и время будут объявлены позже',\n  3: 'Запуск прошел успешно',\n  4: 'Неудачный запуск',\n  5: 'Незапланированная задержка',\n  6: 'В полете',\n  7: 'Во время запуска произошел частичный сбой',\n}\n\nconst columns = [\n  {\n    title: 'Название запуска',\n    dataIndex: 'RocketAndMissionName',\n    width: '30%',\n    align: 'center',\n    className: 'launch-name-nextlaunch'\n  },\n  {\n    title: 'Дата запуска',\n    dataIndex: 'net',\n    align: 'center',\n    width: '25%',\n  },\n  {\n    title: 'Площадка / Космодром',\n    dataIndex: 'location',\n    width: '30%',\n    align: 'center',\n  },\n]\n\nexport default ({ launches }) => {\n  const launchesWithTimer = launches.map(el => ({\n    RocketAndMissionName: <p className='launchText'>{el.name}</p>,\n    location: <div>\n      {el.location.pads.map(els => (els.name.split(',')[0]))}<br />\n      {el.location.name.split(',')[0]}\n    </div>,\n    net: moment(el.net).locale('ru').format('MMMM YYYY'),\n    status: launchStatus[el.status],\n    pads: el.location.pads.map(els => (els.name)),\n  }))\n  return (\n    <Table\n      dataSource={launchesWithTimer}\n      pagination={{\n        position: ['bottomCenter'],\n        showSizeChanger: false,\n        defaultCurrent: 1,\n        // simple:\"true\",\n        showQuickJumper: false,\n        hideOnSinglePage: \"true\",\n      }}\n      size=\"small\"\n      columns={columns}\n      bordered=\"false\"\n    />\n  )\n}","import React, { Component } from 'react'\n\nimport { Layout, DatePicker, Button, notification, Divider, Table, Tooltip, Switch } from 'antd'\nimport { UpOutlined, LoadingOutlined, InfoCircleOutlined } from '@ant-design/icons'\nimport { Parallax, ParallaxLayer } from 'react-spring/renderprops-addons'\nimport moment from 'moment'\nimport { animateScroll as scroll, scroller } from 'react-scroll'\n\nimport { Earth, Satellite2, Alien, Mars, Comet, Meteor, Satellite4, Stars, Cloud, Upi, Spaceship, RocketButton } from '../images'\nimport FinishedTable from './FinishedLaunches'\nimport AnnouncedTable from \"./AnnouncedLaunches\"\nimport ScheduledTable from './ScheduledLaunches'\nimport '../css/index.css'\nimport MapChart from './MapChart'\n\nconst { Content } = Layout\nconst LIMIT = 10000\nconst { RangePicker } = DatePicker\nconst THIS_YEAR = moment().format('YYYY')\n\n// следующие запуски с временем и датой\nexport const URL_FOR_ANNOUNCED = 'https://launchlibrary.net/1.4/launch/next/1000?status=1,2'\n\n// следующие запуски с датой(без времени)\nexport const URL_FOR_SCHEDULED_LAUNCHES = 'https://launchlibrary.net/1.4/launch/next/1000?status=2'\n\n// старые запуски\nexport let URLForFinishedLaunch = 'https://launchlibrary.net/1.4/launch?startdate=' + moment(THIS_YEAR).format('YYYY-MM-DD') + '&enddate=' + moment().format('YYYY-MM-DD') + '&limit=' + LIMIT + '&fields=name,net,location,status,rocket,mapURL,countryCode'\n\nconst URL = (name, wrap = false) => `${wrap ? 'URL(' : ''}https://awv3node-homepage.surge.sh/build/assets/${name}.svg${wrap ? ')' : ''}`\nconst notificationForInvalidDate = (placement) => {\n  notification.warning({\n    message: <strong> Похоже,что за выбранный период времени запусков нет </strong>,\n    placement,\n  })\n}\n\nconst notificationMessage = (message, placement) => {\n  notification.error({\n    message,\n    placement,\n  })\n}\n\nfunction disabledDate(current) {\n  return ((current && current > moment().endOf('day')) || (current && current < moment('1961-01-01').endOf('day')))\n}\n\n\nfunction scrollFunction() {\n  if (document.body.scrollTop > 10 || document.documentElement.scrollTop > 10) {\n      document.getElementById(\"myBtn\").style.display = \"block\"\n\n  } else {\n      document.getElementById(\"myBtn\").style.display = \"none\"\n\n  }\n}\n\nwindow.addEventListener(\"scroll\", dealWithScrolling, false);\n \nfunction dealWithScrolling(e) {\n    console.log('check');\n    \n}\n\nclass MapLaunches extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      AnnouncedData: null,\n      ScheduledData: null,\n      FinishedData: null,\n      visible: false,\n      loading: false,\n      disabledSlider: false,\n      dataArrayForMarkers: [],\n      show: false,\n\n    }\n    this.launchDateButtonOnChange = this.launchDateButtonOnChange.bind(this)\n    this.timeBeforeToShowMarkers = this.timeBeforeToShowMarkers.bind(this)\n    this.func = this.func.bind(this)\n    this.scrollToTop = this.scrollToTop.bind(this)\n  }\n\n  scrollToTop() {\n    scroll.scrollToTop();\n  }\n\n  fetchAnnounced(url) {\n    fetch(url)\n      .then(response => response.json())\n      .then(data => this.setState({ AnnouncedData: data }))\n  }\n\n  fetchScheduled(url) {\n    fetch(url)\n      .then(response => response.json())\n      .then(data => this.setState({ ScheduledData: data }))\n  }\n\n  fetchFinished(url) {\n    this.setState({ loading: true })\n    fetch(url)\n      .then(response => response.json())\n      .then(data => this.setState({ FinishedData: data, loading: false, }))\n  }\n\n\n  componentDidMount() {\n    this.fetchAnnounced(URL_FOR_ANNOUNCED)\n    this.fetchScheduled(URL_FOR_SCHEDULED_LAUNCHES)\n    this.fetchFinished(URLForFinishedLaunch)\n  }\n\n  showModal = () => {\n    this.setState({\n      visible: true,\n    })\n  }\n\n  handleOk = e => {\n    this.setState({\n      visible: false,\n    })\n  }\n\n  handleCancel = e => {\n    this.setState({\n      visible: false,\n    })\n  }\n\n  async validationOfDate(url) {\n    this.setState({ loading: true })\n    let response = await fetch(url)\n    if (response.ok) { // если HTTP-статус в диапазоне 200-299 получаем новые данные иначе Notification\n      this.fetchFinished(url)\n    } else {\n      notificationForInvalidDate('topRight')\n      this.setState({ loading: false })\n    }\n  }\n\n  launchDateButtonOnChange(date, dateString) {\n    URLForFinishedLaunch = `https://launchlibrary.net/1.4/launch?startdate=${dateString[0]}&enddate=${dateString[1]}&limit=${LIMIT}&fields=name,net,location,status,rocket,mapURL,countryCode`\n    this.validationOfDate(URLForFinishedLaunch)\n  }\n\n  timeBeforeToShowMarkers() {\n    let secondsToGo = 1\n\n    const timer = setInterval(() => {\n      secondsToGo -= 1\n    }, 1000);\n\n    setTimeout(() => {\n      clearInterval(timer)\n      this.func()\n    }, secondsToGo * 1000)\n\n  }\n\n  scrollToTop() {\n    scroll.scrollToTop();\n  }\n\n  func() {\n    let count = this.state.FinishedData.launches.length\n    const timer = setInterval(() => {\n      console.log(count)\n      count--\n      this.setState({ dataArrayForMarkers: [this.state.FinishedData.launches[count]] })\n      console.log(this.state.dataArrayForMarkers);\n    }, 1000)\n\n    setTimeout(() => {\n      clearInterval(timer)\n      console.log(this.state.FinishedData);\n    }, count * 1000)\n  }\n\n  render() {\n    const { AnnouncedData, ScheduledData, FinishedData, loading, dataArrayForMarkers } = this.state\n    return (\n      <div  >\n        {AnnouncedData && ScheduledData && FinishedData\n          ?\n          <div>\n          <Parallax pages={3.15} className='background' ref={ref => (this.parallax = ref)}>\n            {/* Здесь лежат загружаемые модули (облака, планеты и т.д.) */}\n            <ParallaxLayer offset={1} speed={1} style={{ backgroundColor: '#805E73' }} />\n\n            <ParallaxLayer offset={2} speed={1} style={{ backgroundColor: '#87BCDE' }} />\n\n            <ParallaxLayer offset={0} speed={0} factor={3.15} style={{ backgroundImage: URL('stars', true), backgroundSize: 'cover' }} className='background' />\n\n            <ParallaxLayer offset={2.3} speed={-0.1} style={{ pointerEvents: 'none' }}>\n              <img src={Satellite2} style={{ width: '15%', marginLeft: '70%' }} />\n            </ParallaxLayer>\n\n            <ParallaxLayer offset={2.4} speed={0} style={{ pointerEvents: 'none' }}>\n              <img src={Alien} className='Alien' />\n            </ParallaxLayer>\n\n            <ParallaxLayer offset={2.5} speed={-0.3} style={{ pointerEvents: 'none' }}>\n              <img src={Earth} style={{ width: '40%', marginLeft: '70%' }} />\n            </ParallaxLayer>\n\n            <ParallaxLayer offset={2.46} speed={-0.4} style={{ opacity: 0.9 }}>\n              <img src={Cloud} style={{ display: 'block', width: '15%', marginLeft: '85%' }} />\n            </ParallaxLayer>\n\n            <ParallaxLayer offset={1} speed={0.8} style={{ opacity: 0.1 }}>\n              <img src={Cloud} style={{ display: 'block', width: '20%', marginLeft: '55%' }} />\n              <img src={Cloud} style={{ display: 'block', width: '10%', marginLeft: '15%' }} />\n            </ParallaxLayer>\n\n            <ParallaxLayer offset={1.75} speed={0.5} style={{ opacity: 0.1 }}>\n              <img src={Cloud} style={{ display: 'block', width: '20%', marginLeft: '70%' }} />\n              <img src={Cloud} style={{ display: 'block', width: '20%', marginLeft: '40%' }} />\n            </ParallaxLayer>\n\n            <ParallaxLayer offset={1} speed={0.2} style={{ opacity: 0.2 }}>\n              <img src={Cloud} style={{ display: 'block', width: '10%', marginLeft: '10%' }} />\n              <img src={Cloud} style={{ display: 'block', width: '20%', marginLeft: '75%' }} />\n            </ParallaxLayer>\n\n            <ParallaxLayer offset={1.6} speed={-0.1} style={{ opacity: 0.4 }}>\n              <img src={Cloud} style={{ display: 'block', width: '20%', marginLeft: '60%' }} />\n              <img src={Cloud} style={{ display: 'block', width: '25%', marginLeft: '30%' }} />\n              <img src={Cloud} style={{ display: 'block', width: '10%', marginLeft: '80%' }} />\n            </ParallaxLayer>\n\n            <ParallaxLayer offset={2.6} speed={0.4} style={{ opacity: 0.6 }}>\n              <img src={Cloud} style={{ display: 'block', width: '20%', marginLeft: '5%' }} />\n              <img src={Cloud} style={{ display: 'block', width: '15%', marginLeft: '75%' }} />\n            </ParallaxLayer>\n\n            <ParallaxLayer offset={2.85} speed={0.4} style={{ opacity: 0.6 }}>\n              <img src={Cloud} style={{ display: 'block', width: '10%', marginLeft: '37%' }} />\n            </ParallaxLayer>\n\n            <ParallaxLayer offset={0.1} speed={-0.6} style={{ pointerEvents: 'none' }}>\n              <img src={Satellite4} style={{ width: '15%', marginRight: '65%' }} />\n            </ParallaxLayer>\n\n            <ParallaxLayer offset={1.17} speed={-1.5} style={{ pointerEvents: 'none' }}>\n              <img src={Comet} style={{ width: '15%', marginLeft: '15%' }} />\n            </ParallaxLayer>\n\n            <ParallaxLayer offset={0.6} speed={-0.3} style={{ pointerEvents: 'none' }}>\n              <img src={Upi} style={{ width: '10%', marginLeft: '55%' }} />\n            </ParallaxLayer>\n\n            <ParallaxLayer offset={2.65} speed={-0.4} style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', pointerEvents: 'none' }}>\n              <img src={Mars} style={{ width: '50%', marginRight: '47%' }} />\n            </ParallaxLayer>\n\n\n\n\n            {/*Здесь лежит таблицы */}\n            <ParallaxLayer offset={0} speed={0.3} style={{ opacity: '80%', marginTop: '150px', }}>\n              <h1 style={{ textAlign: 'center' }}>Обьявленные запуски</h1>\n              <AnnouncedTable launches={AnnouncedData.launches} />\n            </ParallaxLayer>\n\n            <ParallaxLayer offset={1.1} speed={1} style={{ opacity: '80%', marginLeft: '10%', width: '80%' }}>\n              <h1 style={{ textAlign: 'center' }}>Запланированные запуски</h1>\n              <ScheduledTable launches={ScheduledData.launches} />\n            </ParallaxLayer>\n\n            <ParallaxLayer offset={2} speed={1} style={{ opacity: '80%', marginLeft: 'auto', marginRight: 'auto', width: '80%', marginLeft: '9%', }}>\n              <h1 style={{ textAlign: 'center' }}>Состоявшиеся запуски</h1>\n              <RangePicker className=\"RangePicker\"\n                defaultValue={[moment(THIS_YEAR), moment()]}\n                showToday={false, true}\n                onChange={this.launchDateButtonOnChange}\n                disabledDate={disabledDate}\n                allowClear={false}\n                style={{ margin: 10 }}\n              />\n              <Tooltip title={<p > Здесь можно настроить период запусков </p>}\n                mouseEnterDelay={0.2}\n                mouseLeaveDelay={0.5}\n                placement=\"top\" >\n                <InfoCircleOutlined />\n              </Tooltip>\n              <FinishedTable launches={FinishedData.launches} loading={loading} />\n            </ParallaxLayer>\n\n            <ParallaxLayer offset={0.86} speed={-1} style={{width: '50%'}}>\n            <a><img src={RocketButton} onClick={() => this.parallax.scrollTo(0)} \n            className='myBtn' \n            /></a>\n          </ParallaxLayer>\n\n          </Parallax>\n        </div>\n          : <div style={{ backgroundColor: '#253237', minHeight: '100vh', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n            <LoadingOutlined style={{ fontSize: '100px' }} />\n          </div>\n        }\n      </div>\n    )\n  }\n}\n\nexport default MapLaunches\n\n","import React from 'react'\nimport {LoadingOutlined,  } from '@ant-design/icons'\n\n// export default () => {\n//   return (\n//     <div style={{ backgroundColor: '#253237', minHeight: '100vh', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n//       <LoadingOutlined style={{ fontSize: '100px' }} />\n//     </div>\n//   )\n// }\n\nexport default () => {\n  return (\n    <div >\n        \n        <br /><br /><br /><br /><br /><br />\n        <br /><br /><br /><br /><br /><br />\n        <br /><br /><br /><br /><br /><br />\n        <br /><br /><br /><br /><br /><br />\n        <br /><br /><br /><br /><br /><br />\n        <br /><br /><br /><br /><br /><br />\n        <br /><br /><br /><br /><br /><br />\n        <br /><br /><br /><br /><br /><br />\n    </div>\n  )\n}","import React from 'react'\nimport { Parallax, ParallaxLayer } from 'react-spring/renderprops-addons'\n\nconst url = (name, wrap = false) => `${wrap ? 'url(' : ''}https://awv3node-homepage.surge.sh/build/assets/${name}.svg${wrap ? ')' : ''}`\n\nclass HomePage extends React.Component {\n  render() {\n    return (\n      <Parallax pages={3.15}>\n        <ParallaxLayer offset={1} speed={1}\n          style={{ backgroundColor: '#805E73' }}\n        />\n\n        <ParallaxLayer offset={2} speed={1}\n          style={{ backgroundColor: '#87BCDE' }}\n        />\n\n        <ParallaxLayer offset={0} speed={0} factor={3.5} style={{ backgroundImage: url('stars', true), backgroundSize: 'cover', backgroundColor: '#253237' }} />\n\n        {/* <ParallaxLayer offset={2.3} speed={-0.1} style={{ pointerEvents: 'none' }}>\n              <img src={url('satellite2')} style={{ width: '15%', marginLeft: '70%' }} />\n            </ParallaxLayer>\n\n            //земля\n            <ParallaxLayer offset={2.5} speed={-0.3} style={{ pointerEvents: 'none' }}>\n              <img src={url('earth')} style={{ width: '45%', marginLeft: '70%' }} />\n            </ParallaxLayer>\n            <ParallaxLayer offset={2.46} speed={-0.4} style={{ opacity: 0.9 }}>\n              <img src={url('cloud')} style={{ display: 'block', width: '15%', marginLeft: '85%' }} />\n            </ParallaxLayer>\n\n            <ParallaxLayer offset={1} speed={0.8} style={{ opacity: 0.1 }}>\n              <img src={url('cloud')} style={{ display: 'block', width: '20%', marginLeft: '55%' }} />\n              <img src={url('cloud')} style={{ display: 'block', width: '10%', marginLeft: '15%' }} />\n            </ParallaxLayer>\n\n            <ParallaxLayer offset={1.75} speed={0.5} style={{ opacity: 0.1 }}>\n              <img src={url('cloud')} style={{ display: 'block', width: '20%', marginLeft: '70%' }} />\n              <img src={url('cloud')} style={{ display: 'block', width: '20%', marginLeft: '40%' }} />\n            </ParallaxLayer>\n\n            <ParallaxLayer offset={1} speed={0.2} style={{ opacity: 0.2 }}>\n              <img src={url('cloud')} style={{ display: 'block', width: '10%', marginLeft: '10%' }} />\n              <img src={url('cloud')} style={{ display: 'block', width: '20%', marginLeft: '75%' }} />\n            </ParallaxLayer>\n\n            <ParallaxLayer offset={1.6} speed={-0.1} style={{ opacity: 0.4 }}>\n              <img src={url('cloud')} style={{ display: 'block', width: '20%', marginLeft: '60%' }} />\n              <img src={url('cloud')} style={{ display: 'block', width: '25%', marginLeft: '30%' }} />\n              <img src={url('cloud')} style={{ display: 'block', width: '10%', marginLeft: '80%' }} />\n            </ParallaxLayer>\n\n            <ParallaxLayer offset={2.6} speed={0.4} style={{ opacity: 0.6 }}>\n              <img src={url('cloud')} style={{ display: 'block', width: '20%', marginLeft: '5%' }} />\n              <img src={url('cloud')} style={{ display: 'block', width: '15%', marginLeft: '75%' }} />\n            </ParallaxLayer>\n\n            <ParallaxLayer offset={2.85} speed={0.4} style={{ opacity: 0.6 }}>\n              <img src={url('cloud')} style={{ display: 'block', width: '10%', marginLeft: '37%' }} />\n            </ParallaxLayer>\n\n            <ParallaxLayer offset={0.1} speed={-0.6} style={{ pointerEvents: 'none' }}>\n              <img src={url('satellite4')} style={{ width: '15%', marginRight: '65%' }} />\n            </ParallaxLayer>\n\n            // комета\n            <ParallaxLayer offset={1.2} speed={-1.5} style={{ pointerEvents: 'none' }}>\n              <img src={'https://image.flaticon.com/icons/svg/2909/2909590.svg'} style={{ width: '15%', marginLeft: '15%' }} />\n            </ParallaxLayer>\n\n            // планета\n            <ParallaxLayer offset={0.6} speed={-0.3} style={{ pointerEvents: 'none' }}>\n              <img src={'https://image.flaticon.com/icons/svg/2929/2929375.svg'} style={{ width: '10%', marginLeft: '55%' }} />\n            </ParallaxLayer>\n\n            // \n            <ParallaxLayer offset={2.7} speed={-0.4} style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', pointerEvents: 'none' }}>\n              <img src={'https://image.flaticon.com/icons/svg/2277/2277588.svg'} style={{ width: '60%', marginRight: '45%' }} />\n            </ParallaxLayer> */}\n\n      </Parallax>\n    )\n  }\n}\n\nexport default HomePage\n","import React, { Component } from 'react'\n\nimport { Layout, Menu, Button } from 'antd'\nimport { HomeOutlined, RocketOutlined, AreaChartOutlined, UpOutlined } from '@ant-design/icons'\nimport { Route, NavLink } from \"react-router-dom\"\nimport { animateScroll as scroll} from 'react-scroll'\n// import 'antd/dist/antd.css'\nimport 'antd/dist/antd.dark.css'\n\nimport '../css/index.css' // стандарт\nimport MapLaunches from './Launches'\nimport Static from './testComponents/Static'\nimport HomePage from './HomePage'\n\nfunction scrollFunction() {\n  if (document.body.scrollTop > 10 || document.documentElement.scrollTop > 10) {\n      document.getElementById(\"myBtn\").style.display = \"block\"\n\n  } else {\n      document.getElementById(\"myBtn\").style.display = \"none\"\n\n  }\n}\nwindow.onscroll = function () { scrollFunction() };\n\nconst { Header, Footer } = Layout\n\nclass LayoutContainer extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n    }\n    this.scrollToTop = this.scrollToTop.bind(this);\n  }\n\n  scrollToTop() {\n    scroll.scrollToTop();\n  }\n\n  render() {\n    return (\n      <div>\n        <Layout id=\"layout\" >\n\n          <Header style={{ backgroundColor: '#253237', position: 'fixed', zIndex: 1, width: '100%' }} >\n            <Menu \n            // defaultSelectedKeys={['1']} \n            theme='dark' \n            mode=\"horizontal\" \n            style={{ textAlign: 'right', backgroundColor: '#253237' }}>\n              <Menu.Item key=\"1\" icon={<HomeOutlined />}>     <NavLink to=\"/\">          Приветсвие    </NavLink></Menu.Item>\n              <Menu.Item key=\"2\" icon={<AreaChartOutlined />}><NavLink to=\"/static\">    Cтатистика    </NavLink></Menu.Item>\n              <Menu.Item key=\"3\" icon={<RocketOutlined />}>   <NavLink to=\"/launches\">  Запуски       </NavLink></Menu.Item>\n            </Menu>\n          </Header>\n\n          <Layout className='layout-content'>\n            <Route exact path='/' component={HomePage} />\n            <Route exact path='/static' component={Static} />\n            <Route exact path='/launches' component={MapLaunches} />\n\n            <Button\n                            type=\"primary\"\n                            shape=\"circle\"\n                            icon={<UpOutlined />}\n                            onClick={scroll.scrollToTop}\n                            id=\"myBtn\"\n                            title=\"Наверх!\"\n                        />\n            {/* <Footer>\n              Design © 2020 <br></br>\n              <GithubOutlined />\n              <a href=\"https://github.com/SShaposhnik/global-launches-app\" target=\"_blank\"> Github</a>\n            </Footer> */}\n          </Layout>\n        </Layout>\n\n      </div>\n    )\n  }\n}\n\nexport default LayoutContainer","import React, {useState} from 'react'\n\nimport LayoutContainer from './catalog/component/Layout'\nimport './catalog/css/index.scss'\n\n\nfunction App() {\n  // const [preload, setPreload] = useState(false)\n\n  // function func () {\n  //   setPreload(true)\n  // }\n  // setTimeout(func, 3000)\n  \n  return (\n    <div className=\"App\">\n      {true\n        ? <div>\n          <LayoutContainer />\n        </div>\n        : <div id=\"hellopreloader\">\n          <div id=\"hellopreloader_preload\">\n            <div className=\"container\">\n              <div className=\"element\"></div>\n              <div className=\"element\"></div>\n              <div className=\"element\"></div>\n              <div className=\"element\"></div>\n              <div className=\"element\"></div>\n            </div>\n          </div>\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { HashRouter } from 'react-router-dom'\n\nimport App from './App'\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>\n  , document.getElementById('root')\n)"],"sourceRoot":""}