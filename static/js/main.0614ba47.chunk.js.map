{"version":3,"sources":["containers/LaunchCatalog/component/MapChart/MapChart.js","containers/LaunchCatalog/component/TableOld/TableOld.js","containers/LaunchCatalog/component/TableOld2/TableOld2.js","containers/LaunchCatalog/component/Timer/Timer.js","containers/LaunchCatalog/component/Table/Table.js","containers/LaunchCatalog/component/NextLaunchTable/NextLaunchTable.js","containers/Layout/index.js","App.js","index.js"],"names":["launchStatus","1","2","3","4","5","6","7","MapChart","markers","launches","map","el","id","RocketAndMissionName","name","rocketName","rocket","status","statusNumber","markerOffset","coordinates","longitude","latitude","mapURL","PadsMapURL","wikiURL","PadsWikiURL","rocketwikiURL","RocketWikiURL","projection","width","height","className","geography","geographies","geo","key","rsmKey","fill","stroke","on","overlayClassName","title","href","target","placement","mouseLeaveDelay","strokeWidth","strokeLinecap","strokeLinejoin","transform","cx","cy","r","d","textAnchor","y","style","fontFamily","moment","locale","Column","Table","Component","OldTable2","props","showModal","setState","visible","handleOk","e","handleCancel","state","markersLaunches","scrollToTop","bind","scroll","oldLaunch","this","net","textAlign","format","utc","statusText","pads","location","split","locationWithoutPads","els","url","countryCode","reverse","dataSource","pagination","position","defaultCurrent","pageSizeOptions","showQuickJumper","size","margin","filterReset","dataIndex","onCell","selectedRows","selectedRowKeys","onClick","event","fixed","filters","text","value","onFilter","record","indexOf","children","centered","onOk","onCancel","footer","Timer","count","days","minutes","hours","seconds","time_up","deadline","now","Date","getTime","t","Math","floor","clearInterval","x","timeTillLaunch","setInterval","ColumnGroup","columns","launchesWithTimer","padsName","missionsName","missions","p","timer","LoadingOutlined","align","Header","Layout","Content","Footer","RangePicker","DatePicker","thisYear","oldurl","disabledDate","current","endOf","window","onscroll","document","body","scrollTop","documentElement","getElementById","display","LayoutContainer","launchData","launchOldData","NextlaunchData","launchButtonIsDisabled","launchButtonInputValue","launchDateInputValue","loading","launchDateButtonOnChange","fetch","then","response","json","data","nextUrl","fetchLaunches","fetchOldLaunches","fetchNextLaunches","date","dateString","theme","mode","defaultSelectedKeys","Item","padding","NextLaunchTable","defaultVisible","arrowPointAtCenter","defaultValue","showToday","onChange","allowClear","type","shape","icon","UpOutlined","GithubOutlined","class","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0614ba47.chunk.js","sourcesContent":["import React from 'react'\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  Marker,\n} from \"react-simple-maps\"\nimport { Tooltip } from 'antd'\nimport './MapChart.css'\n\nconst geoUrl =\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\"\nconst markerOffset =  - 30\n\n// цвета маркеров\nconst launchStatus = {\n  1: 'Запланированы точные дата и время запуска',\n  2: 'Дата и время будут объявлены позже',\n  3: 'green',\n  4: 'red',\n  5: 'Незапланированная задержка',\n  6: 'В полете',\n  7: 'Во время запуска произошел частичный сбой',\n}\n\nconst MapChart = ({ launches }) => {\n  const markers = launches.map(el => ({\n    id: el.id,\n    RocketAndMissionName: el.name,\n    rocketName: el.rocket,\n    status: el.statusNumber,\n    markerOffset: markerOffset,\n    coordinates: [el.longitude, el.latitude],\n    mapURL: el.PadsMapURL,\n    wikiURL: el.PadsWikiURL,\n    rocketwikiURL: el.RocketWikiURL,\n    latitude: el.latitude,\n    longitude: el.longitude,\n  }))\n\n  return (\n    <ComposableMap\n      projection=\"geoMercator\"\n      width=\"800\"\n      height=\"600\"\n      className=\"MapChartStyle\"\n    >\n      <Geographies geography={geoUrl}>\n        {({ geographies }) =>\n          geographies.map(geo => (\n            <Geography\n              key={geo.rsmKey}\n              geography={geo}\n              fill=\"#EAEAEC\"\n              stroke=\"#D6D6DA\"\n            />\n          ))\n        }\n\n      </Geographies>\n      {markers.map(({ rocketName, status, coordinates, markerOffset, wikiURL, rocketwikiURL, latitude, longitude }) => (\n        <Marker on coordinates={coordinates}\n        className=\"MarkersSryle\"\n        >\n          <Tooltip\n            overlayClassName=\"tooltipInMapChart\"\n            title={\n              <div>\n                <a href={\"http://maps.google.com/maps?q=\" + latitude + \",\" + longitude} target=\"_blank\">Google Maps</a><br></br>\n                <a href={wikiURL} target=\"_blank\">Космодром вики</a><br></br>\n                <a href={rocketwikiURL} target=\"_blank\">Ракета вики</a><br></br>\n              </div>\n\n            }\n            placement=\"bottom\"\n            mouseLeaveDelay=\"0.3\"\n          >\n            <g\n              fill={launchStatus[status]}\n              stroke=\"none\"\n              strokeWidth=\"3\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              transform=\"translate(-12, -24)\"\n            >\n              <circle cx=\"12\" cy=\"10\" r=\"3\" />\n              <path d=\"M12 21.7C17.3 17 20 13 20 10a8 8 0 1 0-16 0c0 3 2.7 6.9 8 11.7z\" />\n            </g>\n          </Tooltip>\n\n          <text\n            textAnchor=\"middle\"\n            y={markerOffset}\n            style={{ fontFamily: \"system-ui\", fill: \"#5D5A6D\" }}\n          >\n            {rocketName}\n          </text>\n        </Marker>\n      )\n      )}\n    </ComposableMap>\n  )\n}\n\nexport default MapChart;\n","import React, { Component } from 'react'\nimport { Table, Modal, Tooltip } from 'antd'\nimport MapChart from '../MapChart/MapChart'\nimport { Link, DirectLink, Element, Events, animateScroll as scroll, scrollSpy, scroller } from 'react-scroll'\nimport moment from 'moment'\nimport 'moment/locale/ru'\nimport './TableOld.css'\n\nmoment.locale()\nconst geoUrl =\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\nconst { Column } = Table;\nconst launchStatus = {\n  1: 'Дата и время определены',\n  2: 'Дата и время будут объявлены позже',\n  3: 'Успешно',\n  4: 'Неудача',\n  5: 'Задержка',\n  6: 'В полете',\n  7: 'Произошел сбой',\n}\n\n\nclass OldTable extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      markersLaunches: null\n    }\n\n    this.scrollToTop = this.scrollToTop.bind(this);\n  }\n\n  scrollToTop() {\n    scroll.scrollToTop();\n  }\n\n  showModal = () => {\n    this.setState({\n      visible: true,\n    })\n  }\n\n  handleOk = e => {\n    this.setState({\n      visible: false,\n    })\n  }\n\n  handleCancel = e => {\n    this.setState({\n      visible: false,\n    })\n  }\n\n  render() {\n\n    const oldLaunch = this.props.launches.map(el => ({\n      key: el.id,\n      RocketAndMissionName: <a>{el.name}</a>,\n      name: el.name,\n      rocket: el.rocket.name,\n      net: <Tooltip title={\n        <div>\n          <p style={{ textAlign: 'center' }}>Локальное время</p>\n          <p style={{ textAlign: 'center' }}>{moment(el.net).locale('ru').format('LLL')}</p>\n        </div>}>\n        {moment(el.net).utc(0).locale('ru').format('LLL Z')}\n      </Tooltip>,\n      statusText: launchStatus[el.status],\n      statusNumber: el.status,\n      pads: el.location.pads.map(els => (els.name)),\n      longitude: el.location.pads.map(els => (els.longitude)),\n      latitude: el.location.pads.map(els => (els.latitude)),\n      PadsMapURL: el.location.pads.map(url => (url.mapURL)),\n      PadsWikiURL: el.location.pads.map(url => (url.wikiURL)),\n      RocketWikiURL: el.rocket.wikiURL,\n    }))\n    return (\n      <div >\n        <Table\n          dataSource={oldLaunch}\n          pagination={{\n            position: ['bottomCenter'],\n            defaultCurrent: 1,\n            // simple:\"true\",\n            pageSizeOptions: ['10', '50', '100'],\n            showQuickJumper: \"true\",\n          }}\n          size=\"small\"\n          className=\"table\"\n          style={{ margin: 10 }}\n          locale={{\n            filterReset: 'Сбросить',\n          }\n          }\n        >\n          <Column title=\"Название запуска\" dataIndex=\"RocketAndMissionName\" width=\"400\"\n            onCell={(selectedRows, selectedRowKeys) => {\n              return {\n                onClick: event => {\n                  this.setState({ markersLaunches: [selectedRows] })\n                  this.showModal()\n                },\n              }\n            }}\n            fixed={true}\n          >\n          </Column>\n          <Column title=\"Дата запуска\" dataIndex=\"net\"               ></Column>\n          <Column\n            title=\"Статус\"\n            dataIndex=\"statusText\"\n            width=\"100\"\n            filters={[\n              {\n                text: 'Успешно',\n                value: 'Успешно',\n              },\n              {\n                text: 'Неудача',\n                value: 'Неудача',\n              },\n              {\n                text: 'Произошел сбой',\n                value: 'Произошел сбой',\n              },\n            ]}\n            onFilter={(value, record) => record.statusText.indexOf(value) === 0}\n          >\n\n          </Column>\n          <Column title=\"Космодром\" dataIndex=\"pads\" width=\"300\"></Column>\n        </Table>\n        <Modal\n          centered\n          // title=\"Расположение запуска на карте\"\n          visible={this.state.visible}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n          footer={null}\n          width='65%'\n        >\n          <MapChart launches={this.state.markersLaunches} />\n        </Modal>\n      </div>\n\n    )\n  }\n}\n\nexport default OldTable\n","import React, { Component } from 'react'\nimport { Table, Modal, Tooltip } from 'antd'\nimport MapChart from '../MapChart/MapChart'\nimport { Link, DirectLink, Element, Events, animateScroll as scroll, scrollSpy, scroller } from 'react-scroll'\nimport moment from 'moment'\nimport 'moment/locale/ru'\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\";\nimport './TableOld2.css'\n\nmoment.locale()\nconst geoUrl =\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\nconst { Column } = Table;\nconst launchStatus = {\n  1: 'Дата и время определены',\n  2: 'Дата и время будут объявлены позже',\n  3: 'Успешно',\n  4: 'Неудача',\n  5: 'Задержка',\n  6: 'В полете',\n  7: 'Произошел сбой',\n}\n\nconst country = {\n  USA: 'Америка',\n  CHN: 'Китай',\n  KAZ: 'Казахстан',\n  IRN: 'Иран',\n  RUS: 'Россия',\n  GUF: 'Французская Гвиана',\n  JPN: 'Япония',\n  NZL: 'Новая Зеландия',\n  IND: 'Индия',\n  UNK: 'Великобритания',\n}\n\nclass OldTable2 extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      markersLaunches: null\n    }\n\n    this.scrollToTop = this.scrollToTop.bind(this);\n  }\n\n\n  scrollToTop() {\n    scroll.scrollToTop();\n  }\n\n\n  showModal = () => {\n    this.setState({\n      visible: true,\n    })\n  }\n\n  handleOk = e => {\n    // console.log(e)\n    this.setState({\n      visible: false,\n    })\n  }\n\n  handleCancel = e => {\n    // console.log(e)\n    this.setState({\n      visible: false,\n    })\n  }\n\n  render() {\n\n    const oldLaunch = this.props.launches.map(el => ({\n      key: el.id,\n      RocketAndMissionName: <a>{el.name}</a>,\n      name: el.name,\n      rocket: el.rocket.name,\n      net: <Tooltip title={\n        <div>\n          <p style={{ textAlign: 'center' }}>Локальное время</p>\n          <p style={{ textAlign: 'center' }}>{moment(el.net).locale('ru').format('LLL')}</p>\n        </div>}>\n        {moment(el.net).utc(0).locale('ru').format('LLL z')}\n      </Tooltip>,\n\n      statusText: launchStatus[el.status],\n      statusNumber: el.status,\n      pads: el.location.name.split(',')[0],\n      locationWithoutPads: el.location.name,\n      longitude: el.location.pads.map(els => (els.longitude)),\n      latitude: el.location.pads.map(els => (els.latitude)),\n      PadsMapURL: el.location.pads.map(url => (url.mapURL)),\n      PadsWikiURL: el.location.pads.map(url => (url.wikiURL)),\n      RocketWikiURL: el.rocket.wikiURL,\n      countryCode: el.location.countryCode,\n    }))\n\n    //здесь все запуски переворачиваются\n    oldLaunch.reverse()\n\n    return (\n      <div >\n        <Table\n          dataSource={oldLaunch}\n          pagination={{\n            position: ['bottomCenter'],\n            defaultCurrent: 1,\n            // simple:\"true\",\n            pageSizeOptions: ['10', '50', '100'],\n            showQuickJumper: \"true\",\n          }}\n          size=\"small\"\n          className=\"table\"\n          style={{ margin: 10 }}\n          locale={{\n            filterReset: 'Сбросить',\n          }\n          }\n        >\n          <Column title=\"Название запуска\" dataIndex=\"RocketAndMissionName\" width=\"400\"\n            onCell={(selectedRows, selectedRowKeys) => {\n              return {\n                onClick: event => {\n                  this.setState({ markersLaunches: [selectedRows] })\n                  this.showModal()\n                },\n              }\n            }}\n            fixed={true}\n          >\n          </Column>\n          <Column title=\"Дата запуска\" dataIndex=\"net\" width=\"200\" ></Column>\n          <Column\n            title=\"Статус\"\n            dataIndex=\"statusText\"\n            width=\"100\"\n            filters={[\n              {\n                text: 'Успешно',\n                value: 'Успешно',\n              },\n              {\n                text: 'Неудача',\n                value: 'Неудача',\n              },\n              {\n                text: 'Произошел сбой',\n                value: 'Произошел сбой',\n              },\n            ]}\n            onFilter={(value, record) => record.statusText.indexOf(value) === 0}\n          >\n\n          </Column>\n\n          <Column\n            title=\"Космодром\"\n            dataIndex=\"pads\"\n            width=\"300\"\n            filters={[\n              {\n                text: 'Америка',\n                value: 'USA',\n              },\n              {\n                text: 'Китай',\n                value: 'CHN',\n              },\n              {\n                text: 'Казахстан',\n                value: 'KAZ',\n              },\n              {\n                text: 'Иран',\n                value: 'IRN',\n              },\n              {\n                text: 'Россия',\n                value: 'RUS',\n              },\n              {\n                text: 'Французская Гвиана',\n                value: 'GUF',\n              },\n              {\n                text: 'Япония',\n                value: 'JPN',\n              },\n              {\n                text: 'Новая Зеландия',\n                value: 'NZL',\n              },\n              {\n                text: 'Индия',\n                value: 'IND',\n              },\n              {\n                text: 'Великобритания',\n                value: 'UNK',\n              },\n              {\n                text: 'Тут можно сделать добавить фильтр, если нужно',\n                value: 'Submenu',\n                children: [\n                  {\n                    text: 'Green',\n                    value: 'Green',\n                  },\n                  {\n                    text: 'Black',\n                    value: 'Black',\n                  },\n                ],\n              }\n            ]}\n\n            onFilter={(value, record) => record.countryCode.indexOf(value) === 0}\n          >\n\n          </Column>\n          {/* <Column\n            title='КОД'\n            dataIndex='countryCode'\n          >\n          </Column> */}\n        </Table>\n        <Modal\n          centered\n          // title=\"Расположение запуска на карте\"\n          visible={this.state.visible}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n          footer={null}\n          width='65%'\n        >\n\n          <MapChart launches={this.state.markersLaunches} />\n        </Modal>\n      </div>\n\n    )\n  }\n}\n\nexport default OldTable2\n","import React, {Component} from 'react'\nimport './Timer.css'\n\n\nclass Timer extends Component {\n    constructor(props) {\n        super(props);\n        this.count = this.count.bind(this)\n        this.state = {\n            days: 0,\n            minutes: 0,\n            hours: 0,\n            seconds: 0,\n            time_up: \"\",\n            deadline: null,\n        }\n    }\n\n    count () {\n        let now = new Date().getTime();\n        let t = this.state.deadline - now;\n        let days    = Math.floor(t / (1000 * 60 * 60 * 24));\n        let hours   = Math.floor((t % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n        let minutes = Math.floor((t % (1000 * 60 * 60)) / (1000 * 60));\n        let seconds = Math.floor((t % (1000 * 60)) / 1000);\n        this.setState({days, minutes, hours, seconds})\n        if (t < 0) {\n            clearInterval(this.x);\n            this.setState({ days: 0, minutes: 0, hours: 0, seconds: 0, time_up: \"Запуск состоялся!\" })\n        }\n    }\n\n    componentDidMount() {\n        const deadline = new Date(this.props.timeTillLaunch).getTime();\n        setInterval(this.count, 1000)\n        this.setState({...this.state, deadline: deadline})\n    }\n\n    render() {\n        const { days, seconds, hours, minutes, time_up } = this.state\n        return (\n            <div>\n                    {(seconds < 10)\n                    ? <p>{days}д: {hours}ч: {minutes}м: 0{seconds}с</p>\n                    : <p>{days}д: {hours}ч: {minutes}м: {seconds}с</p>\n                    }\n            </div>\n        )\n    }\n}\n\nexport default Timer","import React from 'react'\nimport {Table, Tooltip} from 'antd'\nimport Timer from '../Timer/Timer'\nimport 'moment/locale/ru'\n// import 'moment/locale/en-au'\nimport moment from 'moment'\nimport './Table.css'\nmoment.locale()\n\n\nconst { Column, ColumnGroup} = Table;\n\nconst launchStatus = {\n    1: 'Запланированы точные дата и время запуска',\n    2: 'Дата и время будут объявлены позже',\n    3: 'Запуск прошел успешно',\n    4: 'Неудачный запуск',\n    5: 'Незапланированная задержка',\n    6: 'В полете',\n    7: 'Во время запуска произошел частичный сбой',\n}\n\nconst columns = [\n    {\n        title: 'Название запуска',\n        dataIndex: 'RocketAndMissionName',\n        width: 400,\n      },\n      {\n        title: 'Дата запуска',\n        dataIndex: 'net',\n        width: 200,\n      },\n      {\n        title: 'Космодром',\n        dataIndex: 'padsName',\n        width: 300,\n      },\n      {\n        title: 'Таймер',\n        dataIndex: 'timer',\n        width: 200,\n      },\n]\n\nexport default ({launches}) => {\n    const launchesWithTimer = launches.map(el => ({\n        rocketName: el.rocket.name,\n        padsName: el.location.name.split(',')[0],\n        missionsName: el.missions.map(els => (els.name)),\n        RocketAndMissionName: el.name,\n        pads: el.location.pads.map(p => (p.name)),\n        net: <Tooltip title = {<div><p style={{textAlign:'center'}}>Локальное время</p> <p style={{textAlign:'center'}}>{moment(el.net).locale('ru').format('LLL')}</p></div>}>{moment(el.net).utc(0).locale('ru').format('LLL z')}</Tooltip>,\n        status: launchStatus[el.status],\n        timer: <Timer timeTillLaunch={el.net}/>\n    }))\n    return (\n        <Table\n            dataSource={launchesWithTimer}\n            pagination={false}\n            size=\"small\"\n            columns={columns}\n        />\n    )\n}","import React from 'react'\nimport {Table, Pagination} from 'antd'\nimport moment from 'moment'\nimport { LoadingOutlined } from '@ant-design/icons';\nimport 'moment/locale/ru'\nmoment.locale()\n\nconst antIcon = <LoadingOutlined style={{ fontSize: 240 }} spin />;\nconst { Column, ColumnGroup} = Table;\n\nconst launchStatus = {\n    1: 'Запланированы точные дата и время запуска',\n    2: 'Дата и время будут объявлены позже',\n    3: 'Запуск прошел успешно',\n    4: 'Неудачный запуск',\n    5: 'Незапланированная задержка',\n    6: 'В полете',\n    7: 'Во время запуска произошел частичный сбой',\n}\n\nconst columns = [\n    {\n        title: 'Название запуска',\n        dataIndex: 'RocketAndMissionName',\n        width: 400,\n        align: 'left'\n      },\n      {\n        title: 'Дата запуска',\n        dataIndex: 'net',\n        width: 200,\n      },\n      {\n        title: 'Площадка / Космодром',\n        dataIndex: 'padsName',\n        width: 300,\n        // align: 'right'\n      },\n]\n\nexport default ({launches}) => {\n    const launchesWithTimer = launches.map(el => ({\n        RocketAndMissionName: el.name,\n        padsName: <div>\n                        <p>{el.location.pads.map(els => (els.name.split(',')[0]))}</p>\n                        <p>{el.location.name.split(',')[0]}</p>\n                  </div>,\n        net: moment(el.net).locale('ru').format('MMMM YYYY'),\n        status: launchStatus[el.status],\n        pads: el.location.pads.map(els => (els.name)),\n    }))\n    return (\n        <Table\n            dataSource={launchesWithTimer}\n            pagination={{ position: ['bottomCenter'], }}\n            size=\"small\"\n            columns={columns}\n        />\n    )\n}\n\n// {this.state.markersLaunches\n//     ? <MapChart launches={this.state.markersLaunches} />\n//     : <h1>НАДО ВЫБРАТЬ ЗАПУСК</h1>\n// }","import React, { Component } from 'react'\nimport { Layout, Menu, DatePicker, Button, Tooltip } from 'antd'\nimport { ArrowUpOutlined, GithubOutlined, UpOutlined } from '@ant-design/icons'\nimport OldTable from '../LaunchCatalog/component/TableOld/TableOld'\nimport OldTable2 from '../LaunchCatalog/component/TableOld2/TableOld2'\nimport LaunchTable from \"../LaunchCatalog/component/Table/Table\"\nimport NextLaunchTable from '../LaunchCatalog/component/NextLaunchTable/NextLaunchTable'\nimport './index.css' // стандарт\nimport './index.scss' // прыгающие квадраты\nimport moment from 'moment'\nimport { animateScroll as scroll } from 'react-scroll'\nimport 'antd/dist/antd.css'\n\nconst { Header, Content, Footer } = Layout\n\n// следующие запуски с временем и датой\nconst url = 'https://launchlibrary.net/1.4/launch/next/1000?status=1,2'\n\n// следующие запуски с датой(без времени)\nconst nextUrl = 'https://launchlibrary.net/1.4/launch/next/1000?status=2'\n\nconst { RangePicker } = DatePicker\nconst limit = 10000\nconst thisYear = moment().format('YYYY')\n\n// старые запуски\nlet oldurl = 'https://launchlibrary.net/1.4/launch?startdate=' + moment(thisYear).format('YYYY-MM-DD') + '&enddate=' + moment().format('YYYY-MM-DD') + '&limit=' + limit + '&fields=name,net,location,status,rocket,mapURL,countryCode'\n\nfunction disabledDate(current) {\n    return ((current && current > moment().endOf('day')) || (current && current < moment('1961-01-01').endOf('day')))\n}\nfunction scrollFunction() {\n    if (document.body.scrollTop > 500 || document.documentElement.scrollTop > 500) {\n        document.getElementById(\"myBtn\").style.display = \"block\"\n        // document.getElementById(\"layout\").style.background = \"rgb(4, 21, 40)\"\n    } else {\n        document.getElementById(\"myBtn\").style.display = \"none\"\n        // document.getElementById(\"layout\").style.background = \"rgb(0, 0, 0)\"\n    }\n}\nwindow.onscroll = function () { scrollFunction() };\n\n\n\n\nclass LayoutContainer extends Component {\n    constructor(props) {\n        super(props)\n        this.state =\n        {\n            launchData: null,\n            launchOldData: null,\n            NextlaunchData: null,\n            launchButtonIsDisabled: false,\n            launchButtonInputValue: null,\n            launchDateInputValue: null,\n            loading: false,\n            visible: false,\n        }\n        this.launchDateButtonOnChange = this.launchDateButtonOnChange.bind(this)\n    }\n    fetchLaunches(url) {\n        fetch(url)\n            .then(response => response.json())\n            .then(data => this.setState({ launchData: data }))\n    }\n\n    fetchOldLaunches(oldurl) {\n        fetch(oldurl)\n            .then(response => response.json())\n            .then(data => this.setState({ launchOldData: data }))\n    }\n    fetchNextLaunches(nextUrl) {\n        fetch(nextUrl)\n            .then(response => response.json())\n            .then(data => this.setState({ NextlaunchData: data }))\n    }\n\n    componentDidMount() {\n        this.fetchLaunches(url)\n        this.fetchOldLaunches(oldurl)\n        this.fetchNextLaunches(nextUrl)\n    }\n\n    launchDateButtonOnChange(date, dateString) {\n        oldurl = 'https://launchlibrary.net/1.4/launch?startdate=' + dateString[0] + '&enddate=' + dateString[1] + '&limit=' + limit + '&fields=name,net,location,status,rocket,mapURL,countryCode'\n        this.fetchOldLaunches(oldurl)\n\n\n    }\n\n\n    render() {\n        return (\n            <div>\n                {this.state.launchOldData && this.state.NextlaunchData && this.state.launchData\n                    ? <Layout id=\"layout\">\n                        <Header>\n                            <div className=\"logo\"></div>\n                            <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']} style={{ textAlign: 'right' }}>\n                                <Menu.Item key=\"1\">Статистика</Menu.Item>\n                                <Menu.Item key=\"2\">Запуски</Menu.Item>\n                            </Menu>\n                        </Header>\n\n                        <Content style={{ padding: '0 50px' }}>\n                            <div className=\"site-layout-content\">\n                                {/* <p>фывтфывфт</p>\n                                <p>asfnalfasnfghinerme\n                                A B C\n                                </p> */}\n                                {this.state.launchOldData && this.state.NextlaunchData && this.state.launchData\n                                    ? <div>\n                                        <h1 style={{ textAlign: 'center' }}>Обьявленные запуски</h1>\n                                        <LaunchTable launches={this.state.launchData.launches} />\n\n                                        <h1 style={{ textAlign: 'center' }}>Запланированные запуски</h1>\n                                        <NextLaunchTable launches={this.state.NextlaunchData.launches} />\n\n                                        <Tooltip\n                                            title={\n                                                <p>Здесь можно настроить период запусков</p>\n                                            }\n                                            defaultVisible={true}\n                                            placement=\"right\"\n                                            arrowPointAtCenter=\"true\"\n                                        >\n                                            <RangePicker\n                                                className=\"RangePicker\"\n                                                defaultValue={[moment(thisYear), moment()]}\n                                                showToday={false, true}\n                                                onChange={this.launchDateButtonOnChange}\n                                                disabledDate={disabledDate}\n                                                allowClear={false}\n                                                style={{ margin: 10 }}\n                                            />\n                                        </Tooltip>\n                                        <h1 style={{ textAlign: 'center' }}>Состоявшиеся запуски</h1>\n                                        <OldTable2 launches={this.state.launchOldData.launches} />\n\n                                    </div>\n                                    : <p>Загрузка</p>\n\n                                }\n\n                                {/* { this.state.launchOldData\n                                        ? <OldTable launches={this.state.launchOldData.launches} />\n                                        : <p></p>\n                                } */}\n                                <Button\n                                    type=\"primary\"\n                                    shape=\"circle\"\n                                    icon={<UpOutlined />}\n                                    onClick={scroll.scrollToTop}\n                                    id=\"myBtn\"\n                                    title=\"Наверх!\"\n                                />\n                            </div>\n                        </Content>\n                        <Footer className=\"footer\">\n                            Design © 2020 <br></br>\n                            <GithubOutlined />\n                            <a href=\"https://github.com/SShaposhnik/global-launches-app\" target=\"_blank\"> Github</a>\n                        </Footer>\n                    </Layout>\n\n                    : <div id=\"hellopreloader\">\n                        <div id=\"hellopreloader_preload\">\n                            <div class=\"container\">\n                                <div class=\"element\"></div>\n                                <div class=\"element\"></div>\n                                <div class=\"element\"></div>\n                                <div class=\"element\"></div>\n                                <div class=\"element\"></div>\n                            </div>\n                        </div>\n                    </div>\n\n                    // : <div id=\"hellopreloader\">\n                    //     <div id=\"hellopreloader_preload\"></div>\n                    // </div>\n                }\n            </div>\n        )\n    }\n}\n\nexport default LayoutContainer\n","import React from 'react';\nimport './App.css';\nimport LayoutContainer from './containers/Layout'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <LayoutContainer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)"],"sourceRoot":""}