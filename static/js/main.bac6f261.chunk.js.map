{"version":3,"sources":["containers/Catalog/component/MapChart/MapChart.js","containers/Catalog/component/TableOld/TableOld.js","containers/Catalog/component/TableOld2/TableOld2.js","containers/Catalog/component/Timer/Timer.js","containers/Catalog/component/Table/Table.js","containers/Catalog/component/NextLaunchTable/NextLaunchTable.js","containers/Catalog/component/SliderMapChart/MapChart.js","containers/Catalog/component/TestTable/Table.js","containers/Catalog/component/SliderMapChart/SliderMapChart.js","containers/Catalog/component/LoadLaunchData/index.js","containers/Catalog/component/TestTable/exportFunc.js","containers/Catalog/component/Cards/OldCard.js","containers/Launches/index.js","containers/Launches/HookWithData.js","containers/Catalog/component/TestTable/Menu.js","containers/Launches/Hook.js","containers/Layout/index.js","App.js","index.js"],"names":["LAUNCH_STATUS","1","2","3","4","5","6","7","MapChart","launches","flag","tableData","markers","map","el","RocketAndMissionNames","name","rocketName","status","statusNumber","markerOffset","coordinates","longitude","latitude","padsMapURL","padsWikiURL","rocketwikiURL","rocket","location","pads","els","mapURL","wikiURL","projection","width","height","className","geography","geographies","geo","key","rsmKey","fill","stroke","on","overlayClassName","title","href","target","placement","mouseLeaveDelay","strokeWidth","strokeLinecap","strokeLinejoin","transform","cx","cy","r","d","textAnchor","y","style","fontFamily","split","moment","locale","Table","Column","launchStatus","Component","OldTable2","props","showModal","setState","visible","handleOk","e","handleCancel","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","ref","node","searchInput","placeholder","value","onChange","onPressEnter","handleSearch","marginBottom","display","type","onClick","icon","SearchOutlined","size","handleReset","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","setTimeout","select","render","text","state","searchedColumn","highlightStyle","backgroundColor","searchWords","searchText","autoEscape","textToHighlight","markersLaunches","show","columns","align","this","onCell","selectedRows","selectedRowKeys","event","console","log","filters","statusText","indexOf","countryCode","loading","oldLaunch","id","RocketAndMissionName","net","textAlign","format","utc","locationWithoutPads","spaceortName","PadsMapURL","url","PadsWikiURL","RocketWikiURL","reverse","dataSource","pagination","position","defaultCurrent","pageSizeOptions","showQuickJumper","hideOnSinglePage","margin","filterReset","ClearOutlined","filterConfirm","CheckOutlined","bordered","centered","onOk","onCancel","footer","closable","Timer","days","minutes","hours","seconds","time_up","deadline","count","bind","now","Date","getTime","t","Math","floor","clearInterval","x","timeTillLaunch","setInterval","ColumnGroup","launchesWithTimer","missionsName","missions","p","timer","MapChartt","flightStatus","THIS_YEAR","oldUrl","YesOrNoPreloader","useState","announcedLaunches","setAnnouncedLaunches","scheduledLaunches","setScheduledLaunches","finishedLaunches","setFinishedLaunches","useEffect","fetch","then","res","ok","json","fetchNextLaunches","fetchOldLaunches","Meta","Card","Content","Layout","RangePicker","DatePicker","URL","NEXT_URL","disabledDate","current","endOf","window","onscroll","document","body","scrollTop","documentElement","getElementById","HookWithData","HookFunction","test","setTest","setCount","setLoading","validationOfDate","notification","warning","message","showMarkers","length","func","defaultValue","showToday","date","dateString","allowClear","mouseEnterDelay","InfoCircleOutlined","secondsToGo","shape","UpOutlined","scroll","scrollToTop","Header","Footer","LayoutContainer","Sider","Menu","SubMenu","theme","mode","defaultSelectedKeys","Item","to","exact","path","component","Tabless","Hook","GithubOutlined","App","uploadedData","ReactDOM"],"mappings":"8pBAeMA,G,OAAgB,CACpBC,EAAG,gOACHC,EAAG,sLACHC,EAAG,QACHC,EAAG,MACHC,EAAG,0JACHC,EAAG,8CACHC,EAAG,kOAkGUC,EA/FE,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,KAAOC,EAAe,EAAfA,UAC/BC,EAAU,GA8Bd,OA3BGA,EADCF,EACSC,EAAUE,KAAI,SAAAC,GAAE,MAAK,CAC9BC,sBAAuBD,EAAGE,KAC1BC,WAAYH,EAAGG,WACfC,OAAQJ,EAAGK,aACXC,cArBiB,GAsBjBC,YAAa,CAACP,EAAGQ,UAAWR,EAAGS,UAC/BC,WAAYV,EAAGU,WACfC,YAAaX,EAAGW,YAChBC,cAAeZ,EAAGY,cAClBH,SAAUT,EAAGS,SACbD,UAAWR,EAAGQ,cAGLb,EAASI,KAAI,SAAAC,GAAE,MAAK,CAC7BC,sBAAuBD,EAAGE,KAC1BC,WAAYH,EAAGa,OAAOX,KACtBE,OAAQJ,EAAGI,OACXE,cAlCiB,GAmCjBC,YAAa,CAACP,EAAGc,SAASC,KAAKhB,KAAI,SAAAiB,GAAG,OAAKA,EAAIR,aAAaR,EAAGc,SAASC,KAAKhB,KAAI,SAAAiB,GAAG,OAAKA,EAAIP,aAC7FC,WAAYV,EAAGc,SAASC,KAAKhB,KAAI,SAAAiB,GAAG,OAAKA,EAAIC,UAC7CN,YAAaX,EAAGc,SAASC,KAAKhB,KAAI,SAAAiB,GAAG,OAAKA,EAAIE,WAC9CN,cAAeZ,EAAGa,OAAOK,QACzBT,SAAUT,EAAGc,SAASC,KAAKhB,KAAI,SAAAiB,GAAG,OAAKA,EAAIP,YAC3CD,UAAWR,EAAGc,SAASC,KAAKhB,KAAI,SAAAiB,GAAG,OAAKA,EAAIR,iBAK9C,kBAAC,gBAAD,CACEW,WAAW,cACXC,MAAM,MACNC,OAAO,MACPC,UAAU,iBAEV,kBAAC,cAAD,CAAaC,UApDjB,2GAqDO,qBAAGC,YACUzB,KAAI,SAAA0B,GAAG,OACjB,kBAAC,YAAD,CACEC,IAAKD,EAAIE,OACTJ,UAAWE,EACXG,KAAK,UACLC,OAAO,kBAMd/B,EAAQC,KAAI,cAAGI,WAAH,IAAeC,EAAf,EAAeA,OAAQG,EAAvB,EAAuBA,YAAaD,EAApC,EAAoCA,aAAcK,EAAlD,EAAkDA,YAAaC,EAA/D,EAA+DA,cAAeH,EAA9E,EAA8EA,SAAUD,EAAxF,EAAwFA,UAAWP,EAAnG,EAAmGA,sBAAnG,OACX,kBAAC,SAAD,CAAQ6B,IAAE,EAACvB,YAAaA,EACxBe,UAAU,gBAER,kBAAC,IAAD,CACES,iBAAiB,oBACjBC,MACE,6BACE,uBAAGC,KAAM,iCAAmCxB,EAAW,IAAMD,EAAW0B,OAAO,UAA/E,eAAuG,6BACvG,uBAAGD,KAAMtB,EAAauB,OAAO,UAA7B,mFAAwD,6BACxD,uBAAGD,KAAMrB,EAAesB,OAAO,UAA/B,iEAAuD,8BAI3DC,UAAU,SACVC,gBAAgB,OAEhB,uBACER,KAAM1C,EAAckB,GACpByB,OAAO,OACPQ,YAAY,IACZC,cAAc,QACdC,eAAe,QACfC,UAAU,uBAEV,4BAAQC,GAAG,KAAKC,GAAG,KAAKC,EAAE,MAC1B,0BAAMC,EAAE,sEAIZ,0BACEC,WAAW,SACXC,EAAGxC,EACHyC,MAAO,CAAEC,WAAY,YAAapB,KAAM,YAEvC3B,EAAsBgD,MAAM,KAAK,U,2DCtG9CC,IAAOC,SAEYC,IAAXC,O,IAEFC,EAAe,CACnBnE,EAAG,8HACHC,EAAG,sLACHC,EAAG,6CACHC,EAAG,6CACHC,EAAG,mDACHC,EAAG,8CACHC,EAAG,mF,GAGkB8D,Y,+BCbvBL,IAAOC,SAEYC,IAAXC,O,IACFnE,EAAgB,CACpBC,EAAG,6HACHC,EAAG,sLACHC,EAAG,6CACHC,EAAG,6CACHC,EAAG,mDACHC,EAAG,8CACHC,EAAG,mFAqTU+D,E,kDApSb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IASRC,UAAY,WACV,EAAKC,SAAS,CACZC,SAAS,KAZM,EAgBnBC,SAAW,SAAAC,GACT,EAAKH,SAAS,CACZC,SAAS,KAlBM,EAsBnBG,aAAe,SAAAD,GACb,EAAKH,SAAS,CACZC,SAAS,KAxBM,EA4BnBI,qBAAuB,SAAAC,GAAS,MAAK,CACnCC,eAAgB,gBAAGC,EAAH,EAAGA,gBAAiBC,EAApB,EAAoBA,aAAcC,EAAlC,EAAkCA,QAASC,EAA3C,EAA2CA,aAA3C,OACd,yBAAKvB,MAAO,CAAEwB,QAAS,IACrB,kBAAC,IAAD,CACEC,IAAK,SAAAC,GACH,EAAKC,YAAcD,GAErBE,YAAW,iBAAYV,GACvBW,MAAOR,EAAa,GACpBS,SAAU,SAAAf,GAAC,OAAIK,EAAgBL,EAAE5B,OAAO0C,MAAQ,CAACd,EAAE5B,OAAO0C,OAAS,KACnEE,aAAc,kBAAM,EAAKC,aAAaX,EAAcC,EAASJ,IAC7DlB,MAAO,CAAE3B,MAAO,IAAK4D,aAAc,EAAGC,QAAS,WAEjD,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,KAAK,UACLC,QAAS,kBAAM,EAAKJ,aAAaX,EAAcC,EAASJ,IACxDmB,KAAM,kBAACC,EAAA,EAAD,MACNC,KAAK,QACLvC,MAAO,CAAE3B,MAAO,KALlB,UASA,kBAAC,IAAD,CAAQ+D,QAAS,kBAAM,EAAKI,YAAYjB,IAAegB,KAAK,QAAQvC,MAAO,CAAE3B,MAAO,KAApF,YAMNoE,WAAY,SAAAC,GAAQ,OAAI,kBAACJ,EAAA,EAAD,CAAgBtC,MAAO,CAAE2C,MAAOD,EAAW,eAAYE,MAC/EC,SAAU,SAAChB,EAAOiB,GAAR,OAAmBA,EAAO3F,KAAK4F,WAAWC,cAAcC,SAASpB,EAAMmB,gBACjFE,8BAA+B,SAAArC,GACzBA,GACFsC,YAAW,kBAAM,EAAKxB,YAAYyB,aAGtCC,OAAQ,SAAAC,GAAI,OACV,EAAKC,MAAMC,iBAAmBtC,EAC5B,kBAAC,IAAD,CACEuC,eAAgB,CAAEC,gBAAiB,UAAWlC,QAAS,GACvDmC,YAAa,CAAC,EAAKJ,MAAMK,YACzBC,YAAU,EACVC,gBAAiBR,EAAKP,aAGtBO,KAzEW,EA4EnBtB,aAAe,SAACX,EAAcC,EAASJ,GACrCI,IACA,EAAKV,SAAS,CACZgD,WAAYvC,EAAa,GACzBmC,eAAgBtC,EAAU/D,QAhFX,EAoFnBqF,YAAc,SAAAjB,GACZA,IACA,EAAKX,SAAS,CAAEgD,WAAY,MApF5B,EAAKL,MAAQ,CACXQ,gBAAiB,KACjBH,WAAY,GACZJ,eAAgB,GAChBQ,MAAM,GANS,E,qDAyFT,IAAD,OACDC,EAAU,CAAC,yBAEbhF,MAAO,8FACPiC,UAAW,uBACX7C,MAAO,MACP6F,MAAO,UACJC,KAAKlD,qBAAqB,uBANjB,IAOZmD,OAAQ,SAACC,EAAcC,GAGrB,MAAO,CACLlC,QAAS,SAAAmC,GAIP,EAAK3D,SAAS,CAAEmD,gBAAiB,CAACM,KAClCG,QAAQC,IAAIJ,GACZ,EAAK1D,iBAYb,CACE1B,MAAO,sEACPiC,UAAW,MACXgD,MAAO,SACP7F,MAAO,OAGT,CACEY,MAAO,uCACPiC,UAAW,aACXgD,MAAO,SACPQ,QAAS,CACP,CACEpB,KAAM,6CACNzB,MAAO,8CAET,CACEyB,KAAM,6CACNzB,MAAO,8CAET,CACEyB,KAAM,kFACNzB,MAAO,oFAGXgB,SAAU,SAAChB,EAAOiB,GAAa,OAA4C,IAArCA,EAAO6B,WAAWC,QAAQ/C,KAElE,CACE5C,MAAO,4GACPiC,UAAW,WACX7C,MAAO,MACP6F,MAAO,SACPQ,QAAS,CACP,CACEpB,KAAM,qBACNzB,MAAO,OAET,CACEyB,KAAM,iCACNzB,MAAO,OAET,CACEyB,KAAM,yDACNzB,MAAO,OAET,CACEyB,KAAM,2BACNzB,MAAO,OAET,CACEyB,KAAM,uCACNzB,MAAO,OAET,CACEyB,KAAM,0GACNzB,MAAO,OAET,CACEyB,KAAM,uCACNzB,MAAO,OAET,CACEyB,KAAM,kFACNzB,MAAO,OAET,CACEyB,KAAM,iCACNzB,MAAO,OAET,CACEyB,KAAM,uFACNzB,MAAO,QAiBXgB,SAAU,SAAChB,EAAOiB,GAAa,OAA6C,IAAtCA,EAAO+B,YAAYD,QAAQ/C,MAG/DiD,EAAUX,KAAKzD,MAAMoE,QAErBC,EAAYZ,KAAKzD,MAAM9D,SAASI,KAAI,SAAAC,GAAE,MAAK,CAC/C0B,IAAK1B,EAAG+H,GACRC,qBAAsB,2BAAIhI,EAAGE,MAC7BA,KAAMF,EAAGE,KACTW,OAAQb,EAAGa,OAAOX,KAClB+H,IAAK,kBAAC,IAAD,CAASjG,MACZ,6BACE,uBAAGe,MAAO,CAAEmF,UAAW,WAAvB,yFACA,uBAAGnF,MAAO,CAAEmF,UAAW,WAAahF,IAAOlD,EAAGiI,KAAK9E,OAAO,MAAMgF,OAAO,UAExEjF,IAAOlD,EAAGiI,KAAKG,IAAI,GAAGjF,OAAO,MAAMgF,OAAO,UAE7CT,WAAYxI,EAAcc,EAAGI,QAC7BC,aAAcL,EAAGI,OACjBU,SAAU,6BACPd,EAAGc,SAASC,KAAKhB,KAAI,SAAAiB,GAAG,OAAKA,EAAId,KAAK+C,MAAM,KAAK,MAAK,6BACtDjD,EAAGc,SAASZ,KAAK+C,MAAM,KAAK,IAE/BoF,oBAAqBrI,EAAGc,SAASZ,KACjCoI,aAActI,EAAGc,SAASZ,KAAK+C,MAAM,KAAK,GAC1CzC,UAAWR,EAAGc,SAASC,KAAKhB,KAAI,SAAAiB,GAAG,OAAKA,EAAIR,aAC5CC,SAAUT,EAAGc,SAASC,KAAKhB,KAAI,SAAAiB,GAAG,OAAKA,EAAIP,YAC3C8H,WAAYvI,EAAGc,SAASC,KAAKhB,KAAI,SAAAyI,GAAG,OAAKA,EAAIvH,UAC7CwH,YAAazI,EAAGc,SAASC,KAAKhB,KAAI,SAAAyI,GAAG,OAAKA,EAAItH,WAC9CwH,cAAe1I,EAAGa,OAAOK,QACzB0G,YAAa5H,EAAGc,SAAS8G,gBAK3B,OAFAE,EAAUa,UAGR,6BACE,kBAAC,IAAD,CACE3B,QAASA,EACT4B,WAAYd,EACZe,WAAY,CACVC,SAAU,CAAC,gBACXC,eAAgB,EAEhBC,gBAAiB,CAAC,KAAM,KAAM,OAC9BC,gBAAiB,OACjBC,iBAAkB,QAEpB5D,KAAK,QACLhE,UAAU,QACVyB,MAAO,CAAEoG,OAAQ,IACjBhG,OAAQ,CACNiG,YAAa,kBAACC,EAAA,EAAD,MACbC,cAAe,kBAACC,EAAA,EAAD,OAEjB1B,QAASA,EACT2B,SAAS,SAYX,kBAAC,IAAD,CACEC,UAAQ,EACR7F,QAASsD,KAAKZ,MAAM1C,QACpB8F,KAAMxC,KAAKrD,SACX8F,SAAUzC,KAAKnD,aACf6F,OAAQ,KACRxI,MAAM,MACNyI,UAAU,GAEV,kBAAC,EAAD,CAAUhK,UAAWqH,KAAKZ,MAAMQ,gBAAiBlH,MAAM,U,GA7RzC2D,aCgBTuG,G,yDA/CX,WAAYrG,GAAQ,IAAD,8BACf,cAAMA,IACD6C,MAAQ,CACTyD,KAAM,EACNC,QAAS,EACTC,MAAO,EACPC,QAAS,EACTC,QAAS,GACTC,SAAU,MAEd,EAAKC,MAAQ,EAAKA,MAAMC,KAAX,gBAVE,E,oDAcf,IAAIC,GAAM,IAAIC,MAAOC,UACjBC,EAAIxD,KAAKZ,MAAM8D,SAAWG,EAC1BR,EAAUY,KAAKC,MAAMF,EAAC,OACtBT,EAAUU,KAAKC,MAAOF,EAAC,MAAF,MACrBV,EAAUW,KAAKC,MAAOF,EAAC,KAAF,KACrBR,EAAUS,KAAKC,MAAOF,EAAC,IAAkB,KAC7CxD,KAAKvD,SAAS,CAACoG,OAAMC,UAASC,QAAOC,YACjCQ,EAAI,IACJG,cAAc3D,KAAK4D,GACnB5D,KAAKvD,SAAS,CAAEoG,KAAM,EAAGC,QAAS,EAAGC,MAAO,EAAGC,QAAS,EAAGC,QAAS,oG,0CAKxE,IAAMC,EAAW,IAAII,KAAKtD,KAAKzD,MAAMsH,gBAAgBN,UACrDO,YAAY9D,KAAKmD,MAAO,KACxBnD,KAAKvD,SAAL,2BAAkBuD,KAAKZ,OAAvB,IAA8B8D,SAAUA,O,+BAGlC,IAAD,EAC8ClD,KAAKZ,MAAhDyD,EADH,EACGA,KAAMG,EADT,EACSA,QAASD,EADlB,EACkBA,MAAOD,EADzB,EACyBA,QAASG,EADlC,EACkCA,QACvC,OACI,6BACUD,EAAU,GACV,2BAAIH,EAAJ,WAAaE,EAAb,WAAuBD,EAAvB,YAAoCE,EAApC,UACA,2BAAIH,EAAJ,WAAaE,EAAb,WAAuBD,EAAvB,WAAmCE,EAAnC,UAEF,gCAASC,Q,GA1CT5G,c,OCEpBL,IAAOC,SAGyBC,IAAxBC,OAAwBD,IAAhB6H,Y,IAEV3H,EAAe,CACnBnE,EAAG,gOACHC,EAAG,sLACHC,EAAG,uHACHC,EAAG,8FACHC,EAAG,0JACHC,EAAG,8CACHC,EAAG,iOAGCuH,EAAU,CACd,CACEhF,MAAO,8FACPiC,UAAW,uBACX7C,MAAO,MACP6F,MAAO,UAET,CACEjF,MAAO,sEACPiC,UAAW,MACXgD,MAAO,SACP7F,MAAO,OAET,CACEY,MAAO,uCACPiC,UAAW,QACXgD,MAAO,UAET,CACEjF,MAAO,4GACPiC,UAAW,WACX7C,MAAO,MACP6F,MAAO,WAII,cAAmB,IAC1BiE,EADyB,EAAfvL,SACmBI,KAAI,SAAAC,GAAE,MAAK,CAC5CG,WAAYH,EAAGa,OAAOX,KACtBY,SAAU,6BACPd,EAAGc,SAASC,KAAKhB,KAAI,SAAAiB,GAAG,OAAKA,EAAId,KAAK+C,MAAM,KAAK,MAAK,6BACtDjD,EAAGc,SAASZ,KAAK+C,MAAM,KAAK,IAE/BkI,aAAcnL,EAAGoL,SAASrL,KAAI,SAAAiB,GAAG,OAAKA,EAAId,QAC1C8H,qBAAsB,2BAAKhI,EAAGE,MAC9Ba,KAAMf,EAAGc,SAASC,KAAKhB,KAAI,SAAAsL,GAAC,OAAKA,EAAEnL,QACnC+H,IAAK,kBAAC,IAAD,CAASjG,MAAO,6BAAK,uBAAGe,MAAO,CAAEmF,UAAW,WAAvB,yFAAL,IAA4D,uBAAGnF,MAAO,CAAEmF,UAAW,WAAahF,IAAOlD,EAAGiI,KAAK9E,OAAO,MAAMgF,OAAO,UAAoBjF,IAAOlD,EAAGiI,KAAKG,IAAI,GAAGjF,OAAO,MAAMgF,OAAO,UACtN/H,OAAQkD,EAAatD,EAAGI,QACxBkL,MAAO,kBAAC,EAAD,CAAOP,eAAgB/K,EAAGiI,UAInC,OACE,6BACE,kBAAC,IAAD,CACEW,WAAYsC,EACZrC,YAAY,EACZvD,KAAK,QACL0B,QAASA,EACTwC,SAAS,WCjEjBtG,IAAOC,SAGP,IAAMG,EAAe,CACjBnE,EAAG,gOACHC,EAAG,sLACHC,EAAG,uHACHC,EAAG,8FACHC,EAAG,0JACHC,EAAG,8CACHC,EAAG,iOAGDuH,EAAU,CACZ,CACIhF,MAAO,8FACPiC,UAAW,uBACX7C,MAAO,MACP6F,MAAO,UAET,CACEjF,MAAO,sEACPiC,UAAW,MACXgD,MAAO,SACP7F,MAAO,OAET,CACEY,MAAO,4GACPiC,UAAW,WACX7C,MAAO,MACP6F,MAAO,WAIA,cAAiB,IACtBiE,EADqB,EAAdvL,SACsBI,KAAI,SAAAC,GAAE,MAAK,CAC1CgI,qBAAsBhI,EAAGE,KACzBY,SAAU,6BACOd,EAAGc,SAASC,KAAKhB,KAAI,SAAAiB,GAAG,OAAKA,EAAId,KAAK+C,MAAM,KAAK,MAAK,6BACtDjD,EAAGc,SAASZ,KAAK+C,MAAM,KAAK,IAE7CgF,IAAK/E,IAAOlD,EAAGiI,KAAK9E,OAAO,MAAMgF,OAAO,aACxC/H,OAAQkD,EAAatD,EAAGI,QACxBW,KAAMf,EAAGc,SAASC,KAAKhB,KAAI,SAAAiB,GAAG,OAAKA,EAAId,YAE3C,OACI,kBAAC,IAAD,CACI0I,WAAYsC,EACZrC,WAAY,CAAEC,SAAU,CAAC,iBACzBxD,KAAK,QACL0B,QAASA,EACTwC,SAAS,U,4BC1CflG,GAAe,CACnBnE,EAAG,gOACHC,EAAG,sLACHC,EAAG,QACHC,EAAG,MACHC,EAAG,0JACHC,EAAG,8CACHC,EAAG,iOA8DU8L,GA3DG,SAAC,GAAkB,IAC7BzL,EAD4B,EAAfH,SACMI,KAAI,SAAAC,GAAE,MAAK,CAClCG,WAAYH,EAAGG,WACfqL,aAAcxL,EAAGwL,aACjBjL,YAAaP,EAAGO,YAChBD,cAlBkB,OAqBpB,OACE,6BACA,kBAAC,gBAAD,CACEa,WAAW,cACXC,MAAM,OACNC,OAAO,MACPC,UAAU,iBAEV,kBAAC,cAAD,CAAaC,UA9BjB,2GA+BO,qBAAGC,YACUzB,KAAI,SAAA0B,GAAG,OACjB,kBAAC,YAAD,CACEC,IAAKD,EAAIE,OACTJ,UAAWE,EACXG,KAAK,UACLC,OAAO,kBAMd/B,EAAQC,KAAI,gBAAGI,EAAH,EAAGA,WAAYqL,EAAf,EAAeA,aAAcjL,EAA7B,EAA6BA,YAAaD,EAA1C,EAA0CA,aAA1C,OACX,kBAAC,SAAD,CAAQwB,IAAE,EAACvB,YAAaA,EACxBe,UAAU,gBAEN,uBACEM,KAAM0B,GAAakI,GACnB3J,OAAO,OACPQ,YAAY,IACZC,cAAc,QACdC,eAAe,QACfC,UAAU,uBAEV,4BAAQC,GAAG,KAAKC,GAAG,KAAKC,EAAE,MAC1B,0BAAMC,EAAE,qEAEV,0BACAC,WAAW,SACXC,EAAGxC,EACHyC,MAAO,CAAEC,WAAY,YAAapB,KAAM,YAEvCzB,UClEE,ICAcoD,YDAd,WAEb,OACE,6BACE,kBAAC,IAAD,CACE+B,KAAK,aEGPmG,GAAYvI,MAASiF,OAAO,QAGxB,yDAAqDjF,IAAOuI,IAAWtD,OAAO,cAA9E,oBAAuGjF,MAASiF,OAAO,cAAvH,kBAJI,IAIJ,8D,aCdJsD,GAAYvI,MAASiF,OAAO,QAU9BuD,GAAS,kDAAoDxI,IAAOuI,IAAWtD,OAAO,cAAgB,YAAcjF,MAASiF,OAAO,cAA3H,yEAoFEwD,OAlDf,WAA8B,IAAD,EACuBC,mBAAS,MADhC,oBACpBC,EADoB,KACDC,EADC,OAEuBF,mBAAS,MAFhC,oBAEpBG,EAFoB,KAEDC,EAFC,OAGuBJ,mBAAS,MAHhC,oBAGpBK,EAHoB,KAGDC,EAHC,OAIGN,oBAAS,GAJZ,oBA6C3B,OA7C2B,UAM3BO,qBAAU,WAMV,IAAuB3D,IArDN,4DAsDf4D,MAAM5D,GACH6D,MAAK,SAASC,GACTA,EAAIC,IACNH,MAAM5D,GACL6D,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAC,GAAG,OAAIR,EAAqBQ,SAK1C,SAA2B9D,GACzB4D,MAAM5D,GACH6D,MAAK,SAASC,GACTA,EAAIC,IACNH,MAAM5D,GACL6D,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAC,GAAG,OAAIN,EAAqBM,SArBxCG,CA7Ca,2DAuEf,SAA0BjE,GACxB4D,MAAM5D,GACL6D,MAAK,SAASC,GACTA,EAAIC,IACNH,MAAM5D,GACH6D,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAC,GAAQJ,EAAoBI,SA/BxCI,CAAiBhB,MAChB,IAmCK,CAACG,EAAmBE,EAAmBE,I,oBCtFzCU,I,OAASC,KAATD,MCmCAE,IDjCiBtJ,Y,OCiCLuJ,IAAZD,SAEAE,GAAgBC,IAAhBD,YACFtB,GAAYvI,MAASiF,OAAO,QAGrB8E,GAAM,4DAGNC,GAAW,0DAGbxB,GAAS,kDAAoDxI,IAAOuI,IAAWtD,OAAO,cAAgB,YAAcjF,MAASiF,OAAO,cAA3H,yEAuBpB,SAASgF,GAAaC,GACpB,OAASA,GAAWA,EAAUlK,MAASmK,MAAM,QAAYD,GAAWA,EAAUlK,IAAO,cAAcmK,MAAM,OAU3GC,OAAOC,SAAW,WANZC,SAASC,KAAKC,UAAY,KAAOF,SAASG,gBAAgBD,UAAY,IACxEF,SAASI,eAAe,SAAS7K,MAAMkC,QAAU,QAEjDuI,SAASI,eAAe,SAAS7K,MAAMkC,QAAU,QAe3B1B,YC9DNuJ,IAAZD,Q,IAEFpB,GAAYvI,MAASiF,OAAO,QASsCjF,IAAOuI,IAAWtD,OAAO,cAA8BjF,MAASiF,OAAO,cC/C5H5E,YD6GJsK,IEtEPhB,GAAYC,IAAZD,QACAE,GAAgBC,IAAhBD,YAEFtB,GAAYvI,MAASiF,OAAO,QASvBuD,GAAS,kDAAoDxI,IAAOuI,IAAWtD,OAAO,cAAgB,YAAcjF,MAASiF,OAAO,cAA3H,yEAmBpB,SAASgF,GAAaC,GACpB,OAASA,GAAWA,EAAUlK,MAASmK,MAAM,QAAYD,GAAWA,EAAUlK,IAAO,cAAcmK,MAAM,OAH3GC,OAAOC,SAAW,WANZC,SAASC,KAAKC,UAAY,KAAOF,SAASG,gBAAgBD,UAAY,IACxEF,SAASI,eAAe,SAAS7K,MAAMkC,QAAU,QAEjDuI,SAASI,eAAe,SAAS7K,MAAMkC,QAAU,QA+JtC6I,OArJf,WAAyB,IAAD,EAC4BlC,mBAAS,MADrC,oBACfC,EADe,KACIC,EADJ,OAE4BF,mBAAS,MAFrC,oBAEfG,EAFe,KAEIC,EAFJ,OAG0BJ,mBAAS,MAHnC,oBAGfK,EAHe,KAGGC,EAHH,OAIEN,mBAAS,IAJX,oBAIfmC,EAJe,KAITC,EAJS,OAKIpC,mBAAS,GALb,oBAKfvB,EALe,KAKR4D,EALQ,OAMQrC,oBAAS,GANjB,oBAMf/D,EANe,KAMNqG,EANM,KA0BtB,SAASxB,EAAiBlE,GACxB0F,GAAW,GACX9B,MAAM5D,GACH6D,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAC,GAAG,OAAIJ,EAAoBI,KAAM4B,GAAW,IAGtD,SAASC,EAAiB3F,GACxB0F,GAAW,GACX9B,MAAM5D,GACH6D,MAAK,SAAUC,GA1Da,IAACnK,EA2DxBmK,EAAIC,GACNG,EAAiBlE,IA5DSrG,EA8DC,WA7DnCiM,IAAaC,QAAQ,CACnBC,QAAS,oTAETnM,cA2DM+L,GAAW,OAUnB,GA3CA/B,qBAAU,WAORC,MA7Ce,6DA8CZC,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAC,GAAG,OAAIR,EAAqBQ,MAGtC,SAA2B9D,GACzB4D,MAAM5D,GACH6D,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAC,GAAG,OAAIN,EAAqBM,MAbpCG,CArCoB,2DAsCpBC,EAAiBhB,MAChB,IAuCCG,GAAqBE,GAAqBE,EAAkB,CAAC,IAiBtDsC,EAAT,WACE,IAAIlE,EAAQ,EACNiB,EAAQN,aAAY,WACxBgD,EAAQ,CAAC/B,EAAiBtM,SAASsM,EAAiBtM,SAAS6O,OAAS,KACtEnE,MACC,KAEHnE,YAAW,WACT2E,cAAcS,GACdmD,MACS,IAARpE,IAGIoE,EAAT,WACE,IAAIpE,EAAQ4B,EAAiBtM,SAAS6O,OAAS,EACzClD,EAAQN,aAAY,WACxBX,IACA2D,EAAQ,CAAC/B,EAAiBtM,SAAS0K,OAClC,KAEHnE,YAAW,WACT2E,cAAcS,GACdiD,MACS,IAARlE,IAEL,OACE,6BACG9C,QAAQC,IAAIuG,GACb,kBAAC,GAAD,CAAShL,MAAO,CAAEwB,QAAS,WACzB,yBAAKjD,UAAU,uBACb,6BACE,4FAAgB+I,EAAhB,+BACA,4BAAQlF,QAAS,kBAAM8I,EAAS5D,EAAQ,KAAxC,wEAEE,4BAAQlF,QAAS,kBAAM8I,EAAS,KAAhC,yEAWJ,kBAAC,IAAD,KAAS,wBAAIlL,MAAO,CAAEmF,UAAW,WAAxB,wHACT,kBAAC,GAAD,CAAa5G,UAAU,cACrBoN,aAAc,CAACxL,IAAOuI,IAAYvI,OAClCyL,WAAkB,EAClB9J,SAvEZ,SAAkC+J,EAAMC,GAEtCV,EADAzC,GAAM,yDAAqDmD,EAAW,GAAhE,oBAA8EA,EAAW,GAAzF,kBAjFI,IAiFJ,gEAuEI1B,aAAcA,GACd2B,YAAY,EACZ/L,MAAO,CAAEoG,OAAQ,MAEnB,kBAAC,IAAD,CAASnH,MAAO,2OACd+M,gBAAiB,GACjB3M,gBAAiB,GACjBD,UAAU,OACV,kBAAC6M,EAAA,EAAD,OAGF,kBAAC,IAAD,CAAQ7J,QA7EhB,WACE,IAAI8J,EAAc,EAClB1H,QAAQC,IAAIyE,EAAiBtM,SAAS,IACtC,IAAM2L,EAAQN,aAAY,WACxBiE,GAAe,IACd,KAEH/I,YAAW,WACT2E,cAAcS,GACdmD,MACe,IAAdQ,KAmEG,wBACA,kBAAC,EAAD,CAAUtP,SAAUoO,IAEpB,kBAAC,EAAD,CAAWpO,SAAUsM,EAAiBtM,SAAUkI,QAASA,KAE3D,kBAAC,IAAD,CACE3C,KAAK,UACLgK,MAAM,SACN9J,KAAM,kBAAC+J,EAAA,EAAD,MACNhK,QAASiK,gBAAOC,YAChBtH,GAAG,QACH/F,MAAM,4CAMT,OAAQ,+BCzMTsN,GAAmCxC,IAAnCwC,OAAiBC,IAAkBzC,IAA3BD,QAA2BC,IAAlByC,QA6CVC,IA7C4B1C,IAAV2C,MACbC,IAAZC,Q,kDAMN,WAAYlM,GAAO,IAAD,8BAChB,cAAMA,IACD6C,MAAQ,GAFG,E,qDAOhB,OACE,6BACE,kBAAC,IAAD,CAAQyB,GAAG,UACP,kBAACuH,GAAD,KACE,yBAAKhO,UAAU,SACf,kBAAC,IAAD,CAAMsO,MAAM,OAAOC,KAAK,aAAaC,oBAAqB,CAAC,KAAM/M,MAAO,CAAEmF,UAAW,UACnF,kBAAC,IAAK6H,KAAN,CAAWrO,IAAI,KAAI,kBAAC,IAAD,CAASsO,GAAG,KAAZ,8EACnB,kBAAC,IAAKD,KAAN,CAAWrO,IAAI,KAAI,kBAAC,IAAD,CAASsO,GAAG,UAAZ,oEACnB,kBAAC,IAAKD,KAAN,CAAWrO,IAAI,KAAI,kBAAC,IAAD,CAASsO,GAAG,aAAZ,yDAIvB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,MAClB,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,SAASC,UAAWC,KACtC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAO,YAAYC,UAAaE,MAI/C,kBAACd,GAAD,CAAQjO,UAAU,UAAlB,oBACgB,6BACd,kBAACgP,EAAA,EAAD,MACA,uBAAGrO,KAAK,qDAAqDC,OAAO,UAApE,kB,GA9BgBqB,cCSfgN,OA5Bf,WACE,IAAIC,EAAe7E,KAEnB,OACE,yBAAKrK,UAAU,OACZkP,EAAa,IAAMA,EAAa,IAAMA,EAAa,GAChD,6BAEE,kBAAC,IAAD,KACE,kBAAC,GAAD,QAGJ,yBAAKzI,GAAG,kBACN,yBAAKA,GAAG,0BACN,yBAAKzG,UAAU,aACb,yBAAKA,UAAU,YACf,yBAAKA,UAAU,YACf,yBAAKA,UAAU,YACf,yBAAKA,UAAU,YACf,yBAAKA,UAAU,iBCpB7BmP,IAASrK,OACP,kBAAC,GAAD,MAEAoH,SAASI,eAAe,U","file":"static/js/main.bac6f261.chunk.js","sourcesContent":["import React from 'react'\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  Marker,\n} from \"react-simple-maps\"\nimport { Tooltip } from 'antd'\nimport './MapChart.css'\n\nconst geoUrl =\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\"\nconst MARKER_OF_SET =  - 30\n\n// цвета маркеров\nconst LAUNCH_STATUS = {\n  1: 'Запланированы точные дата и время запуска',\n  2: 'Дата и время будут объявлены позже',\n  3: 'green',\n  4: 'red',\n  5: 'Незапланированная задержка',\n  6: 'В полете',\n  7: 'Во время запуска произошел частичный сбой',\n}\n\nconst MapChart = ({ launches, flag , tableData}) => {\n  let markers = []\n\n  if (flag) {\n     markers = tableData.map(el => ({\n      RocketAndMissionNames: el.name,\n      rocketName: el.rocketName,\n      status: el.statusNumber,\n      markerOffset: MARKER_OF_SET,\n      coordinates: [el.longitude, el.latitude],\n      padsMapURL: el.padsMapURL,\n      padsWikiURL: el.padsWikiURL,\n      rocketwikiURL: el.rocketwikiURL,\n      latitude: el.latitude,\n      longitude: el.longitude,\n    }))\n  }  else {\n     markers = launches.map(el => ({\n      RocketAndMissionNames: el.name,\n      rocketName: el.rocket.name,\n      status: el.status,\n      markerOffset: MARKER_OF_SET,\n      coordinates: [el.location.pads.map(els => (els.longitude)), el.location.pads.map(els => (els.latitude))],\n      padsMapURL: el.location.pads.map(els => (els.mapURL)),\n      padsWikiURL: el.location.pads.map(els => (els.wikiURL)),\n      rocketwikiURL: el.rocket.wikiURL,\n      latitude: el.location.pads.map(els => (els.latitude)),\n      longitude: el.location.pads.map(els => (els.longitude)),\n    }))\n  }\n\n  return (\n    <ComposableMap\n      projection=\"geoMercator\"\n      width=\"800\"\n      height=\"600\"\n      className=\"MapChartStyle\"\n    >\n      <Geographies geography={geoUrl}>\n        {({ geographies }) =>\n          geographies.map(geo => (\n            <Geography\n              key={geo.rsmKey}\n              geography={geo}\n              fill=\"#EAEAEC\"\n              stroke=\"#D6D6DA\"\n            />\n          ))\n        }\n\n      </Geographies>\n      {markers.map(({ rocketName, status, coordinates, markerOffset, padsWikiURL, rocketwikiURL, latitude, longitude, RocketAndMissionNames }) => (\n        <Marker on coordinates={coordinates}\n        className=\"MarkersSryle\"\n        >\n          <Tooltip\n            overlayClassName=\"tooltipInMapChart\"\n            title={\n              <div>\n                <a href={\"http://maps.google.com/maps?q=\" + latitude + \",\" + longitude} target=\"_blank\">Google Maps</a><br></br>\n                <a href={padsWikiURL} target=\"_blank\">Космодром вики</a><br></br>\n                <a href={rocketwikiURL} target=\"_blank\">Ракета вики</a><br></br>\n              </div>\n\n            }\n            placement=\"bottom\"\n            mouseLeaveDelay=\"0.3\"\n          >\n            <g\n              fill={LAUNCH_STATUS[status]}\n              stroke=\"none\"\n              strokeWidth=\"3\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              transform=\"translate(-12, -24)\"\n            >\n              <circle cx=\"12\" cy=\"10\" r=\"3\" />\n              <path d=\"M12 21.7C17.3 17 20 13 20 10a8 8 0 1 0-16 0c0 3 2.7 6.9 8 11.7z\" />\n            </g>\n          </Tooltip>\n\n          <text\n            textAnchor=\"middle\"\n            y={markerOffset}\n            style={{ fontFamily: \"system-ui\", fill: \"#5D5A6D\" }}\n          >\n            {RocketAndMissionNames.split('|')[0]}\n          </text>\n        </Marker>\n      )\n      )}\n    </ComposableMap>\n  )\n}\n\nexport default MapChart\n","import React, { Component } from 'react'\nimport { Table, Modal, Tooltip, Input, Space, Button } from 'antd'\nimport MapChart from '../MapChart/MapChart'\nimport { Link, DirectLink, Element, Events, animateScroll as scroll, scrollSpy, scroller } from 'react-scroll'\nimport moment from 'moment'\nimport 'moment/locale/ru'\nimport Highlighter from 'react-highlight-words';\nimport { SearchOutlined } from '@ant-design/icons';\n\nmoment.locale()\n\nconst { Column } = Table;\n\nconst launchStatus = {\n  1: 'Дата и время определены',\n  2: 'Дата и время будут объявлены позже',\n  3: 'Успешно',\n  4: 'Неудача',\n  5: 'Задержка',\n  6: 'В полете',\n  7: 'Произошел сбой',\n}\n\nclass OldTable extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      markersLaunches: null,\n      searchText: '',\n      searchedColumn: '',\n    }\n  }\n  showModal = () => {\n    this.setState({\n      visible: true,\n    })\n  }\n\n  handleOk = e => {\n    this.setState({\n      visible: false,\n    })\n  }\n\n  handleCancel = e => {\n    this.setState({\n      visible: false,\n    })\n  }\n\n  getColumnSearchProps = dataIndex => ({\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={node => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\n        />\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Search\n          </Button>\n          <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n            Reset\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n    onFilter: (value, record) => record.name.toString().toLowerCase().includes(value.toLowerCase()),\n    onFilterDropdownVisibleChange: visible => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n    render: text =>\n      this.state.searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n          searchWords={[this.state.searchText]}\n          autoEscape\n          textToHighlight={text.toString()}\n        />\n      ) : (\n          text\n        ),\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex.name,\n    });\n  };\n\n  handleReset = clearFilters => {\n    clearFilters();\n    this.setState({ searchText: '' });\n  };\n\n  render() {\n    const columns = [\n      {\n        title: \"Название запуска\",\n        dataIndex: \"RocketAndMissionName\",\n        width: \"400\",\n        ...this.getColumnSearchProps('Имя'),\n        onCell: (selectedRows, selectedRowKeys) => {\n          return {\n            onClick: event => {\n              this.setState({ markersLaunches: [selectedRows] })\n              this.showModal()\n            },\n          }\n        }\n      },\n      {\n        title: \"Дата запуска\",\n        dataIndex: \"net\",\n      },\n      {\n        title: \"Статус\",\n        dataIndex: \"statusText\",\n        width: \"100\",\n      },\n      {\n        title: \"Космодром\",\n        dataIndex: \"pads\",\n        width: \"300\"\n      },\n    ]\n    const oldLaunch = this.props.launches.map(el => ({\n      key: el.id,\n      RocketAndMissionName: <a>{el.name}</a>,\n      name: el.name,\n      rocket: el.rocket.name,\n      net: <Tooltip title={\n        <div>\n          <p style={{ textAlign: 'center' }}>Локальное время</p>\n          <p style={{ textAlign: 'center' }}>{moment(el.net).locale('ru').format('LLL')}</p>\n        </div>}>\n        {moment(el.net).utc(0).locale('ru').format('LLL Z')}\n      </Tooltip>,\n      statusText: launchStatus[el.status],\n      statusNumber: el.status,\n      pads: el.location.pads.map(els => (els.name)),\n      longitude: el.location.pads.map(els => (els.longitude)),\n      latitude: el.location.pads.map(els => (els.latitude)),\n      PadsMapURL: el.location.pads.map(url => (url.mapURL)),\n      PadsWikiURL: el.location.pads.map(url => (url.wikiURL)),\n      RocketWikiURL: el.rocket.wikiURL,\n    }))\n    return (\n      <div >\n        <Table\n          columns={columns}\n          dataSource={oldLaunch}\n          pagination={{\n            position: ['bottomCenter'],\n            defaultCurrent: 1,\n            // simple:\"true\",\n            pageSizeOptions: ['10', '50', '100'],\n            showQuickJumper: \"true\",\n          }}\n          size=\"small\"\n          className=\"table\"\n          style={{ margin: 10 }}\n          bordered=\"true\"\n        >\n        </Table>\n\n        <Modal\n          centered\n          // title=\"Расположение запуска на карте\"\n          visible={this.state.visible}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n          footer={null}\n          width='65%'\n        >\n          <MapChart launches={this.state.markersLaunches} />\n        </Modal>\n      </div>\n\n    )\n  }\n}\n\nexport default OldTable\n","import React, { Component } from 'react'\nimport { Table, Modal, Tooltip, Input, Button, Space } from 'antd'\nimport Highlighter from 'react-highlight-words';\nimport MapChart from '../MapChart/MapChart'\nimport moment from 'moment'\nimport 'moment/locale/ru'\nimport './TableOld2.css'\nimport swal from '@sweetalert/with-react'\nimport { ClearOutlined, CheckOutlined, SearchOutlined } from '@ant-design/icons'\n\nmoment.locale()\n\nconst { Column } = Table\nconst LAUNCH_STATUS = {\n  1: 'Запуск скоро состоится',\n  2: 'Дата и время будут объявлены позже',\n  3: 'Успешно',\n  4: 'Неудача',\n  5: 'Задержка',\n  6: 'В полете',\n  7: 'Произошел сбой',\n}\n\nconst COUNTRY = {\n  USA: 'США',\n  CHN: 'Китай',\n  KAZ: 'Казахстан',\n  IRN: 'Иран',\n  RUS: 'Россия',\n  GUF: 'Французская Гвиана',\n  JPN: 'Япония',\n  NZL: 'Новая Зеландия',\n  IND: 'Индия',\n  UNK: 'Великобритания',\n}\n\nclass OldTable2 extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      markersLaunches: null,\n      searchText: '',\n      searchedColumn: '',\n      show: false,\n    }\n  }\n\n  showModal = () => {\n    this.setState({\n      visible: true,\n    })\n  }\n\n  handleOk = e => {\n    this.setState({\n      visible: false,\n    })\n  }\n\n  handleCancel = e => {\n    this.setState({\n      visible: false,\n    })\n  }\n\n  getColumnSearchProps = dataIndex => ({\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={node => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\n        />\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Search\n          </Button>\n          <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n            Reset\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n    onFilter: (value, record) => record.name.toString().toLowerCase().includes(value.toLowerCase()),\n    onFilterDropdownVisibleChange: visible => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n    render: text =>\n      this.state.searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n          searchWords={[this.state.searchText]}\n          autoEscape\n          textToHighlight={text.toString()}\n        />\n      ) : (\n          text\n        ),\n  })\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm()\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex.name,\n    })\n  }\n\n  handleReset = clearFilters => {\n    clearFilters()\n    this.setState({ searchText: '' })\n  }\n\n  render() {\n    const columns = [\n      {\n        title: \"Название запуска\",\n        dataIndex: \"RocketAndMissionName\",\n        width: '30%',\n        align: 'center',\n        ...this.getColumnSearchProps('Имя'),\n        onCell: (selectedRows, selectedRowKeys) => {\n          // selectedRowKeys -> number\n          // selectedRows    -> data\n          return {\n            onClick: event => {\n              // console.log(selectedRowKeys);\n              // console.log(selectedRows);\n              // this.setState({ markersLaunches: [selectedRows] })\n              this.setState({ markersLaunches: [selectedRows] })\n              console.log(selectedRows)\n              this.showModal()\n              // swal({\n              //   // icon: 'error',\n              //   buttons: false,\n              //   content: (\n              //     <MapChart tableData={[selectedRows] } flag={true}/>\n              //   )\n              // })\n            },\n          }\n        }\n      },\n      {\n        title: \"Дата запуска\",\n        dataIndex: \"net\",\n        align: 'center',\n        width: '25%',\n\n      },\n      {\n        title: \"Статус\",\n        dataIndex: \"statusText\",\n        align: 'center',\n        filters: [\n          {\n            text: 'Успешно',\n            value: 'Успешно',\n          },\n          {\n            text: 'Неудача',\n            value: 'Неудача',\n          },\n          {\n            text: 'Произошел сбой',\n            value: 'Произошел сбой',\n          },\n        ],\n        onFilter: (value, record) => { return record.statusText.indexOf(value) === 0 }\n      },\n      {\n        title: \"Площадка / Космодром\",\n        dataIndex: \"location\",\n        width: '30%',\n        align: 'center',\n        filters: [\n          {\n            text: 'США',\n            value: 'USA',\n          },\n          {\n            text: 'Китай',\n            value: 'CHN',\n          },\n          {\n            text: 'Казахстан',\n            value: 'KAZ',\n          },\n          {\n            text: 'Иран',\n            value: 'IRN',\n          },\n          {\n            text: 'Россия',\n            value: 'RUS',\n          },\n          {\n            text: 'Французская Гвиана',\n            value: 'GUF',\n          },\n          {\n            text: 'Япония',\n            value: 'JPN',\n          },\n          {\n            text: 'Новая Зеландия',\n            value: 'NZL',\n          },\n          {\n            text: 'Индия',\n            value: 'IND',\n          },\n          {\n            text: 'Великобритания',\n            value: 'UNK',\n          },\n          // {\n          //   text: 'Фильтр по космодромам',\n          //   value: 'Submenu',\n          //   children: [\n          //     {\n          //       text: 'Cape Canaveral',\n          //       value: 'Cape Canaveral',\n          //     },\n          //     {\n          //       text: 'Jiuquan',\n          //       value: 'Jiuquan',\n          //     },\n          //   ],\n          // }\n        ],\n        onFilter: (value, record) => { return record.countryCode.indexOf(value) === 0 },\n      },\n    ]\n    const loading = this.props.loading\n\n    const oldLaunch = this.props.launches.map(el => ({\n      key: el.id,\n      RocketAndMissionName: <a>{el.name}</a>,\n      name: el.name,\n      rocket: el.rocket.name,\n      net: <Tooltip title={\n        <div>\n          <p style={{ textAlign: 'center' }}>Локальное время</p>\n          <p style={{ textAlign: 'center' }}>{moment(el.net).locale('ru').format('LLL')}</p>\n        </div>}>\n        {moment(el.net).utc(0).locale('ru').format('LLL z')}\n      </Tooltip>,\n      statusText: LAUNCH_STATUS[el.status],\n      statusNumber: el.status,\n      location: <div>\n        {el.location.pads.map(els => (els.name.split(',')[0]))}<br />\n        {el.location.name.split(',')[0]}\n      </div>,\n      locationWithoutPads: el.location.name,\n      spaceortName: el.location.name.split(',')[0],\n      longitude: el.location.pads.map(els => (els.longitude)),\n      latitude: el.location.pads.map(els => (els.latitude)),\n      PadsMapURL: el.location.pads.map(url => (url.mapURL)),\n      PadsWikiURL: el.location.pads.map(url => (url.wikiURL)),\n      RocketWikiURL: el.rocket.wikiURL,\n      countryCode: el.location.countryCode,\n    }))\n    // переверачиваем дату, не особо важно. Влияет только на вывод\n    oldLaunch.reverse()\n\n    return (\n      <div >\n        <Table\n          columns={columns}\n          dataSource={oldLaunch}\n          pagination={{\n            position: ['bottomCenter'],\n            defaultCurrent: 1,\n            // simple:\"true\",\n            pageSizeOptions: ['10', '50', '100'],\n            showQuickJumper: \"true\",\n            hideOnSinglePage: \"true\",\n          }}\n          size=\"small\"\n          className=\"table\"\n          style={{ margin: 10 }}\n          locale={{\n            filterReset: <ClearOutlined />,\n            filterConfirm: <CheckOutlined />,\n          }}\n          loading={loading}\n          bordered=\"true\"\n        >\n        </Table>\n\n\n\n\n\n\n\n\n\n        <Modal\n          centered\n          visible={this.state.visible}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n          footer={null}\n          width='70%'\n          closable={false}\n        >\n          <MapChart tableData={this.state.markersLaunches} flag={true} />\n        </Modal>\n      </div>\n\n    )\n  }\n}\n\nexport default OldTable2\n","import React, {Component} from 'react'\nimport './Timer.css'\n\n\nclass Timer extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            days: 0,\n            minutes: 0,\n            hours: 0,\n            seconds: 0,\n            time_up: \"\",\n            deadline: null,\n        }\n        this.count = this.count.bind(this)\n    }\n\n    count () {\n        let now = new Date().getTime();\n        let t = this.state.deadline - now;\n        let days    = Math.floor(t / (1000 * 60 * 60 * 24));\n        let hours   = Math.floor((t % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n        let minutes = Math.floor((t % (1000 * 60 * 60)) / (1000 * 60));\n        let seconds = Math.floor((t % (1000 * 60)) / 1000);\n        this.setState({days, minutes, hours, seconds})\n        if (t < 0) {\n            clearInterval(this.x);\n            this.setState({ days: 0, minutes: 0, hours: 0, seconds: 0, time_up: \"Запуск состоялся!\" })\n        }\n    }\n\n    componentDidMount() {\n        const deadline = new Date(this.props.timeTillLaunch).getTime();\n        setInterval(this.count, 1000)\n        this.setState({...this.state, deadline: deadline})\n    }\n\n    render() {\n        const { days, seconds, hours, minutes, time_up } = this.state\n        return (\n            <div>\n                    {(seconds < 10)\n                    ? <p>{days}д: {hours}ч: {minutes}м: 0{seconds}с</p>\n                    : <p>{days}д: {hours}ч: {minutes}м: {seconds}с</p>\n                    }\n                    <strong>{time_up}</strong>\n            </div>\n        )\n    }\n}\n\nexport default Timer","import React, {useState, useEffect, createRef} from 'react'\nimport { Table, Tooltip, Modal, Button, Space, notification } from 'antd'\nimport Timer from '../Timer/Timer'\nimport 'moment/locale/ru'\nimport moment from 'moment'\nimport './Table.css'\nmoment.locale()\n\n\nconst { Column, ColumnGroup } = Table;\n\nconst launchStatus = {\n  1: 'Запланированы точные дата и время запуска',\n  2: 'Дата и время будут объявлены позже',\n  3: 'Запуск прошел успешно',\n  4: 'Неудачный запуск',\n  5: 'Незапланированная задержка',\n  6: 'В полете',\n  7: 'Во время запуска произошел частичный сбой',\n}\n\nconst columns = [\n  {\n    title: 'Название запуска',\n    dataIndex: 'RocketAndMissionName',\n    width: '30%',\n    align: 'center',\n  },\n  {\n    title: 'Дата запуска',\n    dataIndex: 'net',\n    align: 'center',\n    width: '25%',\n  },\n  {\n    title: 'Таймер',\n    dataIndex: 'timer',\n    align: 'center',\n  },\n  {\n    title: 'Площадка / Космодром',\n    dataIndex: 'location',\n    width: '30%',\n    align: 'center',\n  },\n]\n\nexport default ({ launches }) => {\n  const launchesWithTimer = launches.map(el => ({\n    rocketName: el.rocket.name,\n    location: <div>\n      {el.location.pads.map(els => (els.name.split(',')[0]))}<br />\n      {el.location.name.split(',')[0]}\n    </div>,\n    missionsName: el.missions.map(els => (els.name)),\n    RocketAndMissionName: <a >{el.name}</a>,\n    pads: el.location.pads.map(p => (p.name)),\n    net: <Tooltip title={<div><p style={{ textAlign: 'center' }}>Локальное время</p> <p style={{ textAlign: 'center' }}>{moment(el.net).locale('ru').format('LLL')}</p></div>}>{moment(el.net).utc(0).locale('ru').format('LLL z')}</Tooltip>,\n    status: launchStatus[el.status],\n    timer: <Timer timeTillLaunch={el.net} />\n  }))\n  // document.getElementById('hider').onclick = function() {\n  \n  return (\n    <div>\n      <Table\n        dataSource={launchesWithTimer}\n        pagination={false}\n        size=\"small\"\n        columns={columns}\n        bordered=\"true\"\n      />\n    </div>\n  )\n}","import React from 'react'\nimport {Table, Pagination} from 'antd'\nimport moment from 'moment'\nimport { LoadingOutlined } from '@ant-design/icons';\nimport 'moment/locale/ru'\nmoment.locale()\n\n\nconst launchStatus = {\n    1: 'Запланированы точные дата и время запуска',\n    2: 'Дата и время будут объявлены позже',\n    3: 'Запуск прошел успешно',\n    4: 'Неудачный запуск',\n    5: 'Незапланированная задержка',\n    6: 'В полете',\n    7: 'Во время запуска произошел частичный сбой',\n}\n\nconst columns = [\n    {\n        title: 'Название запуска',\n        dataIndex: 'RocketAndMissionName',\n        width: '30%',\n        align: 'center',\n      },\n      {\n        title: 'Дата запуска',\n        dataIndex: 'net',\n        align: 'center',\n        width: '25%',\n      },\n      {\n        title: 'Площадка / Космодром',\n        dataIndex: 'location',\n        width: '30%',\n        align: 'center',\n      },\n]\n\nexport default ({launches}) => {\n    const launchesWithTimer = launches.map(el => ({\n        RocketAndMissionName: el.name,\n        location: <div>\n                        {el.location.pads.map(els => (els.name.split(',')[0]))}<br/>\n                        {el.location.name.split(',')[0]}\n                  </div>,\n        net: moment(el.net).locale('ru').format('MMMM YYYY'),\n        status: launchStatus[el.status],\n        pads: el.location.pads.map(els => (els.name)),\n    }))\n    return (\n        <Table\n            dataSource={launchesWithTimer}\n            pagination={{ position: ['bottomCenter'], }}\n            size=\"small\"\n            columns={columns}\n            bordered=\"true\"\n        />\n    )\n}","import React from 'react'\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  Marker,\n} from \"react-simple-maps\"\nimport { Tooltip } from 'antd'\n\nconst geoUrl =\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\"\nconst markerOffset =  - 30\n\n// цвета маркеров\nconst launchStatus = {\n  1: 'Запланированы точные дата и время запуска',\n  2: 'Дата и время будут объявлены позже',\n  3: 'green',\n  4: 'red',\n  5: 'Незапланированная задержка',\n  6: 'В полете',\n  7: 'Во время запуска произошел частичный сбой',\n}\n\nconst MapChartt = ({ launches }) => {\n  const markers = launches.map(el => ({\n    rocketName: el.rocketName,\n    flightStatus: el.flightStatus,\n    coordinates: el.coordinates,\n    markerOffset: markerOffset,\n  }))\n\n  return (\n    <div>\n    <ComposableMap\n      projection=\"geoMercator\"\n      width=\"1800\"\n      height=\"600\"\n      className=\"MapChartStyle\"\n    >\n      <Geographies geography={geoUrl}>\n        {({ geographies }) =>\n          geographies.map(geo => (\n            <Geography\n              key={geo.rsmKey}\n              geography={geo}\n              fill=\"#EAEAEC\"\n              stroke=\"#D6D6DA\"\n            />\n          ))\n        }\n\n      </Geographies>\n      {markers.map(({ rocketName, flightStatus, coordinates, markerOffset  }) => (\n        <Marker on coordinates={coordinates}\n        className=\"MarkersSryle\"\n        >\n            <g\n              fill={launchStatus[flightStatus]}\n              stroke=\"none\"\n              strokeWidth=\"3\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              transform=\"translate(-12, -24)\"\n            >\n              <circle cx=\"12\" cy=\"10\" r=\"3\" />\n              <path d=\"M12 21.7C17.3 17 20 13 20 10a8 8 0 1 0-16 0c0 3 2.7 6.9 8 11.7z\" />\n            </g>\n            <text\n            textAnchor=\"middle\"\n            y={markerOffset}\n            style={{ fontFamily: \"system-ui\", fill: \"#5D5A6D\" }}\n          >\n            {rocketName}\n          </text>\n        </Marker>\n      )\n      )}\n    </ComposableMap>\n    </div>\n  )\n}\n\nexport default MapChartt\n","import React, { Component } from 'react'\nimport { Table, Button } from 'antd'\nimport FetchLaunchApi from '../LoadLaunchData/index'\n\n\n\n\nexport default () => {\n\n  return (\n    <div>\n      <Table\n        size=\"large\"\n      >\n      </Table>\n    </div>\n  )\n}\n\n// class Tabless extends Component {\n//   constructor(props) {\n//     super(props)\n//     this.state = {\n//       test: this.props.testim,\n//     }\n//   }\n//   render() {\n//     console.log('announcedLaunches', this.props.announcedLaunches);\n//     console.log('test', this.state.testim);\n    \n//     return (\n//       <div>\n//         <Table />\n//         <Button >Tabless</Button>\n//       </div>\n//     )\n//   }\n// }\n\n// export default Tabless","import React, { Component } from 'react'\nimport './SliderMapChart.css'\nimport { Slider, Switch } from 'antd'\nimport MapChartt from '../SliderMapChart/MapChart'\nimport moment from 'moment'\nimport 'moment/locale/ru'\n\nclass SliderMapChart extends Component {\n  constructor() {\n    super()\n    this.state = {\n      markersLaunches: null,\n      disabledSliderAndMap: false,\n    }\n  }\n\n  handleDisabledChange = disabledSliderAndMap => {\n    this.setState({ disabledSliderAndMap })\n    if (document.getElementById(\"slider\").hidden == false) {\n      document.getElementById(\"slider\").hidden = true\n    } else { document.getElementById(\"slider\").hidden = false }\n  }\n\n\n  render() {\n    const { disabledSliderAndMap } = this.state\n\n    const MARKERS = this.props.launches.map(el => ({\n      rocketName: el.rocket.name,\n      flightStatus: el.status,\n      coordinates: [el.location.pads.map(ele => (ele.longitude)), el.location.pads.map(ele => (ele.latitude))],\n      net: moment(el.net).utc(0).locale('ru').format('YYYY-MM-DD'),\n    }))\n\n    const MAX_VALUE = MARKERS.length - 1\n\n    if (this.state.markersLaunches == null) {\n      this.state.markersLaunches = [MARKERS[0]]\n    }\n\n\n    let markersChange = (value) => {\n\n      this.setState({ markersLaunches: [MARKERS[value]] })\n      tooltipFormat(value)\n    }\n\n    let markersChange2 = (value) => {\n\n      let count = 0\n      let newMarkers = []\n      this.setState({ markersLaunches: [] })\n      while (count < value) {\n        newMarkers.push(MARKERS[count])\n        count += 1\n      }\n      if (value == 0) {\n        this.setState({ markersLaunches: [MARKERS[0]] })\n      } else {\n        this.setState({ markersLaunches: newMarkers })\n      }\n      tooltipFormat(value)\n    }\n\n    let markersChange3 = (value) => {\n\n      let count = value[0]\n      let newMarkers = []\n      this.setState({ markersLaunches: [] })\n      while (count <= value[1]) {\n        newMarkers.push(MARKERS[count])\n        count += 1\n      }\n      \n      if (value[0] == 0 && value[1] == 0) {\n        this.setState({ markersLaunches: [MARKERS[0]] })\n      } else if (value[0] == value[1]) {\n        this.setState({ markersLaunches: [MARKERS[value[0]]] })\n      } else {\n        this.setState({ markersLaunches: newMarkers })\n      }\n      tooltipFormat(value[0])\n    }\n\n\n    // this.setState({markersLaunches: [...this.markersLaunches , ]})\n\n    function tooltipFormat(value) {\n      return MARKERS[value].net\n    }\n\n    return (\n      <div>\n        Slider: <Switch size=\"small\" checked={disabledSliderAndMap} onChange={this.handleDisabledChange} />\n        {/* <div id=\"slider\" > */}\n        <div id=\"slider\" hidden>\n          <div style={{ width: '50%' }}>\n            <div style={{ textAlign: 'center' }}>1 вариант</div>\n            <Slider\n              // range\n              id=\"slider\"\n              tipFormatter={tooltipFormat}\n              // tooltipVisible={true}\n              max={[MAX_VALUE]}\n              // min={[0]}\n              defaultValue={[0]}\n              onChange={markersChange}\n            /><br /><br /><br />\n            <div style={{ textAlign: 'center' }}>2 вариант</div>\n            <Slider\n              // range\n              id=\"slider\"\n              // tooltipVisible={true}\n              tipFormatter={tooltipFormat}\n              max={[MAX_VALUE]}\n              // min={[0]}\n              defaultValue={[0]}\n              onChange={markersChange2}\n            /><br /><br /><br />\n            <div style={{ textAlign: 'center' }}>3 вариант</div>\n            <Slider\n              range\n              id=\"slider\"\n              // tooltipVisible={true}\n              tipFormatter={tooltipFormat}\n              max={[MAX_VALUE]}\n              // min={[0]}\n              defaultValue={[0, 0]}\n              onChange={markersChange3}\n            />\n          </div>\n          {/* <Slider\n                    tipFormatter={tooltipFormat}\n                    range\n                    id=\"slider\"\n                    max={[MAX_VALUE]}\n                    defaultValue={[0, 0]}\n                    onChange={markersChange2}\n                /> */}\n          <MapChartt launches={this.state.markersLaunches} />\n        </div>\n      </div>\n    )\n\n  }\n}\nexport default SliderMapChart","import React, { Component, useState, useEffect } from 'react'\nimport moment from 'moment'\nimport { Button, Divider } from 'antd'\n\nimport MapLaunches from '../../../Launches/index'\nimport Tabless from '../TestTable/Table'\nimport LaunchTable from '../Table/Table'\n\n// следующие запуски с временем и датой\nconst URL = 'https://launchlibrary.net/1.4/launch/next/1000?status=1,2'\n\n// следующие запуски с датой(без времени)\nconst NEXT_URL = 'https://launchlibrary.net/1.4/launch/next/1000?status=2'\n\nconst LIMIT = 10000\nconst THIS_YEAR = moment().format('YYYY')\n\n// старые запуски\nlet oldUrl = `https://launchlibrary.net/1.4/launch?startdate=${moment(THIS_YEAR).format('YYYY-MM-DD')}&enddate=${moment().format('YYYY-MM-DD')}&limit=${LIMIT}&fields=name,net,location,status,rocket,mapURL,countryCode`\n\n// announcedLaunches: null,\n// scheduledLaunches: null,\n// finishedLaunches: null,\n\nexport function sayHi(user) {\n  alert(`Hello, ${user}!`);\n}\n\nexport function announcedLaunchesFetch(url, data) {\n  \n}\n\n// export class announcedLaunchesFetch extends Component {\n//   constructor(props){\n//     super(props)\n//     this.state = {\n//       announcedLaunches: null,\n//     }\n//   }\n//   fetchLaunches(url) {\n//     fetch(url)\n//       .then(response => response.json())\n//       .then(data => this.setState({ announcedLaunches: data }))\n//   }\n//   render (){\n//     return (\n//       <div>asdqweewq</div>\n//     )\n//   }\n\n// }\n\n// class FetchLaunchApi extends Component {\n//   constructor(props) {\n//     super(props)\n//     this.state = {\n//       announcedLaunches: null,\n//       scheduledLaunches: null,\n//       finishedLaunches: null,\n//       loading: false,\n//     }\n//     this.func = this.func.bind(this)\n//   }\n\n  // fetchLaunches(url) {\n  //   fetch(url)\n  //     .then(response => response.json())\n  //     .then(data => this.setState({ announcedLaunches: data }))\n  // }\n\n//   fetchOldLaunches(url) {\n//     this.setState({ loading: true })\n//     fetch(url)\n//       .then(response => response.json())\n//       .then(data => this.setState({ finishedLaunches: data, loading: false, }))\n//   }\n\n//   fetchNextLaunches(url) {\n//     fetch(url)\n//       .then(response => response.json())\n//       .then(data => this.setState({ scheduledLaunches: data }))\n//   }\n\n//   componentDidMount() {\n//     this.fetchLaunches(URL)\n//     this.fetchOldLaunches(oldUrl)\n//     this.fetchNextLaunches(NEXT_URL)\n//   }\n\n\n//   async validationOfDate(url) {\n//     this.setState({ loading: true })\n//     let response = await fetch(url)\n//     if (response.ok) { // если HTTP-статус в диапазоне 200-299 получаем тело ответа иначе Notification\n//       this.fetchLaunches(url)\n//     } else {\n//       this.setState({ loading: false })\n//     }\n//   }\n\n//   // launchDateButtonOnChange(date, dateString) {\n//   //   oldUrl = 'https://launchlibrary.net/1.4/launch?startdate=' + dateString[0] + '&enddate=' + dateString[1] + '&limit=' + LIMIT + '&fields=name,net,location,status,rocket,mapURL,countryCode'\n//   //   this.validationOfDate(oldUrl)\n//   // }\n\n//   func() {\n//     console.log(this.state.announcedLaunches)\n//     console.log(this.state.scheduledLaunches)\n//     console.log(this.state.finishedLaunches)\n//   }\n\n//   render() {\n//     const { announcedLaunches, scheduledLaunches, finishedLaunches, loading } = this.state\n//     return (\n//       <div>\n//         <Tabless laucnhes={finishedLaunches} />\n//         }\n//       </div>\n//     )\n//   }\n// }\n\n// export default FetchLaunchApi\n","import React, { useState, useEffect } from 'react'\nimport { notification } from 'antd'\nimport moment from 'moment'\nimport { Planets } from './Planets'\nconst THIS_YEAR = moment().format('YYYY')\nconst LIMIT = 10000\n\nexport const URL = 'https://launchlibrary.net/1.4/launch/next/1000?status=1,2'\nexport const URLS = 'https://launchlibrary.net/1.4/launch?startdate=2020-05-28&enddate=2020-05-28&limit=10000&fields=name,net,location,status,rocket,mapURL,countryCode'\n\n// следующие запуски с датой(без времени)\nconst NEXT_URL = 'https://launchlibrary.net/1.4/launch/next/1000?status=2'\n\n// старые запуски\nlet oldUrl = 'https://launchlibrary.net/1.4/launch?startdate=' + moment(THIS_YEAR).format('YYYY-MM-DD') + '&enddate=' + moment().format('YYYY-MM-DD') + '&limit=' + LIMIT + '&fields=name,net,location,status,rocket,mapURL,countryCode'\n\n// export function YesOrNoPreloader() {\n//   let preloader = true\n//   let a = 1\n//   let b = 2\n//   let c = 3\n\n//   async function fetchData1() {\n//     const res = await fetch(URLS)\n//     if (!res.ok) {\n//       preloader = true\n//     }\n//   }\n//   async function fetchData2() {\n//     const res = await fetch(NEXT_URL)\n//     if (!res.ok) {\n//       preloader = true\n//     }\n//   }\n//   async function fetchData3() {\n//     const res = await fetch(oldUrl)\n//     if (!res.ok) {\n//       preloader = true\n//     }\n//   }\n\n//   fetchData1()\n//   fetchData2()\n//   fetchData3()\n//   return [a, b, c]\n// }\n\n\nfunction YesOrNoPreloader () {\n  const [announcedLaunches, setAnnouncedLaunches] = useState(null)\n  const [scheduledLaunches, setScheduledLaunches] = useState(null)\n  const [finishedLaunches,  setFinishedLaunches]  = useState(null)\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    fetchLaunches(URL)\n    fetchNextLaunches(NEXT_URL)\n    fetchOldLaunches(oldUrl)\n  }, [])\n\n  function fetchLaunches(url) {\n    fetch(url)\n      .then(function(res){\n        if (res.ok) {\n          fetch(url)\n          .then(res => res.json())\n          .then(res => setAnnouncedLaunches(res))\n        }\n      })\n  }\n\n  function fetchNextLaunches(url) {\n    fetch(url)\n      .then(function(res){\n        if (res.ok) {\n          fetch(url)\n          .then(res => res.json())\n          .then(res => setScheduledLaunches(res))\n        }\n      })\n  }\n\n  function fetchOldLaunches(url) {\n    fetch(url)\n    .then(function(res){\n      if (res.ok) {\n        fetch(url)\n          .then(res => res.json())\n          .then(res => {setFinishedLaunches(res)})\n      }\n    })\n  }\n\n  return ([announcedLaunches, scheduledLaunches, finishedLaunches])\n}\n\n\n\nexport default YesOrNoPreloader\n\n\n// const YesOrNoPreloader = (loading) => {\n//   const [load, setLoading] = useState(loading)\n//   const [hasError, setErrors] = useState(false)\n\n//   useEffect(() => {\n//     async function fetchData1() {\n//       const res = await fetch(URL)\n//       if (!res.ok) {\n//         setErrors(true)\n//       }\n//     }\n//     async function fetchData2() {\n//       const res = await fetch(NEXT_URL)\n//       if (!res.ok) {\n//         setErrors(true)\n//       }\n//     }\n//     async function fetchData3() {\n//       const res = await fetch(oldUrl)\n//       if (!res.ok) {\n//         setErrors(true)\n//       }\n//     }\n//     fetchData1()\n//     fetchData2()\n//     fetchData3()\n//   }, [])\n\n//   if (hasError) {\n//     return false\n//   } else { return true }\n// }\n// export default YesOrNoPreloader","import React, { Component } from 'react'\nimport { Card, Avatar } from 'antd'\nimport './Card.css'\nimport moment from 'moment'\nimport 'moment/locale/ru'\nimport Timer from '../Timer/Timer'\nimport { EditOutlined, EllipsisOutlined, SettingOutlined } from '@ant-design/icons';\nconst { Meta } = Card;\n\nclass LaunchCard extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n\n    }\n  }\n\n\n  func() {\n    console.log('Привет!')\n  }\n\n  render() {\n    const { launches } = this.props\n    return (\n      <div className=\"card-layout\">\n        {launches.map(el => (\n          <Card\n            hoverable\n            className=\"card-grid\"\n            onClick={this.func}\n            cover={\n              <img\n                alt=\"example\"\n                src=\"https://images.pexels.com/photos/23769/pexels-photo.jpg?auto=compress&cs=tinysrgb&dpr=2&w=500\"\n              />\n            }\n          >\n            <Meta\n              avatar={<Avatar src=\"https://image.flaticon.com/icons/svg/2929/2929073.svg\" />}\n              title={el.rocket.name}\n              description={el.name.split('|')[1]}\n            /><br />\n              Дата запуска: {moment(el.net).utc(0).locale('ru').format('LLL z')}<br /><br />\n              <Timer timeTillLaunch={el.net} />\n          </Card>\n        ))}\n      </div>\n    )\n  }\n}\n\nexport default LaunchCard","import React, { Component, useState, useEffect } from 'react'\nimport {\n  Layout,\n  DatePicker,\n  Button,\n  Tooltip,\n  notification,\n  Divider,\n  Table,\n} from 'antd'\nimport {\n  GithubOutlined,\n  UpOutlined,\n  InfoCircleOutlined,\n  FrownOutlined,\n  DesktopOutlined,\n  PieChartOutlined,\n  FileOutlined,\n  TeamOutlined,\n  UserOutlined,\n} from '@ant-design/icons'\nimport 'antd/dist/antd.css'\nimport OldTable from '../Catalog/component/TableOld/TableOld'\nimport OldTable2 from '../Catalog/component/TableOld2/TableOld2'\nimport LaunchTable from \"../Catalog/component/Table/Table\"\nimport NextLaunchTable from '../Catalog/component/NextLaunchTable/NextLaunchTable'\nimport SliderMapChart from '../Catalog/component/SliderMapChart/SliderMapChart'\nimport '../Layout/index.css' // стандарт\nimport '../Layout/index.scss' // прыгающие квадраты\nimport moment from 'moment'\nimport {\n  animateScroll as scroll,\n  scroller\n} from 'react-scroll'\nimport MapChart from '../Catalog/component/MapChart/MapChart'\nimport { sayHi, announcedLaunchesFetch } from '../Catalog/component/LoadLaunchData'\nimport Planets from '../Catalog/component/TestTable/Planets'\nimport YesOrNoPreloader from '../Catalog/component/TestTable/exportFunc'\n\nimport LaunchCard from '../Catalog/component/Cards/OldCard'\nimport SweetAlert from 'sweetalert'\n\nconst { Content } = Layout\nconst LIMIT = 10000\nconst { RangePicker } = DatePicker\nconst THIS_YEAR = moment().format('YYYY')\n\n// следующие запуски с временем и датой\nexport const URL = 'https://launchlibrary.net/1.4/launch/next/1000?status=1,2'\n\n// следующие запуски с датой(без времени)\nexport const NEXT_URL = 'https://launchlibrary.net/1.4/launch/next/1000?status=2'\n\n// старые запуски\nexport let oldUrl = 'https://launchlibrary.net/1.4/launch?startdate=' + moment(THIS_YEAR).format('YYYY-MM-DD') + '&enddate=' + moment().format('YYYY-MM-DD') + '&limit=' + LIMIT + '&fields=name,net,location,status,rocket,mapURL,countryCode'\n\n\n\n// const modals = Modal.warning({\n//     content: `можно вывести стартовое сообщение!`,\n//     maskClosable: \"true\"\n// }\n// )\nconst notificationForInvalidDate = (placement) => {\n  notification.warning({\n    message: <strong> Похоже,что за выбранный период времени запусков нет </strong>,\n    placement,\n  })\n}\n\nconst notificationMessage = (message, placement) => {\n  notification.error({\n    message,\n    placement,\n  })\n}\n\nfunction disabledDate(current) {\n  return ((current && current > moment().endOf('day')) || (current && current < moment('1961-01-01').endOf('day')))\n}\n\nfunction scrollFunction() {\n  if (document.body.scrollTop > 500 || document.documentElement.scrollTop > 500) {\n    document.getElementById(\"myBtn\").style.display = \"block\"\n  } else {\n    document.getElementById(\"myBtn\").style.display = \"none\"\n  }\n}\nwindow.onscroll = function () { scrollFunction() };\n\n\nfunction hid() {\n  if (document.body.scrollTop > 500 || document.documentElement.scrollTop > 500) {\n    document.getElementById(\"myBtn\").style.display = \"block\"\n  } else {\n    document.getElementById(\"myBtn\").style.display = \"none\"\n  }\n}\n\n\nclass MapLaunches extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      launchData: null,\n      launchOldData: null,\n      NextlaunchData: null,\n      visible: false,\n      loading: false,\n      disabledSlider: false,\n      test: [],\n      show: false,\n    }\n    this.launchDateButtonOnChange = this.launchDateButtonOnChange.bind(this)\n    this.timeBeforeToShowMarkers = this.timeBeforeToShowMarkers.bind(this)\n  }\n  fetchLaunches(url) {\n    fetch(url)\n      .then(response => response.json())\n      .then(data => this.setState({ launchData: data }))\n  }\n\n  fetchOldLaunches(url) {\n    this.setState({ loading: true })\n    fetch(url)\n      .then(response => response.json())\n      .then(data => this.setState({ launchOldData: data, loading: false, }))\n  }\n\n  fetchNextLaunches(url) {\n    fetch(url)\n      .then(response => response.json())\n      .then(data => this.setState({ NextlaunchData: data }))\n  }\n\n  componentDidMount() {\n    this.fetchLaunches(URL)\n    this.fetchOldLaunches(oldUrl)\n    this.fetchNextLaunches(NEXT_URL)\n    // this.timeBeforeToShowMarkers()\n  }\n\n  handleDisabledChange = disabled => {\n    this.setState({ disabled })\n  }\n\n  showModal = () => {\n    this.setState({\n      visible: true,\n    })\n  }\n\n  handleOk = e => {\n    this.setState({\n      visible: false,\n    })\n  }\n\n  handleCancel = e => {\n    this.setState({\n      visible: false,\n    })\n  }\n\n  scrollToOldTable2() {\n    scroller.scrollTo('scroll-to-Oldtable2', {\n      duration: 800,\n      delay: 0,\n      smooth: 'easeInOutQuart'\n    })\n  }\n\n  async validationOfDate(url) {\n    this.setState({ loading: true })\n    let response = await fetch(url)\n    if (response.ok) { // если HTTP-статус в диапазоне 200-299 получаем новые данные иначе Notification\n      this.fetchOldLaunches(url)\n    } else {\n      notificationForInvalidDate('topRight')\n      this.setState({ loading: false })\n    }\n  }\n\n  launchDateButtonOnChange(date, dateString) {\n    oldUrl = `https://launchlibrary.net/1.4/launch?startdate=${dateString[0]}&enddate=${dateString[1]}&limit=${LIMIT}&fields=name,net,location,status,rocket,mapURL,countryCode`\n    this.validationOfDate(oldUrl)\n  }\n\n  timeBeforeToShowMarkers() {\n    let secondsToGo = 1\n\n    const timer = setInterval(() => {\n      secondsToGo -= 1\n    }, 1000);\n\n    setTimeout(() => {\n      clearInterval(timer)\n      this.func()\n    }, secondsToGo * 1000)\n\n  }\n\n  //  showMarkers () {\n  //   if (this.state.loading == false) {\n  //     let count = 0\n  //   const timer = setInterval(() => {\n  //     this.setState({test: [this.state.launchOldData.launches[count]]})\n  //     count++\n  //   }, 1000)\n\n  //   setTimeout(() => {\n  //     clearInterval(timer)\n  //     this.func()\n  //   }, count * 1000)\n  //   }\n  // }\n\n  func() {\n    let count = this.state.launchOldData.launches.length\n    const timer = setInterval(() => {\n      console.log(count)\n      count--\n      this.setState({ test: [this.state.launchOldData.launches[count]] })\n      console.log(this.state.test);\n\n    }, 1000)\n\n    setTimeout(() => {\n      clearInterval(timer)\n      // this.showMarkers()\n    }, count * 1000)\n  }\n\n\n  render() {\n    const { launchOldData, launchData, NextlaunchData, loading, disabled, isActive } = this.state\n\n    return (\n      <div>\n        {launchData && NextlaunchData && launchOldData\n        ?        <Content style={{ padding: '0 50px' }} >\n        <div className=\"site-layout-content\" >\n          <RangePicker className=\"RangePicker\"\n            defaultValue={[moment(THIS_YEAR), moment()]}\n            showToday={false, true}\n            onChange={this.launchDateButtonOnChange}\n            disabledDate={disabledDate}\n            allowClear={false}\n            style={{ margin: 10 }}\n          />\n          <Divider><h1 style={{ textAlign: 'center' }}>Обьявленные запуски</h1></Divider>\n          <LaunchTable launches={launchData.launches} />\n\n          <Divider className=\"next-launch-table\"><h1 style={{ textAlign: 'center' }}>Запланированные запуски</h1></Divider>\n                      <NextLaunchTable launches={NextlaunchData.launches} /> \n\n          <Divider className=\"next-launch-table\"><h1 style={{ textAlign: 'center' }}>Запланированные запуски</h1></Divider>\n          <NextLaunchTable launches={NextlaunchData.launches} />\n\n          <Divider><h1 style={{ textAlign: 'center' }}>Состоявшиеся запуски</h1></Divider>\n          <OldTable2 launches={launchOldData} loading={loading} />\n\n          <Button onClick={this.timeBeforeToShowMarkers} > ТЫК </Button>\n          <Tooltip title={<p > Здесь можно настроить период запусков </p>}\n            mouseEnterDelay={0.2}\n            mouseLeaveDelay={0.5}\n            placement=\"top\" >\n            <InfoCircleOutlined />\n          </Tooltip>\n          <MapChart launches={this.state.test} />\n          <Button onClick={() => this.setState({ show: true })}> show </Button>\n        </div>\n        <Button type=\"primary\"\n          shape=\"circle\"\n          icon={< UpOutlined />}\n          onClick={scroll.scrollToTop}\n          id=\"myBtn\"\n          title=\"Наверх!\"\n        />\n      </Content>\n:<div>пусто</div>\n        }\n\n      </div>\n    )\n  }\n}\n\nexport default MapLaunches","import React, { Component, useState, useEffect } from 'react'\nimport {\n  Layout,\n  DatePicker,\n  Button,\n  Tooltip,\n  notification,\n  Divider,\n  Table,\n} from 'antd'\nimport {\n  GithubOutlined,\n  UpOutlined,\n  InfoCircleOutlined,\n  FrownOutlined,\n  DesktopOutlined,\n  PieChartOutlined,\n  FileOutlined,\n  TeamOutlined,\n  UserOutlined,\n} from '@ant-design/icons'\nimport 'antd/dist/antd.css'\nimport OldTable from '../Catalog/component/TableOld/TableOld'\nimport OldTable2 from '../Catalog/component/TableOld2/TableOld2'\nimport LaunchTable from '../Catalog/component/Table/Table'\nimport NextLaunchTable from '../Catalog/component/NextLaunchTable/NextLaunchTable'\nimport SliderMapChart from '../Catalog/component/SliderMapChart/SliderMapChart'\nimport '../Layout/index.css' // стандарт\nimport '../Layout/index.scss' // прыгающие квадраты\nimport moment from 'moment'\nimport {\n  animateScroll as scroll, scroller\n} from 'react-scroll'\nimport MapChart from '../Catalog/component/MapChart/MapChart'\nimport YesOrNoPreloader from '../Catalog/component/TestTable/exportFunc'\n\nimport LaunchCard from '../Catalog/component/Cards/OldCard'\n\nconst { Content } = Layout\nconst LIMIT = 10000\nconst THIS_YEAR = moment().format('YYYY')\n\n// следующие запуски с временем и датой\nexport const URL = 'https://launchlibrary.net/1.4/launch/next/1000?status=1,2'\n\n// следующие запуски с датой(без времени)\nexport const NEXT_URL = 'https://launchlibrary.net/1.4/launch/next/1000?status=2'\n\n// старые запуски\nexport let oldUrl = 'https://launchlibrary.net/1.4/launch?startdate=' + moment(THIS_YEAR).format('YYYY-MM-DD') + '&enddate=' + moment().format('YYYY-MM-DD') + '&limit=' + LIMIT + '&fields=name,net,location,status,rocket,mapURL,countryCode'\n\nconst notificationForInvalidDate = (placement) => {\n  notification.warning({\n    message: <strong>Похоже, что за выбранный период времени запусков нет</strong>,\n    placement,\n  })\n}\n\n\nfunction HookWithData() {\n  const arr = YesOrNoPreloader()\n  const [announcedLaunches, setAnnouncedLaunches] = useState()\n  const [scheduledLaunches, setScheduledLaunches] = useState()\n  const [finishedLaunches,  setFinishedLaunches]  = useState()\n  useEffect(() => {\n    setAnnouncedLaunches(arr[0])\n    setScheduledLaunches(arr[1])\n    setFinishedLaunches (arr[2])\n  })\n// console.log(arr);\n\n  // const announcedLaunches = data0\n  // const scheduledLaunches = data1\n  // const finishedLaunches =  data2\n  console.log(announcedLaunches);\n  console.log(scheduledLaunches);\n  console.log(finishedLaunches);\n\n\n  if (announcedLaunches && scheduledLaunches && finishedLaunches) {\n    return (\n      <div>\n        <Button>CHECK</Button>\n        <Content style={{ padding: '0 50px' }}>\n          <div className=\"site-layout-content\">\n\n              <Divider><h1 style={{ textAlign: 'center' }}>Обьявленные запуски</h1></Divider>\n              <LaunchTable launches={announcedLaunches.launches} />\n\n              <Divider className=\"next-launch-table\"><h1 style={{ textAlign: 'center' }}>Запланированные запуски</h1></Divider>\n              <NextLaunchTable launches={scheduledLaunches.launches} />\n\n              <Divider><h1 style={{ textAlign: 'center' }}>Состоявшиеся запуски</h1></Divider>\n              <OldTable2 launches={finishedLaunches} />\n\n          </div>\n          <Button\n              type=\"primary\"\n              shape=\"circle\"\n              icon={<UpOutlined />}\n              onClick={scroll.scrollToTop}\n              id=\"myBtn\"\n              title=\"Наверх!\"\n            />\n        </Content>\n\n      </div>\n    )\n  } else return (<div></div>)\n}\n\nexport default HookWithData\n","import React, { Component } from 'react'\n\nclass Menu extends Component {\n    state = { isActive: false };\n\n    wrapper = React.createRef();\n\n    // componentDidMount() {\n    //   this.removeOutsideClickListener();\n    // }\n\n    addOutsideClickListener() {\n        document.addEventListener('mousemove', this.handleDocumentClick);\n        console.log('mousemove');\n\n    }\n\n    removeOutsideClickListener() {\n        document.removeEventListener('mousemove', this.handleDocumentClick);\n        console.log('mouseout');\n    }\n\n    onShow() {\n        this.addOutsideClickListener();\n    }\n\n    onHide() {\n        this.removeOutsideClickListener();\n    }\n\n    onClickOutside() {\n        this.setState({ isActive: false });\n    }\n\n    handleDocumentClick = e => {\n        if (this.wrapper.current && !this.wrapper.current.contains(e.target)) {\n            this.onClickOutside();\n        }\n    };\n\n    toggleMenu = () => {\n        this.setState(\n            prevState => ({ isActive: !prevState.isActive }),\n            () => {\n                this.state.isActive ? this.onShow() : this.onHide();\n            },\n        );\n    };\n\n    render() {\n        const { isActive } = this.state;\n\n        return ( <div ref = { this.wrapper } >\n            <button onClick = { this.toggleMenu } > MENU < /button> {isActive && ( < ul ><\n                    li > qwe < /li> <\n                    li > asd < /li> <\n                    li > zxc < /li> <\n                    /ul>\n                )\n            } <\n            /div>\n        )\n    }\n}\n\nexport default Menu","import React, { Component, useState, useEffect } from 'react'\nimport {\n  Layout,\n  DatePicker,\n  Button,\n  Tooltip,\n  notification,\n  Divider,\n  Table,\n} from 'antd'\nimport {\n  GithubOutlined,\n  UpOutlined,\n  InfoCircleOutlined,\n  FrownOutlined,\n  DesktopOutlined,\n  PieChartOutlined,\n  FileOutlined,\n  TeamOutlined,\n  UserOutlined,\n} from '@ant-design/icons'\nimport 'antd/dist/antd.css'\nimport OldTable from '../Catalog/component/TableOld/TableOld'\nimport OldTable2 from '../Catalog/component/TableOld2/TableOld2'\nimport LaunchTable from '../Catalog/component/Table/Table'\nimport NextLaunchTable from '../Catalog/component/NextLaunchTable/NextLaunchTable'\nimport SliderMapChart from '../Catalog/component/SliderMapChart/SliderMapChart'\nimport '../Layout/index.css' // стандарт\nimport '../Layout/index.scss' // прыгающие квадраты\nimport moment from 'moment'\nimport {\n  animateScroll as scroll, scroller\n} from 'react-scroll'\nimport MapChart from '../Catalog/component/MapChart/MapChart'\nimport { sayHi, announcedLaunchesFetch } from '../Catalog/component/LoadLaunchData'\nimport Menu from '../Catalog/component/TestTable/Menu'\nimport Planets from '../Catalog/component/TestTable/Planets'\n\nimport LaunchCard from '../Catalog/component/Cards/OldCard'\nimport { css } from 'styled-components'\n\nconst { Content } = Layout\nconst { RangePicker } = DatePicker\nconst LIMIT = 10000\nconst THIS_YEAR = moment().format('YYYY')\n\n// следующие запуски с временем и датой\nexport const URL = 'https://launchlibrary.net/1.4/launch/next/1000?status=1,2'\n\n// следующие запуски с датой(без времени)\nexport const NEXT_URL = 'https://launchlibrary.net/1.4/launch/next/1000?status=2'\n\n// старые запуски\nexport let oldUrl = 'https://launchlibrary.net/1.4/launch?startdate=' + moment(THIS_YEAR).format('YYYY-MM-DD') + '&enddate=' + moment().format('YYYY-MM-DD') + '&limit=' + LIMIT + '&fields=name,net,location,status,rocket,mapURL,countryCode'\n\nconst notificationForInvalidDate = (placement) => {\n  notification.warning({\n    message: <strong>Похоже, что за выбранный период времени запусков нет</strong>,\n    //   description: <strong>За выбранный период времени запусков нет!</strong>,\n    placement,\n  })\n}\n\nfunction scrollFunction() {\n  if (document.body.scrollTop > 500 || document.documentElement.scrollTop > 500) {\n    document.getElementById(\"myBtn\").style.display = \"block\"\n  } else {\n    document.getElementById(\"myBtn\").style.display = \"none\"\n  }\n}\nwindow.onscroll = function () { scrollFunction() };\n\nfunction disabledDate(current) {\n  return ((current && current > moment().endOf('day')) || (current && current < moment('1961-01-01').endOf('day')))\n}\n\n\nfunction HookFunction() {\n  const [announcedLaunches, setAnnouncedLaunches] = useState(null)\n  const [scheduledLaunches, setScheduledLaunches] = useState(null)\n  const [finishedLaunches, setFinishedLaunches] = useState(null)\n  const [test, setTest] = useState([])\n  const [count, setCount] = useState(0);\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    fetchLaunches(URL)\n    fetchNextLaunches(NEXT_URL)\n    fetchOldLaunches(oldUrl)\n  }, [])\n\n  function fetchLaunches(url) {\n    fetch(url)\n      .then(res => res.json())\n      .then(res => setAnnouncedLaunches(res))\n  }\n\n  function fetchNextLaunches(url) {\n    fetch(url)\n      .then(res => res.json())\n      .then(res => setScheduledLaunches(res))\n  }\n\n  function fetchOldLaunches(url) {\n    setLoading(true)\n    fetch(url)\n      .then(res => res.json())\n      .then(res => setFinishedLaunches(res), setLoading(false))\n  }\n\n  function validationOfDate(url) {\n    setLoading(true)\n    fetch(url)\n      .then(function (res) {\n        if (res.ok) {\n          fetchOldLaunches(url)\n        } else {\n          notificationForInvalidDate('topRight')\n          setLoading(false)\n        }\n      })\n  }\n\n  function launchDateButtonOnChange(date, dateString) {\n    oldUrl = `https://launchlibrary.net/1.4/launch?startdate=${dateString[0]}&enddate=${dateString[1]}&limit=${LIMIT}&fields=name,net,location,status,rocket,mapURL,countryCode`\n    validationOfDate(oldUrl)\n  }\n\n  if (announcedLaunches && scheduledLaunches && finishedLaunches) {\n    function timeBeforeToShowMarkers() {\n      let secondsToGo = 1\n      console.log(finishedLaunches.launches[0])\n      const timer = setInterval(() => {\n        secondsToGo -= 1\n      }, 1000);\n\n      setTimeout(() => {\n        clearInterval(timer)\n        func()\n      }, secondsToGo * 1000)\n\n    }\nfunction n () {\n  setTest([finishedLaunches.launches[0]])\n}\n    function showMarkers() {\n      let count = 0\n      const timer = setInterval(() => {\n        setTest([finishedLaunches.launches[finishedLaunches.launches.length - 1]])\n        count++\n      }, 2000)\n\n      setTimeout(() => {\n        clearInterval(timer)\n        func()\n      }, count * 2000)\n    }\n\n    function func() {\n      let count = finishedLaunches.launches.length - 1\n      const timer = setInterval(() =>{\n        count--\n        setTest([finishedLaunches.launches[count]])\n      }, 2000)\n\n      setTimeout(() => {\n        clearInterval(timer)\n        showMarkers()\n      }, count * 2000)\n    }\n    return (\n      <div>\n        {console.log(test)}\n        <Content style={{ padding: '0 50px' }}>\n          <div className=\"site-layout-content\">\n            <div>\n              <p>Вы кликнули {count} раз(а)</p>\n              <button onClick={() => setCount(count + 1)}>\n                Нажми на меня\n       </button><button onClick={() => setCount(0)}>\n                Нажми на меня\n       </button>\n            </div>\n\n            {/* <Divider><h1 style={{ textAlign: 'center' }}>Обьявленные запуски</h1></Divider>\n            <LaunchTable launches={announcedLaunches.launches} />\n\n            <Divider className=\"next-launch-table\"><h1 style={{ textAlign: 'center' }}>Запланированные запуски</h1></Divider>\n            <NextLaunchTable launches={scheduledLaunches.launches} /> */}\n\n            <Divider><h1 style={{ textAlign: 'center' }}>Состоявшиеся запуски</h1></Divider>\n            <RangePicker className=\"RangePicker\"\n              defaultValue={[moment(THIS_YEAR), moment()]}\n              showToday={false, true}\n              onChange={launchDateButtonOnChange}\n              disabledDate={disabledDate}\n              allowClear={false}\n              style={{ margin: 10 }}\n            />\n            <Tooltip title={<p > Здесь можно настроить период запусков </p>}\n              mouseEnterDelay={0.2}\n              mouseLeaveDelay={0.5}\n              placement=\"top\" >\n              <InfoCircleOutlined />\n            </Tooltip>\n\n            <Button onClick={timeBeforeToShowMarkers} > ТЫК </Button>\n            <MapChart launches={test} />\n\n            <OldTable2 launches={finishedLaunches.launches} loading={loading} />\n          </div>\n          <Button\n            type=\"primary\"\n            shape=\"circle\"\n            icon={<UpOutlined />}\n            onClick={scroll.scrollToTop}\n            id=\"myBtn\"\n            title=\"Наверх!\"\n          />\n        </Content>\n\n      </div>\n    )\n  } else return (<div></div>)\n}\n\nexport default HookFunction\n","import React, { Component } from 'react'\nimport {\n  Layout,\n  Menu,\n} from 'antd'\nimport {\n  GithubOutlined,\n} from '@ant-design/icons'\nimport 'antd/dist/antd.css'\nimport './index.css' // стандарт\nimport './index.scss' // прыгающие квадраты\nimport {\n  Switch,\n  Route,\n  NavLink\n} from \"react-router-dom\";\nimport MapLaunches from '../Launches'\nimport HookWithData from '../Launches/HookWithData'\nimport Tabless from '../Catalog/component/TestTable/Table'\nimport Hook from '../Launches/Hook'\n\n\nconst { Header, Content, Footer, Sider } = Layout\nconst { SubMenu } = Menu\nlet preloader = false\n// console.log(FetchLaunch);\n//<HookWithData data0 = {uploadedData[0]} data1 = {uploadedData[1]} data2 = {uploadedData[2]}/>\n\nclass LayoutContainer extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n\n    }\n  }\n  render() {\n    return (\n      <div>\n        <Layout id=\"layout\">\n            <Header>\n              <div className=\"logo\"></div>\n              <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['3']} style={{ textAlign: 'right' }}>\n                <Menu.Item key=\"1\"><NavLink to=\"/\">         Приветсвие    </NavLink></Menu.Item>\n                <Menu.Item key=\"2\"><NavLink to=\"/Table\">    Cтатистика    </NavLink></Menu.Item>\n                <Menu.Item key=\"3\"><NavLink to=\"/Launches\"> Запуски       </NavLink></Menu.Item>\n              </Menu>\n            </Header>\n\n            <Switch>\n              <Route exact path='/' />\n              <Route exact path='/Table' component={Tabless} />\n              <Route exact path = '/Launches' component = {Hook} />\n              {/* <Route exact path='/Launches' component={MapLaunches} /> */}\n            </Switch>\n\n            <Footer className=\"footer\">\n              Design © 2020 <br></br>\n              <GithubOutlined />\n              <a href=\"https://github.com/SShaposhnik/global-launches-app\" target=\"_blank\"> Github</a>\n            </Footer>\n          </Layout>\n\n      </div>\n    )\n  }\n}\n\nexport default LayoutContainer\n","import React from 'react'\nimport './App.css';\nimport LayoutContainer from './containers/Layout/index'\nimport './containers/Layout/index.scss'\nimport { BrowserRouter } from 'react-router-dom'\nimport YesOrNoPreloader from './containers/Catalog/component/TestTable/exportFunc'\nimport HookWithData from './containers/Launches/HookWithData'\n\n\nfunction App() {\n  let uploadedData = YesOrNoPreloader()\n  \n  return (\n    <div className=\"App\">\n      {uploadedData[0] && uploadedData[1] && uploadedData[2]\n        ? <div>\n          {/* <HookWithData data0 = {uploadedData[0]} data1 = {uploadedData[1]} data2 = {uploadedData[2]}/> */}\n            <BrowserRouter>\n              <LayoutContainer />\n            </BrowserRouter>\n          </div>\n        : <div id=\"hellopreloader\">\n            <div id=\"hellopreloader_preload\">\n              <div className=\"container\">\n                <div className=\"element\"></div>\n                <div className=\"element\"></div>\n                <div className=\"element\"></div>\n                <div className=\"element\"></div>\n                <div className=\"element\"></div>\n              </div>\n            </div>\n          </div>\n      }\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport './containers/Layout/index.scss'\nimport HookFunction from './containers/Launches/Hook'\nimport HookWithData from './containers/Launches/HookWithData'\n\n  ReactDOM.render(\n    <App />,\n    // <HookFunction />,\n    document.getElementById('root')\n  )"],"sourceRoot":""}