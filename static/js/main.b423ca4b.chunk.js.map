{"version":3,"sources":["catalog/images/earth.svg","catalog/images/satellite2.svg","catalog/images/alien.svg","catalog/images/mars.svg","catalog/images/comet.svg","catalog/images/meteor.svg","catalog/images/satellite4.svg","catalog/images/stars.svg","catalog/images/cloud.svg","catalog/images/moon.svg","catalog/images/spaceship.svg","catalog/images/rocket.svg","catalog/component/MapChart.js","catalog/component/Timer.js","catalog/component/OldCard.js","catalog/component/FinishedLaunches.js","catalog/component/AnnouncedLaunches.js","catalog/component/ScheduledLaunches.js","catalog/component/Launches.js","catalog/component/HomePage.js","catalog/component/Layout.js","App.js","index.js"],"names":["module","exports","LAUNCH_STATUS","1","2","3","4","5","6","7","MapChart","launches","flag","tableData","markers","console","log","map","el","RocketAndMissionNames","name","rocketName","status","statusNumber","markerOffset","coordinates","longitude","latitude","padsMapURL","padsWikiURL","rocketwikiURL","rocket","location","pads","els","mapURL","wikiURL","projection","width","height","className","geography","geographies","geo","key","rsmKey","fill","stroke","on","overlayClassName","title","href","target","placement","mouseLeaveDelay","r","textAnchor","y","style","fontFamily","split","Timer","props","state","days","minutes","hours","seconds","time_up","deadline","count","bind","now","Date","getTime","t","this","Math","floor","setState","clearInterval","x","timeTillLaunch","setInterval","Component","Meta","Card","moment","locale","Table","Column","FinishedTable","showModal","visible","handleOk","e","handleCancel","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","ref","node","searchInput","placeholder","value","onChange","onPressEnter","handleSearch","marginBottom","display","type","onClick","icon","SearchOutlined","size","handleReset","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","setTimeout","select","render","text","searchedColumn","highlightStyle","backgroundColor","searchWords","searchText","autoEscape","textToHighlight","markersLaunches","show","columns","align","onCell","selectedRows","selectedRowKeys","event","filters","statusText","indexOf","countryCode","loading","oldLaunch","id","RocketAndMissionName","net","textAlign","format","utc","locationWithoutPads","spaceortName","PadsMapURL","url","PadsWikiURL","RocketWikiURL","reverse","dataSource","pagination","position","defaultCurrent","simple","pageSizeOptions","filterReset","ClearOutlined","filterConfirm","CheckOutlined","centered","onOk","onCancel","footer","closable","ColumnGroup","launchStatus","launchesWithTimer","missionsName","missions","p","timer","bordered","showSizeChanger","showQuickJumper","hideOnSinglePage","Layout","Content","Footer","RangePicker","DatePicker","THIS_YEAR","URLForFinishedLaunch","disabledDate","current","endOf","window","addEventListener","MapLaunches","validationOf","testArr","fetch","then","res","json","arr","AnnouncedData","ScheduledData","FinishedData","disabledSlider","dataArrayForMarkers","launchDateButtonOnChange","timeBeforeToShowMarkers","func","scrollToTop","scroll","ok","response","data","fetchAnnounced","fetchScheduled","fetchFinished","notification","warning","message","date","dateString","validationOfDate","secondsToGo","length","pages","parallax","offset","speed","opacity","marginTop","description","showIcon","pointerEvents","src","Satellite2","marginLeft","Alien","Earth","Cloud","Satellite4","marginRight","Comet","Upi","alignItems","justifyContent","Mars","defaultValue","showToday","allowClear","margin","mouseEnterDelay","InfoCircleOutlined","shape","UpOutlined","scrollTo","minHeight","LoadingOutlined","fontSize","wrap","HomePage","factor","backgroundImage","backgroundSize","React","onscroll","document","body","scrollTop","documentElement","getElementById","Header","LayoutContainer","zIndex","theme","mode","Item","HomeOutlined","to","RocketOutlined","exact","path","component","App","ReactDOM"],"mappings":"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","file":"static/js/main.b423ca4b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/earth.c046ac84.svg\";","module.exports = __webpack_public_path__ + \"static/media/satellite2.bb5b6803.svg\";","module.exports = __webpack_public_path__ + \"static/media/alien.9c05602d.svg\";","module.exports = __webpack_public_path__ + \"static/media/mars.cf923732.svg\";","module.exports = __webpack_public_path__ + \"static/media/comet.60dacd2c.svg\";","module.exports = __webpack_public_path__ + \"static/media/meteor.ae2d9c66.svg\";","module.exports = __webpack_public_path__ + \"static/media/satellite4.021c26fd.svg\";","module.exports = __webpack_public_path__ + \"static/media/stars.5546c7c6.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloud.305b7b7b.svg\";","module.exports = __webpack_public_path__ + \"static/media/moon.48fb74a2.svg\";","module.exports = __webpack_public_path__ + \"static/media/spaceship.a981e12e.svg\";","module.exports = __webpack_public_path__ + \"static/media/rocket.eb5f3344.svg\";","import React from 'react'\n\nimport { ComposableMap, Geographies, Geography, Marker, } from \"react-simple-maps\"\nimport { Tooltip } from 'antd'\n\nimport '../css/index.css'\n\nconst geoUrl =\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\"\nconst MARKER_OF_SET = - 30\n\n// цвета маркеров\nconst LAUNCH_STATUS = {\n  1: 'Запланированы точные дата и время запуска',\n  2: 'Дата и время будут объявлены позже',\n  3: '#36d325',\n  4: '#791a1f',\n  5: 'Незапланированная задержка',\n  6: 'В полете',\n  7: 'Во время запуска произошел частичный сбой',\n}\n\nconst MapChart = ({ launches, flag, tableData }) => {\n  let markers = []\n  \n  if (launches == null && tableData == null) {\n    console.log('Markers not found!');\n  } else if (flag) {\n    markers = tableData.map(el => ({\n      RocketAndMissionNames: el.name,\n      rocketName: el.rocketName,\n      status: el.statusNumber,\n      markerOffset: MARKER_OF_SET,\n      coordinates: [el.longitude, el.latitude],\n      padsMapURL: el.padsMapURL,\n      padsWikiURL: el.padsWikiURL,\n      rocketwikiURL: el.rocketwikiURL,\n      latitude: el.latitude,\n      longitude: el.longitude,\n    }))\n  } else {\n    markers = launches.map(el => ({\n      RocketAndMissionNames: el.name,\n      rocketName: el.rocket.name,\n      status: el.status,\n      markerOffset: MARKER_OF_SET,\n      coordinates: [el.location.pads.map(els => (els.longitude)), el.location.pads.map(els => (els.latitude))],\n      padsMapURL: el.location.pads.map(els => (els.mapURL)),\n      padsWikiURL: el.location.pads.map(els => (els.wikiURL)),\n      rocketwikiURL: el.rocket.wikiURL,\n      latitude: el.location.pads.map(els => (els.latitude)),\n      longitude: el.location.pads.map(els => (els.longitude)),\n    }))\n  }\nconsole.log(markers);\n\n  return (\n    <ComposableMap\n      projection=\"geoMercator\"\n      width=\"800\"\n      height=\"600\"\n      className=\"MapChartStyle\"\n    >\n      <Geographies geography={geoUrl}>\n        {({ geographies }) =>\n          geographies.map(geo => (\n            <Geography\n              key={geo.rsmKey}\n              geography={geo}\n              fill=\"#AAA8B1\"\n              stroke=\"#D6D6DA\"\n            />\n          ))\n        }\n      </Geographies>\n      {markers.map(({ rocketName, status, coordinates, markerOffset, padsWikiURL, rocketwikiURL, latitude, longitude, RocketAndMissionNames }) => (\n        <Marker on coordinates={coordinates}\n          className=\"MarkersSryle\"\n        >\n          <Tooltip\n            overlayClassName=\"tooltipInMapChart\"\n            title={\n              <div>\n                <a href={\"http://maps.google.com/maps?q=\" + latitude + \",\" + longitude} target=\"_blank\">Google Maps</a><br></br>\n                <a href={padsWikiURL} target=\"_blank\">Космодром вики</a><br></br>\n                <a href={rocketwikiURL} target=\"_blank\">Ракета вики</a><br></br>\n              </div>\n\n            }\n            placement=\"bottom\"\n            mouseLeaveDelay=\"0.3\"\n          >\n            <circle r={5} fill={LAUNCH_STATUS[status]} className='testii'/>\n          </Tooltip>\n          <text\n            textAnchor=\"middle\"\n            y={markerOffset}\n            style={{ fontFamily: \"system-ui\", fill: \"#5D5A6D\" }}\n          >\n            {RocketAndMissionNames.split('|')[0]}\n          </text>\n        </Marker>\n      )\n      )}\n    </ComposableMap>\n  )\n}\n\nexport default MapChart\n","import React, { Component } from 'react'\n\n\nclass Timer extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      days: 0,\n      minutes: 0,\n      hours: 0,\n      seconds: 0,\n      time_up: \"\",\n      deadline: null,\n    }\n    this.count = this.count.bind(this)\n  }\n\n  count() {\n    let now = new Date().getTime();\n    let t = this.state.deadline - now;\n    let days = Math.floor(t / (1000 * 60 * 60 * 24));\n    let hours = Math.floor((t % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n    let minutes = Math.floor((t % (1000 * 60 * 60)) / (1000 * 60));\n    let seconds = Math.floor((t % (1000 * 60)) / 1000);\n    this.setState({ days, minutes, hours, seconds })\n    if (t < 0) {\n      clearInterval(this.x);\n      this.setState({ days: 0, minutes: 0, hours: 0, seconds: 0, time_up: \"Запуск состоялся!\" })\n    }\n  }\n\n  componentDidMount() {\n    const deadline = new Date(this.props.timeTillLaunch).getTime();\n    setInterval(this.count, 1000)\n    this.setState({ ...this.state, deadline: deadline })\n  }\n\n  render() {\n    const { days, seconds, hours, minutes, time_up } = this.state\n    return (\n      <div>\n        {(seconds < 10)\n          ? <p>{days}д: {hours}ч: {minutes}м: 0{seconds}с</p>\n          : <p>{days}д: {hours}ч: {minutes}м: {seconds}с</p>\n        }\n        <strong>{time_up}</strong>\n      </div>\n    )\n  }\n}\n\nexport default Timer","import React, { Component } from 'react'\n\nimport { Card, Avatar } from 'antd'\nimport moment from 'moment'\nimport 'moment/locale/ru'\nimport { EditOutlined, EllipsisOutlined, SettingOutlined } from '@ant-design/icons'\n\nimport Timer from './Timer'\n\nimport '../css/index.css'\n\nconst { Meta } = Card\n\nclass LaunchCard extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n\n    }\n  }\n\n\n  func() {\n    console.log('Привет!')\n  }\n\n  render() {\n    const { launches } = this.props\n    console.log(launches);\n    \n    return (\n      <div className=\"card-layout\">\n          <Card\n            hoverable\n            className=\"card-grid\"\n            onClick={this.func}\n            cover={\n              <img\n                alt=\"example\"\n                src=\"https://images.pexels.com/photos/23769/pexels-photo.jpg?auto=compress&cs=tinysrgb&dpr=2&w=500\"\n              />\n            }\n          >\n            <Meta\n              // avatar={<Avatar src=\"https://image.flaticon.com/icons/svg/2929/2929073.svg\" />}\n              title={this.props.launches.rocket.name}\n              description={this.props.launches.name.split('|')[1]}\n            /><br />\n              Дата запуска: {moment(this.props.launches.net).utc(0).locale('ru').format('LLL z')}<br /><br />\n            <Timer timeTillLaunch={this.props.launches.net} />\n          </Card>\n      </div>\n    )\n  }\n}\n\nexport default LaunchCard","import React, { Component } from 'react'\n\nimport { Table, Modal, Tooltip, Input, Button, Space } from 'antd'\nimport { ClearOutlined, CheckOutlined, SearchOutlined, SettingFilled } from '@ant-design/icons'\nimport {Alien} from '../images'\nimport Highlighter from 'react-highlight-words'\nimport moment from 'moment'\nimport 'moment/locale/ru'\nimport swal from '@sweetalert/with-react'\n\nimport MapChart from './MapChart'\nimport LaunchCard from './OldCard'\nimport '../css/index.css'\n\nmoment.locale()\n\nconst { Column } = Table\nconst LAUNCH_STATUS = {\n  1: 'Запуск скоро состоится',\n  2: 'Дата и время будут объявлены позже',\n  3: 'Успешно',\n  4: 'Неудача',\n  5: 'Задержка',\n  6: 'В полете',\n  7: 'Произошел сбой',\n}\n\nconst COUNTRY = {\n  USA: 'США',\n  CHN: 'Китай',\n  KAZ: 'Казахстан',\n  IRN: 'Иран',\n  RUS: 'Россия',\n  GUF: 'Французская Гвиана',\n  JPN: 'Япония',\n  NZL: 'Новая Зеландия',\n  IND: 'Индия',\n  UNK: 'Великобритания',\n}\n\nclass FinishedTable extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      markersLaunches: null,\n      searchText: '',\n      searchedColumn: '',\n      show: false,\n    }\n  }\n\n  showModal = () => {\n    this.setState({\n      visible: true,\n    })\n  }\n\n  handleOk = e => {\n    this.setState({\n      visible: false,\n    })\n  }\n\n  handleCancel = e => {\n    this.setState({\n      visible: false,\n    })\n  }\n\n  getColumnSearchProps = dataIndex => ({\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={node => {\n            this.searchInput = node;\n          }}\n          placeholder={`${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\n        />\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Поиск\n          </Button>\n          <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n            Сбросить\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n    onFilter: (value, record) => record.name.toString().toLowerCase().includes(value.toLowerCase()),\n    onFilterDropdownVisibleChange: visible => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n    render: text =>\n      this.state.searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n          searchWords={[this.state.searchText]}\n          autoEscape\n          textToHighlight={text.toString()}\n        />\n      ) : (\n          text\n        ),\n  })\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm()\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: toString(dataIndex),\n    })\n  }\n\n  handleReset = clearFilters => {\n    clearFilters()\n    this.setState({ searchText: '' })\n  }\n\n  render() {\n    const columns = [\n      {\n        title: \"Название запуска\",\n        dataIndex: \"RocketAndMissionName\",\n        className: 'Name-launch-style',\n        width: '30%',\n        align: 'left',\n        ...this.getColumnSearchProps('Название запуска'),\n        onCell: (selectedRows, selectedRowKeys) => {\n          // selectedRowKeys -> number\n          // selectedRows    -> data\n          return {\n            onClick: event => {\n              // console.log(selectedRowKeys);\n              // console.log(selectedRows);\n              // this.setState({ markersLaunches: [selectedRows] })\n              this.setState({ markersLaunches: [selectedRows] })\n              this.showModal()\n              // swal (\n              //   <div>\n              //     {/* <h1>{this.props.launches[0].name}</h1>\n              //     <p>Время: {this.props.launches[0].net}</p>\n              //     <p>Космодром: {this.props.launches[0].location.name}</p>\n              //     <img src={Alien} style={{width: '50%'}}/> */}\n              //     <LaunchCard launches={this.props.launches[0]} />\n              //     {/* <MapChart tableData={this.state.markersLaunches} flag={true} /> */}\n              //   </div>, \n              //   {button: false,}\n              // )\n            },\n          }\n        }\n      },\n      {\n        title: \"Дата запуска\",\n        dataIndex: \"net\",\n        align: 'center',\n        width: '25%',\n\n      },\n      {\n        title: \"Статус\",\n        dataIndex: \"statusText\",\n        align: 'center',\n        filters: [\n          {\n            text: 'Успешно',\n            value: 'Успешно',\n          },\n          {\n            text: 'Неудача',\n            value: 'Неудача',\n          },\n          {\n            text: 'Произошел сбой',\n            value: 'Произошел сбой',\n          },\n        ],\n        onFilter: (value, record) => { return record.statusText.indexOf(value) === 0 }\n      },\n      {\n        title: \"Площадка / Космодром\",\n        dataIndex: \"location\",\n        width: '30%',\n        align: 'center',\n        filters: [\n          {\n            text: 'США',\n            value: 'USA',\n          },\n          {\n            text: 'Китай',\n            value: 'CHN',\n          },\n          {\n            text: 'Казахстан',\n            value: 'KAZ',\n          },\n          {\n            text: 'Иран',\n            value: 'IRN',\n          },\n          {\n            text: 'Россия',\n            value: 'RUS',\n          },\n          {\n            text: 'Французская Гвиана',\n            value: 'GUF',\n          },\n          {\n            text: 'Япония',\n            value: 'JPN',\n          },\n          {\n            text: 'Новая Зеландия',\n            value: 'NZL',\n          },\n          {\n            text: 'Индия',\n            value: 'IND',\n          },\n          {\n            text: 'Великобритания',\n            value: 'UNK',\n          },\n          // {\n          //   text: 'Фильтр по космодромам',\n          //   value: 'Submenu',\n          //   children: [\n          //     {\n          //       text: 'Cape Canaveral',\n          //       value: 'Cape Canaveral',\n          //     },\n          //     {\n          //       text: 'Jiuquan',\n          //       value: 'Jiuquan',\n          //     },\n          //   ],\n          // }\n        ],\n        onFilter: (value, record) => { return record.countryCode.indexOf(value) === 0 },\n      },\n    ]\n\n    const loading = this.props.loading\n\n    const oldLaunch = this.props.launches.map(el => ({\n      key: el.id,\n    RocketAndMissionName: <a>{el.name}</a>,\n      name: el.name,\n      rocket: el.rocket.name,\n      net: <Tooltip title={\n        <div>\n          <p style={{ textAlign: 'center' }}>Локальное время</p>\n          <p style={{ textAlign: 'center' }}>{moment(el.net).locale('ru').format('LLL')}</p>\n        </div>}>\n        {moment(el.net).utc(0).locale('ru').format('LLL z')}\n      </Tooltip>,\n      statusText: LAUNCH_STATUS[el.status],\n      statusNumber: el.status,\n      location: <div>\n        {el.location.pads.map(els => (els.name.split(',')[0]))}<br />\n        {el.location.name.split(',')[0]}\n      </div>,\n      locationWithoutPads: el.location.name,\n      spaceortName: el.location.name.split(',')[0],\n      longitude: el.location.pads.map(els => (els.longitude)),\n      latitude: el.location.pads.map(els => (els.latitude)),\n      PadsMapURL: el.location.pads.map(url => (url.mapURL)),\n      PadsWikiURL: el.location.pads.map(url => (url.wikiURL)),\n      RocketWikiURL: el.rocket.wikiURL,\n      countryCode: el.location.countryCode,\n    }))\n    // переверачиваем дату, не особо важно. Влияет только на вывод\n    oldLaunch.reverse()\n\n    return (\n      <div >\n        <Table\n          className='TableOld2'\n          columns={columns}\n          dataSource={oldLaunch}\n          pagination={{\n            position: ['bottomCenter'],\n            defaultCurrent: 1,\n            simple:\"true\",\n            pageSizeOptions: ['10', '50', '100'],\n            // showQuickJumper: \"true\",\n            // hideOnSinglePage: \"true\",\n          }}\n          size=\"small\"\n          locale={{\n            filterReset: <ClearOutlined />,\n            filterConfirm: <CheckOutlined />,\n          }}\n          loading={loading}\n        >\n        </Table>\n\n        <Modal\n          className='modal-style-from-oldTable2'\n          centered\n          visible={this.state.visible}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n          footer={null}\n          width='70%'\n          closable={false}\n        >\n          <MapChart tableData={this.state.markersLaunches} flag={true} />\n        </Modal>\n      </div>\n\n    )\n  }\n}\n\nexport default FinishedTable\n","import React from 'react'\n\nimport { Table, Tooltip, Modal, Button, Space, notification } from 'antd'\nimport moment from 'moment'\nimport 'moment/locale/ru'\n\nimport Timer from './Timer'\nimport '../css/index.css'\n\nmoment.locale()\nconst { Column, ColumnGroup } = Table;\n\nconst launchStatus = {\n  1: 'Запланированы точные дата и время запуска',\n  2: 'Дата и время будут объявлены позже',\n  3: 'Запуск прошел успешно',\n  4: 'Неудачный запуск',\n  5: 'Незапланированная задержка',\n  6: 'В полете',\n  7: 'Во время запуска произошел частичный сбой',\n}\nconst columns = [\n  {\n    title: 'Название запуска',\n    dataIndex: 'RocketAndMissionName',\n    width: '30%',\n    align: 'center',\n  },\n  {\n    title: 'Дата запуска',\n    dataIndex: 'net',\n    align: 'center',\n    width: '25%',\n  },\n  {\n    title: 'Таймер',\n    dataIndex: 'timer',\n    align: 'center',\n    width: '20%'\n  },\n  {\n    title: 'Площадка / Космодром',\n    dataIndex: 'location',\n    width: '30%',\n    align: 'center',\n  },\n]\n\nexport default ({ launches }) => {\n\n  const launchesWithTimer = launches.map(el => ({\n  rocketName: el.rocket.name,\n    location: <div>\n      {el.location.pads.map(els => (els.name.split(',')[0]))}<br />\n      {el.location.name.split(',')[0]}\n    </div>,\n    missionsName: el.missions.map(els => (els.name)),\n    RocketAndMissionName: el.name,\n    pads: el.location.pads.map(p => (p.name)),\n    net: <Tooltip title={<div><p style={{ textAlign: 'center' }}>Локальное время</p> <p style={{ textAlign: 'center' }}>{moment(el.net).locale('ru').format('LLL')}</p></div>}>{moment(el.net).utc(0).locale('ru').format('LLL z')}</Tooltip>,\n    status: launchStatus[el.status],\n    timer: <Timer timeTillLaunch={el.net} />\n  }))\n\n  return (\n    <div>\n      <Table\n        className=\"announced-table\"\n        dataSource={launchesWithTimer}\n        pagination={false}\n        size=\"small\"\n        columns={columns}\n        bordered=\"true\"\n      />\n    </div>\n  )\n}","import React from 'react'\n\nimport { Table, Pagination } from 'antd'\nimport moment from 'moment'\nimport 'moment/locale/ru'\nimport { LoadingOutlined } from '@ant-design/icons'\n\nimport '../css/index.css'\nmoment.locale()\n\n\nconst launchStatus = {\n  1: 'Запланированы точные дата и время запуска',\n  2: 'Дата и время будут объявлены позже',\n  3: 'Запуск прошел успешно',\n  4: 'Неудачный запуск',\n  5: 'Незапланированная задержка',\n  6: 'В полете',\n  7: 'Во время запуска произошел частичный сбой',\n}\n\nconst columns = [\n  {\n    title: 'Название запуска',\n    dataIndex: 'RocketAndMissionName',\n    width: '30%',\n    align: 'center',\n    className: 'launch-name-nextlaunch'\n  },\n  {\n    title: 'Дата запуска',\n    dataIndex: 'net',\n    align: 'center',\n    width: '25%',\n  },\n  {\n    title: 'Площадка / Космодром',\n    dataIndex: 'location',\n    width: '30%',\n    align: 'center',\n  },\n]\n\nexport default ({ launches }) => {\n  const launchesWithTimer = launches.map(el => ({\n    RocketAndMissionName: <p className='launchText'>{el.name}</p>,\n    location: <div>\n      {el.location.pads.map(els => (els.name.split(',')[0]))}<br />\n      {el.location.name.split(',')[0]}\n    </div>,\n    net: moment(el.net).locale('ru').format('MMMM YYYY'),\n    status: launchStatus[el.status],\n    pads: el.location.pads.map(els => (els.name)),\n  }))\n  return (\n    <Table\n      dataSource={launchesWithTimer}\n      pagination={{\n        position: ['bottomCenter'],\n        showSizeChanger: false,\n        defaultCurrent: 1,\n        // simple:\"true\",\n        showQuickJumper: false,\n        hideOnSinglePage: \"true\",\n      }}\n      size=\"small\"\n      columns={columns}\n      bordered=\"false\"\n    />\n  )\n}","import React, { Component } from 'react'\n\nimport { Layout, DatePicker, Button, notification, Divider, Alert, Tooltip, Switch } from 'antd'\nimport { UpOutlined, LoadingOutlined, InfoCircleOutlined, GithubOutlined } from '@ant-design/icons'\nimport { Parallax, ParallaxLayer } from 'react-spring/renderprops-addons'\nimport moment from 'moment'\nimport { animateScroll as scroll, scroller } from 'react-scroll'\n\nimport { Earth, Satellite2, Alien, Mars, Comet, Meteor, Satellite4, Stars, Cloud, Upi, Spaceship, RocketButton } from '../images'\nimport FinishedTable from './FinishedLaunches'\nimport AnnouncedTable from \"./AnnouncedLaunches\"\nimport ScheduledTable from './ScheduledLaunches'\nimport { FetchData } from './FetchData'\nimport '../css/index.css'\nimport MapChart from './MapChart'\n\nconst { Content, Footer } = Layout\nconst LIMIT = 10000\nconst { RangePicker } = DatePicker\nconst THIS_YEAR = moment().format('YYYY')\n\n// следующие запуски с временем и датой\nexport const URL_FOR_ANNOUNCED = 'https://launchlibrary.net/1.4/launch/next/1000?status=1,2'\n// export const URL_FOR_ANNOUNCED = 'https://launchlibrary.net/1.4/launch//1000?status=1,2'\n\n// следующие запуски с датой(без времени)\nexport const URL_FOR_SCHEDULED_LAUNCHES = 'https://launchlibrary.net/1.4/launch/next/1000?status=2'\n\n// старые запуски\nexport let URLForFinishedLaunch = 'https://launchlibrary.net/1.4/launch?startdate=' + moment(THIS_YEAR).format('YYYY-MM-DD') + '&enddate=' + moment().format('YYYY-MM-DD') + '&limit=' + LIMIT + '&fields=name,net,location,status,rocket,mapURL,countryCode'\n\nconst URL = (name, wrap = false) => `${wrap ? 'URL(' : ''}https://awv3node-homepage.surge.sh/build/assets/${name}.svg${wrap ? ')' : ''}`\nconst notificationForInvalidDate = (placement) => {\n  notification.warning({\n    message: <strong> Похоже,что за выбранный период времени запусков нет </strong>,\n    placement,\n  })\n}\n\nconst notificationMessage = (message, placement) => {\n  notification.error({\n    message,\n    placement,\n  })\n}\n\nfunction disabledDate(current) {\n  return ((current && current > moment().endOf('day')) || (current && current < moment('1961-01-01').endOf('day')))\n}\n\n\nfunction scrollFunction() {\n  if (document.body.scrollTop > 10 || document.documentElement.scrollTop > 10) {\n    document.getElementById(\"myBtn\").style.display = \"block\"\n\n  } else {\n    document.getElementById(\"myBtn\").style.display = \"none\"\n\n  }\n}\n\nwindow.addEventListener(\"scroll\", dealWithScrolling, false);\n\nfunction dealWithScrolling(e) {\n  console.log('check');\n\n}\n\nclass MapLaunches extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      AnnouncedData: null,\n      ScheduledData: null,\n      FinishedData: null,\n      visible: false,\n      loading: false,\n      disabledSlider: false,\n      dataArrayForMarkers: [],\n      show: false,\n      testArr: [777]\n\n    }\n    this.launchDateButtonOnChange = this.launchDateButtonOnChange.bind(this)\n    this.timeBeforeToShowMarkers = this.timeBeforeToShowMarkers.bind(this)\n    this.func = this.func.bind(this)\n    this.scrollToTop = this.scrollToTop.bind(this)\n  }\n\n  scrollToTop() {\n    scroll.scrollToTop();\n  }\n\n  fetchAnnounced(url) {\n    fetch(url)\n      .then((res) => {\n        if (res.ok) {\n          fetch(url)\n            .then(res => res.json())\n            .then(res => this.setState({ AnnouncedData: res }))\n        }\n      })\n  }\n\n  fetchScheduled(url) {\n    fetch(url)\n      .then(response => response.json())\n      .then(data => this.setState({ ScheduledData: data }))\n  }\n\n  fetchFinished(url) {\n    this.setState({ loading: true })\n    fetch(url)\n      .then(response => response.json())\n      .then(data => this.setState({ FinishedData: data, loading: false, }))\n  }\n\n\n  componentDidMount() {\n    this.fetchAnnounced(URL_FOR_ANNOUNCED)\n    this.fetchScheduled(URL_FOR_SCHEDULED_LAUNCHES)\n    this.fetchFinished(URLForFinishedLaunch)\n    // this.validationOf(URL_FOR_ANNOUNCED, this.state.testArr)\n  }\n\n  validationOf = (url, testArr) => {\n    // fetch(url)\n    //   .then((res) => {\n    //     if (res.ok) {\n    //       fetch(url)\n    //         .then(res => res.json())\n    //         .then(res => this.setState({ arr : res }))\n    //     } else {\n    //       console.log('нет')\n    //     }\n    //   })\n    fetch(url)\n      .then(res => res.json())\n      .then(res => this.setState({ arr: res }))\n  }\n\n  showModal = () => {\n    this.setState({\n      visible: true,\n    })\n  }\n\n  handleOk = e => {\n    this.setState({\n      visible: false,\n    })\n  }\n\n  handleCancel = e => {\n    this.setState({\n      visible: false,\n    })\n  }\n\n  async validationOfDate(url) {\n    this.setState({ loading: true })\n    let res = await fetch(url)\n    if (res.ok) { // если HTTP-статус в диапазоне 200-299 получаем новые данные иначе Notification\n      this.fetchFinished(url)\n    } else {\n      notificationForInvalidDate('topRight')\n      this.setState({ loading: false })\n    }\n  }\n\n  launchDateButtonOnChange(date, dateString) {\n    URLForFinishedLaunch = `https://launchlibrary.net/1.4/launch?startdate=${dateString[0]}&enddate=${dateString[1]}&limit=${LIMIT}&fields=name,net,location,status,rocket,mapURL,countryCode`\n    this.validationOfDate(URLForFinishedLaunch)\n  }\n\n  timeBeforeToShowMarkers() {\n    let secondsToGo = 1\n\n    const timer = setInterval(() => {\n      secondsToGo -= 1\n    }, 1000);\n\n    setTimeout(() => {\n      clearInterval(timer)\n      this.func()\n    }, secondsToGo * 1000)\n\n  }\n\n  scrollToTop() {\n    scroll.scrollToTop();\n  }\n\n  func() {\n    let count = this.state.FinishedData.launches.length\n    const timer = setInterval(() => {\n      console.log(count)\n      count--\n      this.setState({ dataArrayForMarkers: [this.state.FinishedData.launches[count]] })\n      console.log(this.state.dataArrayForMarkers);\n    }, 1000)\n\n    setTimeout(() => {\n      clearInterval(timer)\n      console.log(this.state.FinishedData);\n    }, count * 1000)\n  }\n\n  render() {\n    const { AnnouncedData, ScheduledData, FinishedData, loading, dataArrayForMarkers } = this.state\n    return (\n      <div  >\n        {ScheduledData && FinishedData\n          ?\n          <div>\n            <Parallax pages={2.5} className='background-parallax' ref={ref => (this.parallax = ref)}>\n\n              <ParallaxLayer offset={0} speed={0.5} style={{ opacity: '80%', marginTop: '130px', }}>\n                {AnnouncedData\n                  ? <div><h1 style={{ textAlign: 'center' }}>Обьявленные запуски</h1>\n                    <AnnouncedTable launches={AnnouncedData.launches} /></div>\n                  : <Alert className='alert-if-no-launch'\n                      message=\"Ближайших запусков не найдено!\"\n                      description=\"Похоже, вам придётся зайти в другое время!\"\n                      type=\"warning\"\n                      showIcon\n                  />\n                }\n              </ParallaxLayer>\n              {/* Здесь лежат загружаемые модули (облака, планеты и т.д.) */}\n              {/* <ParallaxLayer offset={0} speed={0} factor={3.15} style={{  backgroundSize: 'cover' }} className='background' /> */}\n\n              <ParallaxLayer offset={2.3} speed={-0.1} style={{ pointerEvents: 'none' }}>\n                <img src={Satellite2} style={{ width: '15%', marginLeft: '70%' }} />\n              </ParallaxLayer>\n\n              <ParallaxLayer offset={1.9} speed={0} style={{ pointerEvents: 'none' }}>\n                <img src={Alien} className='Alien' />\n              </ParallaxLayer>\n\n              <ParallaxLayer offset={1.9} speed={-0.3} style={{ pointerEvents: 'none' }}>\n                <img src={Earth} style={{ width: '40%', marginLeft: '70%' }} />\n              </ParallaxLayer>\n\n              <ParallaxLayer offset={1.96} speed={-0.4} style={{ opacity: 0.9 }}>\n                <img src={Cloud} style={{ display: 'block', width: '15%', marginLeft: '85%' }} />\n              </ParallaxLayer>\n\n              <ParallaxLayer offset={1} speed={0.8} style={{ opacity: 0.1 }}>\n                <img src={Cloud} style={{ display: 'block', width: '20%', marginLeft: '55%' }} />\n                <img src={Cloud} style={{ display: 'block', width: '10%', marginLeft: '15%' }} />\n              </ParallaxLayer>\n\n              <ParallaxLayer offset={1.75} speed={0.5} style={{ opacity: 0.1 }}>\n                <img src={Cloud} style={{ display: 'block', width: '20%', marginLeft: '70%' }} />\n                <img src={Cloud} style={{ display: 'block', width: '20%', marginLeft: '40%' }} />\n              </ParallaxLayer>\n\n              <ParallaxLayer offset={1} speed={0.2} style={{ opacity: 0.2 }}>\n                <img src={Cloud} style={{ display: 'block', width: '10%', marginLeft: '10%' }} />\n                <img src={Cloud} style={{ display: 'block', width: '20%', marginLeft: '75%' }} />\n              </ParallaxLayer>\n\n              <ParallaxLayer offset={1.6} speed={-0.1} style={{ opacity: 0.4 }}>\n                <img src={Cloud} style={{ display: 'block', width: '20%', marginLeft: '60%' }} />\n                <img src={Cloud} style={{ display: 'block', width: '25%', marginLeft: '30%' }} />\n                <img src={Cloud} style={{ display: 'block', width: '10%', marginLeft: '80%' }} />\n              </ParallaxLayer>\n\n              <ParallaxLayer offset={2.1} speed={0.4} style={{ opacity: 0.6 }}>\n                <img src={Cloud} style={{ display: 'block', width: '20%', marginLeft: '5%' }} />\n                <img src={Cloud} style={{ display: 'block', width: '15%', marginLeft: '75%' }} />\n              </ParallaxLayer>\n\n              <ParallaxLayer offset={2.35} speed={0.4} style={{ opacity: 0.6 }}>\n                <img src={Cloud} style={{ display: 'block', width: '10%', marginLeft: '37%' }} />\n              </ParallaxLayer>\n\n              <ParallaxLayer offset={0.1} speed={-0.6} style={{ pointerEvents: 'none' }}>\n                <img src={Satellite4} style={{ width: '15%', marginRight: '65%' }} />\n              </ParallaxLayer>\n\n              <ParallaxLayer offset={1.17} speed={-2.3} style={{ pointerEvents: 'none' }}>\n                <img src={Comet} style={{ width: '15%', marginLeft: '15%' }} />\n              </ParallaxLayer>\n\n              <ParallaxLayer offset={0.6} speed={-0.3} style={{ pointerEvents: 'none' }}>\n                <img src={Upi} style={{ width: '10%', marginLeft: '55%' }} className='upi' />\n              </ParallaxLayer>\n\n              <ParallaxLayer offset={2.25} speed={-0.4} style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', pointerEvents: 'none' }}>\n                <img src={Mars} style={{ width: '50%', marginRight: '62%' }} />\n              </ParallaxLayer>\n\n\n\n\n              {/*Здесь лежит таблицы */}\n\n\n              <ParallaxLayer offset={0.999} speed={1} style={{ opacity: '80%', marginLeft: '10%', width: '80%' }}>\n                <h1 style={{ textAlign: 'center' }}>Запланированные запуски</h1>\n                <ScheduledTable launches={ScheduledData.launches} />\n              </ParallaxLayer>\n\n              <ParallaxLayer offset={1.6} speed={1.2} style={{ opacity: '80%', marginLeft: 'auto', marginRight: 'auto', width: '80%', marginLeft: '9%', }}>\n                <h1 style={{ textAlign: 'center' }}>Состоявшиеся запуски</h1>\n                <RangePicker className=\"RangePicker\"\n                  defaultValue={[moment(THIS_YEAR), moment()]}\n                  showToday={false, true}\n                  onChange={this.launchDateButtonOnChange}\n                  disabledDate={disabledDate}\n                  allowClear={false}\n                  style={{ margin: 10 }}\n                />\n                <Tooltip title={<p > Здесь можно настроить период запусков </p>}\n                  mouseEnterDelay={0.2}\n                  mouseLeaveDelay={0.5}\n                  placement=\"top\" >\n                  <InfoCircleOutlined />\n                </Tooltip>\n                <FinishedTable launches={FinishedData.launches} loading={loading} />\n              </ParallaxLayer>\n\n              <ParallaxLayer offset={0.89} speed={-1} style={{ width: '50%' }}>\n                <Button\n                  type=\"primary\"\n                  shape=\"circle\"\n                  icon={<UpOutlined />}\n                  onClick={() => this.parallax.scrollTo(0)}\n                  // id=\"myBtn\"\n                  title=\"Наверх!\"\n                  className='myBtn'\n                />\n              </ParallaxLayer>\n            </Parallax>\n          </div>\n          : <div style={{ backgroundColor: '#253237', minHeight: '100vh', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n            <LoadingOutlined style={{ fontSize: '100px' }} />\n          </div>\n        }\n      </div>\n    )\n  }\n}\n\nexport default MapLaunches\n\n","import React from 'react'\nimport { Parallax, ParallaxLayer } from 'react-spring/renderprops-addons'\n\nconst url = (name, wrap = false) => `${wrap ? 'url(' : ''}https://awv3node-homepage.surge.sh/build/assets/${name}.svg${wrap ? ')' : ''}`\n\nclass HomePage extends React.Component {\n  render() {\n    return (\n      <Parallax pages={3.15}>\n        <ParallaxLayer offset={1} speed={1}\n          style={{ backgroundColor: '#805E73' }}\n        />\n\n        <ParallaxLayer offset={2} speed={1}\n          style={{ backgroundColor: '#87BCDE' }}\n        />\n\n        <ParallaxLayer offset={0} speed={0} factor={3.5} style={{ backgroundImage: url('stars', true), backgroundSize: 'cover', backgroundColor: '#253237' }} />\n\n        {/* <ParallaxLayer offset={2.3} speed={-0.1} style={{ pointerEvents: 'none' }}>\n              <img src={url('satellite2')} style={{ width: '15%', marginLeft: '70%' }} />\n            </ParallaxLayer>\n\n            //земля\n            <ParallaxLayer offset={2.5} speed={-0.3} style={{ pointerEvents: 'none' }}>\n              <img src={url('earth')} style={{ width: '45%', marginLeft: '70%' }} />\n            </ParallaxLayer>\n            <ParallaxLayer offset={2.46} speed={-0.4} style={{ opacity: 0.9 }}>\n              <img src={url('cloud')} style={{ display: 'block', width: '15%', marginLeft: '85%' }} />\n            </ParallaxLayer>\n\n            <ParallaxLayer offset={1} speed={0.8} style={{ opacity: 0.1 }}>\n              <img src={url('cloud')} style={{ display: 'block', width: '20%', marginLeft: '55%' }} />\n              <img src={url('cloud')} style={{ display: 'block', width: '10%', marginLeft: '15%' }} />\n            </ParallaxLayer>\n\n            <ParallaxLayer offset={1.75} speed={0.5} style={{ opacity: 0.1 }}>\n              <img src={url('cloud')} style={{ display: 'block', width: '20%', marginLeft: '70%' }} />\n              <img src={url('cloud')} style={{ display: 'block', width: '20%', marginLeft: '40%' }} />\n            </ParallaxLayer>\n\n            <ParallaxLayer offset={1} speed={0.2} style={{ opacity: 0.2 }}>\n              <img src={url('cloud')} style={{ display: 'block', width: '10%', marginLeft: '10%' }} />\n              <img src={url('cloud')} style={{ display: 'block', width: '20%', marginLeft: '75%' }} />\n            </ParallaxLayer>\n\n            <ParallaxLayer offset={1.6} speed={-0.1} style={{ opacity: 0.4 }}>\n              <img src={url('cloud')} style={{ display: 'block', width: '20%', marginLeft: '60%' }} />\n              <img src={url('cloud')} style={{ display: 'block', width: '25%', marginLeft: '30%' }} />\n              <img src={url('cloud')} style={{ display: 'block', width: '10%', marginLeft: '80%' }} />\n            </ParallaxLayer>\n\n            <ParallaxLayer offset={2.6} speed={0.4} style={{ opacity: 0.6 }}>\n              <img src={url('cloud')} style={{ display: 'block', width: '20%', marginLeft: '5%' }} />\n              <img src={url('cloud')} style={{ display: 'block', width: '15%', marginLeft: '75%' }} />\n            </ParallaxLayer>\n\n            <ParallaxLayer offset={2.85} speed={0.4} style={{ opacity: 0.6 }}>\n              <img src={url('cloud')} style={{ display: 'block', width: '10%', marginLeft: '37%' }} />\n            </ParallaxLayer>\n\n            <ParallaxLayer offset={0.1} speed={-0.6} style={{ pointerEvents: 'none' }}>\n              <img src={url('satellite4')} style={{ width: '15%', marginRight: '65%' }} />\n            </ParallaxLayer>\n\n            // комета\n            <ParallaxLayer offset={1.2} speed={-1.5} style={{ pointerEvents: 'none' }}>\n              <img src={'https://image.flaticon.com/icons/svg/2909/2909590.svg'} style={{ width: '15%', marginLeft: '15%' }} />\n            </ParallaxLayer>\n\n            // планета\n            <ParallaxLayer offset={0.6} speed={-0.3} style={{ pointerEvents: 'none' }}>\n              <img src={'https://image.flaticon.com/icons/svg/2929/2929375.svg'} style={{ width: '10%', marginLeft: '55%' }} />\n            </ParallaxLayer>\n\n            // \n            <ParallaxLayer offset={2.7} speed={-0.4} style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', pointerEvents: 'none' }}>\n              <img src={'https://image.flaticon.com/icons/svg/2277/2277588.svg'} style={{ width: '60%', marginRight: '45%' }} />\n            </ParallaxLayer> */}\n\n      </Parallax>\n    )\n  }\n}\n\nexport default HomePage\n","import React, { Component } from 'react'\n\nimport { Layout, Menu, Button } from 'antd'\nimport { HomeOutlined, RocketOutlined, AreaChartOutlined, UpOutlined } from '@ant-design/icons'\nimport { Route, NavLink } from \"react-router-dom\"\nimport { animateScroll as scroll } from 'react-scroll'\n// import 'antd/dist/antd.css'\nimport 'antd/dist/antd.dark.css'\n\nimport '../css/index.css' // стандарт\nimport MapLaunches from './Launches'\nimport Static from './testComponents/Static'\nimport HomePage from './HomePage'\n\nfunction scrollFunction() {\n  if (document.body.scrollTop > 10 || document.documentElement.scrollTop > 10) {\n    document.getElementById(\"myBtn\").style.display = \"block\"\n\n  } else {\n    document.getElementById(\"myBtn\").style.display = \"none\"\n\n  }\n}\nwindow.onscroll = function () { scrollFunction() };\n\nconst { Header, Footer } = Layout\n\nclass LayoutContainer extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n    }\n    this.scrollToTop = this.scrollToTop.bind(this);\n  }\n\n  scrollToTop() {\n    scroll.scrollToTop();\n  }\n\n  render() {\n    return (\n      <div>\n        <Layout id=\"layout\" >\n\n          <Header style={{ backgroundColor: '#253237', position: 'fixed', zIndex: 1, width: '100%' }} >\n            <Menu\n              // defaultSelectedKeys={['1']} \n              theme='dark'\n              mode=\"horizontal\"\n              style={{ textAlign: 'right', backgroundColor: '#253237' }}>\n              <Menu.Item key=\"1\" icon={<HomeOutlined />}>     <NavLink to=\"/\">          Приветсвие    </NavLink></Menu.Item>\n              {/* <Menu.Item key=\"2\" icon={<AreaChartOutlined />}><NavLink to=\"/static\">    Cтатистика    </NavLink></Menu.Item> */}\n              <Menu.Item key=\"3\" icon={<RocketOutlined />}>   <NavLink to=\"/launches\">  Запуски       </NavLink></Menu.Item>\n            </Menu>\n          </Header>\n\n          <Layout className='layout-content'>\n            <Route exact path='/' component={HomePage} />\n            {/* <Route exact path='/static' component={Static} /> */}\n            <Route exact path='/launches' component={MapLaunches} />\n\n            <Button\n              type=\"primary\"\n              shape=\"circle\"\n              icon={<UpOutlined />}\n              onClick={scroll.scrollToTop}\n              id=\"myBtn\"\n              title=\"Наверх!\"\n            />\n            {/* <Footer>\n              Design © 2020 <br></br>\n              <GithubOutlined />\n              <a href=\"https://github.com/SShaposhnik/global-launches-app\" target=\"_blank\"> Github</a>\n            </Footer> */}\n          </Layout>\n        </Layout>\n\n      </div>\n    )\n  }\n}\n\nexport default LayoutContainer","import React, {useState} from 'react'\n\nimport LayoutContainer from './catalog/component/Layout'\nimport './catalog/css/index.scss'\n\n\nfunction App() {\n\n  // const [preload, setPreload] = useState(false)\n\n  // function func () {\n  //   setPreload(true)\n  // }\n  // setTimeout(func, 3000)\n  return (\n    <div className=\"App\">\n      {true\n        ? <div>\n          <LayoutContainer />\n        </div>\n        : <div id=\"hellopreloader\">\n          <div id=\"hellopreloader_preload\">\n            <div className=\"container\">\n              <div className=\"element\"></div>\n              <div className=\"element\"></div>\n              <div className=\"element\"></div>\n              <div className=\"element\"></div>\n              <div className=\"element\"></div>\n            </div>\n          </div>\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { HashRouter } from 'react-router-dom'\n\nimport App from './App'\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>\n  , document.getElementById('root')\n)"],"sourceRoot":""}